version: "2.2"
services:
  nginx:
    image: nginx:alpine
    container_name: kubeops_nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./docker/nginx/f2o.conf:/etc/nginx/conf.d/default.conf
    healthcheck:
      test: ["CMD", "test", "-f", "/var/run/nginx.pid"]
      interval: 10s
      timeout: 5s
      retries: 10

  ui:
    build: ui
    image: kube-operator/ui:2.1.0
    container_name: kubeops_ui
    restart: always
    healthcheck:
      test: ["CMD", "test", "-f", "/var/run/nginx.pid"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      api:
        condition: service_healthy

  api:
    build: api
    image: kube-operator/api:2.1.0
    container_name: kubeops_api
    restart: always
    privileged: true
    tty: true
    dns:
      - "127.0.0.1"
    volumes:
      - ./data:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/kubeoperator/data/dns/:/opt/kubeOperator-api/dns/
      - terraform_data:/opt/kubeOperator-api/data/terraform
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: SuMk2lH20ocmvyu1p38m40
      DB_NAME: kube-operator
      REDIS_HOST: redis
    healthcheck:
      test: "curl localhost:8000"
      interval: 10s
      timeout: 5s
      retries: 20
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy


  mysql:
    container_name: kubeops_mysql
    image: mysql:5
    command: [
              '--character-set-server=utf8',
              '--default-time-zone=+8:00'
    ]
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: kube-operator
      MYSQL_ROOT_PASSWORD: SuMk2lH20ocmvyu1p38m40
      TZ: Asia/Shanghai
    healthcheck:
      test: "mysql -uroot -h127.0.0.1 -pSuMk2lH20ocmvyu1p38m40 -e 'SHOW DATABASES;'"
      interval: 10s
      timeout: 5s
      retries: 10

  redis:
    image: redis:alpine
    container_name: kubeops_redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "info"]
      interval: 10s
      timeout: 5s
      retries: 10
    environment:
      TZ: Asia/Shanghai
  dns:
    image: coredns/coredns:1.6.0
    container_name: kubeops_dns
    volumes:
      - /opt/kubeoperator/data/dns:/root
    ports:
      - 53:53/tcp
      - 53:53/udp
    command: ['--conf','/root/dns.conf']
  webkubectl:
    image: webkubectl/webkubectl:v1.4
    container_name: kubeops_webkubectl
    restart: always
    privileged: true
    healthcheck:
      test: "curl localhost:8080"
      interval: 10s
      timeout: 5s
      retries: 10
  elasticsearch:
    image: elasticsearch:7.4.1
    container_name: kubeops_elasticsearch
    restart: always
    environment:
      discovery.type: single-node
    volumes:
      - es_data:/usr/share/elasticsearch/data
    healthcheck:
      test: "curl localhost:9200"
      interval: 10s
      timeout: 5s
      retries: 10  

volumes:
  api_data:
  mysql_data:
  redis_data:
  es_data:
  terraform_data:
networks:
  default:
