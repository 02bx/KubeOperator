# Generated by Django 2.1.11 on 2019-11-11 04:19

import common.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ansible_api', '0002_auto_20190305_0555'),
        ('cloud_provider', '0002_auto_20191111_0419'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackupStorage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Name')),
                ('region', models.CharField(blank=True, max_length=128, null=True)),
                ('credentials', common.models.JsonDictTextField(default={})),
                ('type', models.CharField(choices=[('S3', 'S3'), ('OSS', 'OSS'), ('AZURE', 'AZURE')], max_length=64)),
                ('status', models.CharField(choices=[('VALID', 'valid'), ('INVALID', 'invalid')], default='VALID', max_length=64)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
        ),
        migrations.CreateModel(
            name='BackupStrategy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('cron', models.IntegerField(default=0)),
                ('save_num', models.IntegerField(default=0)),
                ('backup_storage_id', models.CharField(blank=True, max_length=64, null=True)),
                ('project_id', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('status', models.CharField(choices=[('ENABLE', 'Enable'), ('DISABLE', 'Disable')], default='DISABLE', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('project_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ansible_api.Project')),
                ('persistent_storage', models.CharField(blank=True, max_length=128, null=True)),
                ('network_plugin', models.CharField(blank=True, max_length=128, null=True)),
                ('template', models.CharField(blank=True, default='', max_length=64)),
                ('worker_size', models.IntegerField(default=3)),
                ('status', models.CharField(choices=[('RUNNING', 'running'), ('INSTALLING', 'installing'), ('DELETING', 'deleting'), ('READY', 'ready'), ('ERROR', 'error'), ('WARNING', 'warning'), ('UPGRADING', 'upgrading'), ('SCALING', 'scaling'), ('RESTORING', 'restoring'), ('BACKUP', 'backup')], default='READY', max_length=128)),
                ('deploy_type', models.CharField(choices=[('MANUAL', 'manual'), ('AUTOMATIC', 'automatic')], default='MANUAL', max_length=128)),
                ('configs', common.models.JsonDictTextField(default={})),
                ('cluster_doamin_suffix', models.CharField(max_length=256, null=True)),
            ],
            options={
                'ordering': ('date_created',),
            },
            bases=('ansible_api.project',),
        ),
        migrations.CreateModel(
            name='ClusterBackup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('size', models.IntegerField(default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('project_id', models.CharField(max_length=256)),
                ('folder', models.CharField(max_length=64)),
                ('backup_storage_id', models.CharField(default='', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ClusterHealthHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('project_id', models.CharField(max_length=255)),
                ('available_rate', models.IntegerField(default=0)),
                ('date_type', models.CharField(choices=[('DAY', 'DAY'), ('HOUR', 'HOUR')], default='HOUR', max_length=255)),
                ('month', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Credential',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.SlugField(allow_unicode=True, max_length=128, unique=True, verbose_name='Name')),
                ('username', models.CharField(default='root', max_length=256)),
                ('password', common.models.EncryptCharField(blank=True, max_length=4096, null=True)),
                ('private_key', common.models.EncryptCharField(blank=True, max_length=8192, null=True)),
                ('type', models.CharField(choices=[('password', 'password'), ('privateKey', 'privateKey')], default='password', max_length=128)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeployExecution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('timedelta', models.FloatField(default=0.0, null=True, verbose_name='Time')),
                ('state', models.CharField(choices=[('PENDING', 'Pending'), ('STARTED', 'Started'), ('SUCCESS', 'Success'), ('FAILURE', 'Failure'), ('RETRY', 'Retry')], default='PENDING', max_length=16)),
                ('num', models.IntegerField(default=1)),
                ('result_summary', common.models.JsonDictTextField(blank=True, default={}, null=True, verbose_name='Result summary')),
                ('result_raw', common.models.JsonDictTextField(blank=True, default={}, null=True, verbose_name='Result raw')),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Create time')),
                ('date_start', models.DateTimeField(null=True, verbose_name='Start time')),
                ('date_end', models.DateTimeField(null=True, verbose_name='End time')),
                ('operation', models.CharField(max_length=128)),
                ('params', common.models.JsonDictTextField(default={})),
                ('steps', common.models.JsonListTextField(default=[], null=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ansible_api.Project')),
            ],
            options={
                'ordering': ('-date_created',),
                'get_latest_by': 'date_created',
            },
        ),
        migrations.CreateModel(
            name='DNS',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('dns1', models.CharField(max_length=128, null=True)),
                ('dns2', models.CharField(max_length=128, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
            options={
                'ordering': ('-date_created',),
                'get_latest_by': 'date_created',
            },
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('ip', models.GenericIPAddressField(null=True)),
                ('port', models.IntegerField(default=22)),
                ('private_key', common.models.EncryptCharField(blank=True, max_length=8192, null=True)),
                ('vars', common.models.JsonDictTextField(default={})),
                ('meta', common.models.JsonDictTextField(default={})),
                ('comment', models.TextField(blank=True)),
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True, validators=[django.core.validators.RegexValidator(message='Enter a valid name consisting of Unicode letters, numbers, underscores, or hyphens, or dot', regex='^[a-zA-Z0-9_\\-\\.]+$')])),
                ('memory', models.BigIntegerField(default=0)),
                ('os', models.CharField(default='', max_length=128)),
                ('os_version', models.CharField(default='', max_length=128)),
                ('cpu_core', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('RUNNING', 'running'), ('CREATING', 'creating'), ('UNKNOWN', 'unknown')], default='UNKNOWN', max_length=128)),
                ('username', models.CharField(default='root', max_length=256)),
                ('password', common.models.EncryptCharField(blank=True, default='KubeOperator@2019', max_length=4096, null=True)),
                ('auto_gather_info', models.BooleanField(default=True, null=True)),
                ('credential', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kubeops_api.Credential')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('host_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='ansible_api.Host')),
                ('host', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='host', to='kubeops_api.Host')),
            ],
            options={
                'ordering': ['name'],
            },
            bases=('ansible_api.host',),
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Name')),
                ('meta', common.models.JsonTextField(blank=True, null=True, verbose_name='Meta')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date created')),
            ],
            options={
                'verbose_name': 'Package',
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=128)),
                ('value', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('name', models.CharField(max_length=128)),
                ('helper', models.CharField(blank=True, max_length=255)),
                ('order', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Volume',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('size', models.CharField(max_length=16)),
            ],
            options={
                'ordering': ('size',),
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('ansible_api.group',),
        ),
        migrations.AddField(
            model_name='host',
            name='node',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='node', to='kubeops_api.Node'),
        ),
        migrations.AddField(
            model_name='host',
            name='volumes',
            field=models.ManyToManyField(to='kubeops_api.Volume'),
        ),
        migrations.AddField(
            model_name='host',
            name='zone',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='cloud_provider.Zone'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='package',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='kubeops_api.Package'),
        ),
        migrations.AddField(
            model_name='cluster',
            name='plan',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cloud_provider.Plan'),
        ),
    ]
