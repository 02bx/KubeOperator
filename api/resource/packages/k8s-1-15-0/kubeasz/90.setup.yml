# download bin
- name: prepare kube bin files
  hosts: localhost
  connection: local
  roles:
    - kube-bin

# to create CA, kubeconfig, kube-proxy.kubeconfig etc. on 'deploy' node
- hosts: "{{groups['kube-master'][0]}}"
  roles:
    - deploy

# prepare tasks for all nodes
- hosts:
    - kube-master
    - kube-node
    - deploy
    - etcd
    - lb
  roles:
    - prepare

# [optional] to install loadbalance service, only needed by multi-master cluster
- hosts: lb
  roles:
    - lb

# to install etcd cluster
- hosts: etcd
  roles:
    - etcd

- hosts: kube-node
  roles:
    - docker

# to set up 'kube-master' nodes
- hosts: kube-master
  roles:
    - kube-master
  #
  tasks:
    - name: 下载helm客户端
      copy: src={{ base_dir }}/bin/helm dest={{ bin_dir }}/helm mode=0755

    - name: Setting master role name
      shell: "{{ bin_dir }}/kubectl label node {{ inventory_hostname }} kubernetes.io/role=master --overwrite"
      ignore_errors: true
      delegate_to: "{{ groups['kube-master'][0] }}"

# to set up 'kube-node' nodes
- hosts: kube-node
  roles:
    - { role: kube-node, when: "DEPLOY_MODE != 'allinone'" }

# to install network plugin, only one can be choosen


- hosts:
    - kube-node
  roles:
    - { role: flannel, when: "CLUSTER_NETWORK == 'flannel'" }


# to install storage_class
- hosts: "{{groups['kube-master'][0]}}"
  roles:
    - cluster-storage

# to install helm
- hosts: "{{groups['kube-master'][0]}}"
  roles:
    - helm

# to install cluster-addons
- hosts:
    - "{{groups['kube-master'][0]}}"
  roles:
    - cluster-addon

- hosts: "{{groups['kube-master'][0]}}"
  roles:
    - registry

- hosts: "cluster_nodes"
  tasks:
    - name: 尝试登陆 registry
      shell: "docker login registry.{{APP_DOMAIN}} -u {{REGISTRY_ACCOUNT_NAME}} -p {{REGISTRY_ACCOUNT_PASSWORD}}"
      register: login_result
      until: login_result.rc == 0
      retries: 5
      delay: 30

