{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/business/business.module.ts","./src/app/business/cluster/cluster-condition/cluster-condition.component.ts","./src/app/business/cluster/cluster-condition/cluster-condition.component.html","./src/app/business/cluster/cluster-create/cluster-create.component.ts","./src/app/business/cluster/cluster-create/cluster-create.component.html","./src/app/business/cluster/cluster-delete/cluster-delete.component.ts","./src/app/business/cluster/cluster-delete/cluster-delete.component.html","./src/app/business/cluster/cluster-detail/cluster-detail.component.ts","./src/app/business/cluster/cluster-detail/cluster-detail.component.html","./src/app/business/cluster/cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component.ts","./src/app/business/cluster/cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component.html","./src/app/business/cluster/cluster-detail/dashboard/dashboard.component.ts","./src/app/business/cluster/cluster-detail/dashboard/dashboard.component.html","./src/app/business/cluster/cluster-detail/logging/logging-query/logging-query.component.ts","./src/app/business/cluster/cluster-detail/logging/logging-query/logging-query.component.html","./src/app/business/cluster/cluster-detail/logging/logging.component.ts","./src/app/business/cluster/cluster-detail/logging/logging.component.html","./src/app/business/cluster/cluster-detail/logging/logging.service.ts","./src/app/business/cluster/cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component.ts","./src/app/business/cluster/cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component.html","./src/app/business/cluster/cluster-detail/monitor/monitor.component.ts","./src/app/business/cluster/cluster-detail/monitor/monitor.component.html","./src/app/business/cluster/cluster-detail/namespace/namespace-list/namespace-list.component.ts","./src/app/business/cluster/cluster-detail/namespace/namespace-list/namespace-list.component.html","./src/app/business/cluster/cluster-detail/namespace/namespace.component.ts","./src/app/business/cluster/cluster-detail/namespace/namespace.component.html","./src/app/business/cluster/cluster-detail/node/node-create/node-create.component.ts","./src/app/business/cluster/cluster-detail/node/node-create/node-create.component.html","./src/app/business/cluster/cluster-detail/node/node-delete/node-delete.component.ts","./src/app/business/cluster/cluster-detail/node/node-delete/node-delete.component.html","./src/app/business/cluster/cluster-detail/node/node-detail/node-detail.component.ts","./src/app/business/cluster/cluster-detail/node/node-detail/node-detail.component.html","./src/app/business/cluster/cluster-detail/node/node-list/node-list.component.ts","./src/app/business/cluster/cluster-detail/node/node-list/node-list.component.html","./src/app/business/cluster/cluster-detail/node/node-status/node-status.component.ts","./src/app/business/cluster/cluster-detail/node/node-status/node-status.component.html","./src/app/business/cluster/cluster-detail/node/node.component.ts","./src/app/business/cluster/cluster-detail/node/node.component.html","./src/app/business/cluster/cluster-detail/node/node.service.ts","./src/app/business/cluster/cluster-detail/node/node.ts","./src/app/business/cluster/cluster-detail/not-ready/not-ready.component.ts","./src/app/business/cluster/cluster-detail/not-ready/not-ready.component.html","./src/app/business/cluster/cluster-detail/overview/overview.component.ts","./src/app/business/cluster/cluster-detail/overview/overview.component.html","./src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.component.ts","./src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.component.html","./src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.service.ts","./src/app/business/cluster/cluster-detail/repository/chartmuseum/chart-list/chart-list.component.ts","./src/app/business/cluster/cluster-detail/repository/chartmuseum/chart-list/chart-list.component.html","./src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component.ts","./src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component.html","./src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.service.ts","./src/app/business/cluster/cluster-detail/repository/registry/registry-list/registry-list.component.ts","./src/app/business/cluster/cluster-detail/repository/registry/registry-list/registry-list.component.html","./src/app/business/cluster/cluster-detail/repository/registry/registry.component.ts","./src/app/business/cluster/cluster-detail/repository/registry/registry.component.html","./src/app/business/cluster/cluster-detail/repository/registry/registry.service.ts","./src/app/business/cluster/cluster-detail/repository/registry/registry.ts","./src/app/business/cluster/cluster-detail/repository/repository.component.ts","./src/app/business/cluster/cluster-detail/repository/repository.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component.html","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component.ts","./src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component.html","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component.html","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component.html","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-class/storage-class.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component.html","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.service.ts","./src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.ts","./src/app/business/cluster/cluster-detail/storage/storage.component.ts","./src/app/business/cluster/cluster-detail/storage/storage.component.html","./src/app/business/cluster/cluster-detail/tools/tools-enable/tools-enable.component.ts","./src/app/business/cluster/cluster-detail/tools/tools-enable/tools-enable.component.html","./src/app/business/cluster/cluster-detail/tools/tools-failed/tools-failed.component.ts","./src/app/business/cluster/cluster-detail/tools/tools-failed/tools-failed.component.html","./src/app/business/cluster/cluster-detail/tools/tools-list/tools-list.component.ts","./src/app/business/cluster/cluster-detail/tools/tools-list/tools-list.component.html","./src/app/business/cluster/cluster-detail/tools/tools.component.ts","./src/app/business/cluster/cluster-detail/tools/tools.component.html","./src/app/business/cluster/cluster-detail/tools/tools.service.ts","./src/app/business/cluster/cluster-detail/tools/tools.ts","./src/app/business/cluster/cluster-import/cluster-import.component.ts","./src/app/business/cluster/cluster-import/cluster-import.component.html","./src/app/business/cluster/cluster-list/cluster-list.component.ts","./src/app/business/cluster/cluster-list/cluster-list.component.html","./src/app/business/cluster/cluster-routing-resolver.service.ts","./src/app/business/cluster/cluster.component.ts","./src/app/business/cluster/cluster.component.html","./src/app/business/cluster/cluster.module.ts","./src/app/business/cluster/cluster.service.ts","./src/app/business/cluster/cluster.ts","./src/app/business/cluster/kubernetes.service.ts","./src/app/business/cluster/logging.service.ts","./src/app/business/deploy-plan/deploy-plan.component.ts","./src/app/business/deploy-plan/deploy-plan.component.html","./src/app/business/deploy-plan/deploy-plan.module.ts","./src/app/business/deploy-plan/plan/plan-create/plan-create.component.ts","./src/app/business/deploy-plan/plan/plan-create/plan-create.component.html","./src/app/business/deploy-plan/plan/plan-delete/plan-delete.component.ts","./src/app/business/deploy-plan/plan/plan-delete/plan-delete.component.html","./src/app/business/deploy-plan/plan/plan-detail/plan-detail.component.ts","./src/app/business/deploy-plan/plan/plan-detail/plan-detail.component.html","./src/app/business/deploy-plan/plan/plan-list/plan-list.component.ts","./src/app/business/deploy-plan/plan/plan-list/plan-list.component.html","./src/app/business/deploy-plan/plan/plan.component.ts","./src/app/business/deploy-plan/plan/plan.component.html","./src/app/business/deploy-plan/plan/plan.module.ts","./src/app/business/deploy-plan/plan/plan.service.ts","./src/app/business/deploy-plan/plan/plan.ts","./src/app/business/deploy-plan/region/cloud-provider.service.ts","./src/app/business/deploy-plan/region/region-create/region-create.component.ts","./src/app/business/deploy-plan/region/region-create/region-create.component.html","./src/app/business/deploy-plan/region/region-delete/region-delete.component.ts","./src/app/business/deploy-plan/region/region-delete/region-delete.component.html","./src/app/business/deploy-plan/region/region-detail/region-detail.component.ts","./src/app/business/deploy-plan/region/region-detail/region-detail.component.html","./src/app/business/deploy-plan/region/region-list/region-list.component.ts","./src/app/business/deploy-plan/region/region-list/region-list.component.html","./src/app/business/deploy-plan/region/region.component.ts","./src/app/business/deploy-plan/region/region.component.html","./src/app/business/deploy-plan/region/region.module.ts","./src/app/business/deploy-plan/region/region.service.ts","./src/app/business/deploy-plan/region/region.ts","./src/app/business/deploy-plan/zone/zone-create/zone-create.component.ts","./src/app/business/deploy-plan/zone/zone-create/zone-create.component.html","./src/app/business/deploy-plan/zone/zone-delete/zone-delete.component.ts","./src/app/business/deploy-plan/zone/zone-delete/zone-delete.component.html","./src/app/business/deploy-plan/zone/zone-detail/zone-detail.component.ts","./src/app/business/deploy-plan/zone/zone-detail/zone-detail.component.html","./src/app/business/deploy-plan/zone/zone-list/zone-list.component.ts","./src/app/business/deploy-plan/zone/zone-list/zone-list.component.html","./src/app/business/deploy-plan/zone/zone-update/zone-update.component.ts","./src/app/business/deploy-plan/zone/zone-update/zone-update.component.html","./src/app/business/deploy-plan/zone/zone.component.ts","./src/app/business/deploy-plan/zone/zone.component.html","./src/app/business/deploy-plan/zone/zone.module.ts","./src/app/business/deploy-plan/zone/zone.service.ts","./src/app/business/deploy-plan/zone/zone.ts","./src/app/business/host/host-create/host-create.component.ts","./src/app/business/host/host-create/host-create.component.html","./src/app/business/host/host-delete/host-delete.component.ts","./src/app/business/host/host-delete/host-delete.component.html","./src/app/business/host/host-detail/host-detail.component.ts","./src/app/business/host/host-detail/host-detail.component.html","./src/app/business/host/host-list/host-list.component.ts","./src/app/business/host/host-list/host-list.component.html","./src/app/business/host/host.component.ts","./src/app/business/host/host.component.html","./src/app/business/host/host.module.ts","./src/app/business/host/host.service.ts","./src/app/business/host/host.ts","./src/app/business/setting/credential/credential-create/credential-create.component.ts","./src/app/business/setting/credential/credential-create/credential-create.component.html","./src/app/business/setting/credential/credential-delete/credential-delete.component.ts","./src/app/business/setting/credential/credential-delete/credential-delete.component.html","./src/app/business/setting/credential/credential-edit/credential-edit.component.ts","./src/app/business/setting/credential/credential-edit/credential-edit.component.html","./src/app/business/setting/credential/credential-list/credential-list.component.ts","./src/app/business/setting/credential/credential-list/credential-list.component.html","./src/app/business/setting/credential/credential.component.ts","./src/app/business/setting/credential/credential.component.html","./src/app/business/setting/credential/credential.module.ts","./src/app/business/setting/credential/credential.service.ts","./src/app/business/setting/credential/credential.ts","./src/app/business/setting/setting.component.ts","./src/app/business/setting/setting.component.html","./src/app/business/setting/setting.module.ts","./src/app/business/setting/system.service.ts","./src/app/business/setting/system/system.component.ts","./src/app/business/setting/system/system.component.html","./src/app/business/setting/system/system.ts","./src/app/business/user/user-create/user-create.component.ts","./src/app/business/user/user-create/user-create.component.html","./src/app/business/user/user-delete/user-delete.component.ts","./src/app/business/user/user-delete/user-delete.component.html","./src/app/business/user/user-list/user-list.component.ts","./src/app/business/user/user-list/user-list.component.html","./src/app/business/user/user-update/user-update.component.ts","./src/app/business/user/user-update/user-update.component.html","./src/app/business/user/user.component.ts","./src/app/business/user/user.component.html","./src/app/business/user/user.service.ts","./src/app/business/user/user.ts","./src/app/constant/pattern.ts","./src/app/constant/route.ts","./src/app/core/core.module.ts","./src/app/layout/app-alert/alert.ts","./src/app/layout/app-alert/app-alert.component.ts","./src/app/layout/app-alert/app-alert.component.html","./src/app/layout/app-alert/app-alert.service.ts","./src/app/layout/common-alert/alert.ts","./src/app/layout/common-alert/common-alert.component.ts","./src/app/layout/common-alert/common-alert.component.html","./src/app/layout/common-alert/common-alert.service.ts","./src/app/layout/footer/footer.component.ts","./src/app/layout/footer/footer.component.html","./src/app/layout/header/header.component.ts","./src/app/layout/header/header.component.html","./src/app/layout/header/password/password.component.ts","./src/app/layout/header/password/password.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/layout/layout.module.ts","./src/app/layout/navigation/navigation.component.ts","./src/app/layout/navigation/navigation.component.html","./src/app/login/login-credential.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts","./src/app/login/login.service.ts","./src/app/shared/auth/auth-user.service.ts","./src/app/shared/auth/session-interceptor.ts","./src/app/shared/auth/session-user.ts","./src/app/shared/auth/session.service.ts","./src/app/shared/class/BaseModel.ts","./src/app/shared/class/BaseModelComponent.ts","./src/app/shared/class/BaseModelService.ts","./src/app/shared/class/Batch.ts","./src/app/shared/common-component/k8s-pagination/k8s-pagination.component.ts","./src/app/shared/common-component/k8s-pagination/k8s-pagination.component.html","./src/app/shared/common-component/modal-alert/modal-alert.component.ts","./src/app/shared/common-component/modal-alert/modal-alert.component.html","./src/app/shared/common-component/modal-alert/modal-alert.service.ts","./src/app/shared/handler/app-global-error-handler.ts","./src/app/shared/pipe/zone-status.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {LayoutComponent} from './layout/layout.component';\nimport {ClusterComponent} from './business/cluster/cluster.component';\nimport {ClusterDetailComponent} from './business/cluster/cluster-detail/cluster-detail.component';\nimport {ClusterRoutingResolverService} from './business/cluster/cluster-routing-resolver.service';\nimport {OverviewComponent} from './business/cluster/cluster-detail/overview/overview.component';\nimport {SettingComponent} from './business/setting/setting.component';\nimport {CredentialComponent} from './business/setting/credential/credential.component';\nimport {HostComponent} from './business/host/host.component';\nimport {NodeComponent} from './business/cluster/cluster-detail/node/node.component';\nimport {NamespaceComponent} from './business/cluster/cluster-detail/namespace/namespace.component';\nimport {StorageComponent} from './business/cluster/cluster-detail/storage/storage.component';\nimport {PersistentVolumeComponent} from './business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component';\nimport {PersistentVolumeClaimComponent} from './business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component';\nimport {UserComponent} from './business/user/user.component';\nimport {AuthUserService} from './shared/auth/auth-user.service';\nimport {LoggingComponent} from './business/cluster/cluster-detail/logging/logging.component';\nimport {MonitorComponent} from './business/cluster/cluster-detail/monitor/monitor.component';\nimport {StorageClassComponent} from './business/cluster/cluster-detail/storage/storage-class/storage-class.component';\nimport {RegionComponent} from './business/deploy-plan/region/region.component';\nimport {DeployPlanComponent} from './business/deploy-plan/deploy-plan.component';\nimport {ZoneComponent} from './business/deploy-plan/zone/zone.component';\nimport {PlanComponent} from './business/deploy-plan/plan/plan.component';\nimport {StorageProvisionerComponent} from './business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component';\nimport {RepositoryComponent} from './business/cluster/cluster-detail/repository/repository.component';\nimport {ChartmuseumComponent} from './business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component';\nimport {RegistryComponent} from './business/cluster/cluster-detail/repository/registry/registry.component';\nimport {ToolsComponent} from './business/cluster/cluster-detail/tools/tools.component';\nimport {DashboardComponent} from './business/cluster/cluster-detail/dashboard/dashboard.component';\nimport {SystemComponent} from './business/setting/system/system.component';\n\nconst routes: Routes = [\n    {path: 'login', component: LoginComponent},\n    {\n        path: '',\n        component: LayoutComponent,\n        canActivate: [AuthUserService],\n        canActivateChild: [AuthUserService],\n        children: [\n            {path: '', redirectTo: 'clusters', pathMatch: 'full'},\n            {\n                path: 'clusters',\n                component: ClusterComponent,\n            },\n            {\n                path: 'clusters/:name',\n                component: ClusterDetailComponent,\n                resolve: {cluster: ClusterRoutingResolverService},\n                children: [\n                    {path: '', redirectTo: 'overview', pathMatch: 'full'},\n                    {path: 'overview', component: OverviewComponent},\n                    {path: 'nodes', component: NodeComponent},\n                    {path: 'namespaces', component: NamespaceComponent},\n                    {\n                        path: 'storages',\n                        component: StorageComponent,\n                        children: [\n                            {path: '', redirectTo: 'pv', pathMatch: 'full'},\n                            {path: 'pv', component: PersistentVolumeComponent},\n                            {path: 'pvc', component: PersistentVolumeClaimComponent},\n                            {path: 'sc', component: StorageClassComponent},\n                            {path: 'provisioner', component: StorageProvisionerComponent},\n                        ],\n                    },\n                    {path: 'logging', component: LoggingComponent},\n                    {path: 'monitor', component: MonitorComponent},\n                    {\n                        path: 'repository',\n                        component: RepositoryComponent,\n                        children: [\n                            {path: '', redirectTo: 'chartmuseum', pathMatch: 'full'},\n                            {path: 'chartmuseum', component: ChartmuseumComponent},\n                            {path: 'registry', component: RegistryComponent}\n                        ]\n                    },\n                    {path: 'tool', component: ToolsComponent},\n                    {path: 'dashboard', component: DashboardComponent},\n                ],\n            },\n            {\n                path: 'hosts',\n                component: HostComponent,\n            },\n            {\n                path: 'setting',\n                component: SettingComponent,\n                children: [\n                    {path: '', redirectTo: 'system', pathMatch: 'full'},\n                    {path: 'system', component: SystemComponent},\n                    {path: 'credential', component: CredentialComponent},\n                ]\n            },\n            {\n                path: 'deploy',\n                component: DeployPlanComponent,\n                children: [\n                    {path: '', redirectTo: 'region', pathMatch: 'full'},\n                    {path: 'region', component: RegionComponent},\n                    {path: 'zone', component: ZoneComponent},\n                    {path: 'plan', component: PlanComponent}\n                ]\n            },\n            {\n                path: 'users',\n                component: UserComponent,\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n    title = 'app';\n\n    constructor(public translate: TranslateService) {\n    }\n\n     ngOnInit() {\n        const currentLanguage =  localStorage.getItem('currentLanguage') || this.translate.getBrowserCultureLang();\n        this.translate.setDefaultLang('zh-CN');\n        this.translate.use(currentLanguage);\n        localStorage.setItem('currentLanguage', currentLanguage);\n    }\n\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {ErrorHandler, NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {LoginModule} from './login/login.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LayoutModule} from './layout/layout.module';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {BusinessModule} from './business/business.module';\nimport {ClrCommonFormsModule, ClrDatagridModule, ClrIconModule, ClrModalModule} from '@clr/angular';\nimport {CoreModule} from './core/core.module';\nimport {SessionInterceptor} from './shared/auth/session-interceptor';\nimport {AppGlobalErrorHandler} from './shared/handler/app-global-error-handler';\nimport {NgCircleProgressModule} from 'ng-circle-progress';\n\n\nexport function HttpLoaderFactory(httpClient: HttpClient) {\n    return new TranslateHttpLoader(httpClient);\n}\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        LayoutModule,\n        BusinessModule,\n        LoginModule,\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        ClrDatagridModule,\n        ClrIconModule,\n        ClrModalModule,\n        ClrCommonFormsModule,\n        CoreModule,\n        NgCircleProgressModule.forRoot({\n            radius: 100,\n            outerStrokeWidth: 16,\n            innerStrokeWidth: 8,\n            animationDuration: 300,\n        })\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: SessionInterceptor,\n            multi: true,\n        },\n        {provide: ErrorHandler, useClass: AppGlobalErrorHandler}\n    ],\n    bootstrap: [AppComponent],\n\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CoreModule} from '../core/core.module';\nimport {ClusterModule} from './cluster/cluster.module';\nimport {SettingModule} from './setting/setting.module';\nimport {HostModule} from './host/host.module';\nimport { UserComponent } from './user/user.component';\nimport { UserCreateComponent } from './user/user-create/user-create.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserUpdateComponent } from './user/user-update/user-update.component';\nimport { UserDeleteComponent } from './user/user-delete/user-delete.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {DeployPlanModule} from './deploy-plan/deploy-plan.module';\n\n\n@NgModule({\n    declarations: [UserComponent, UserCreateComponent, UserListComponent, UserUpdateComponent, UserDeleteComponent],\n    imports: [\n        CoreModule,\n        ClusterModule,\n        SettingModule,\n        HostModule,\n        SharedModule,\n        RouterModule,\n        DeployPlanModule,\n    ],\n    exports: [\n        ClusterModule,\n        SettingModule,\n        HostModule,\n        DeployPlanModule,\n    ]\n})\nexport class BusinessModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {ClusterStatus, Condition} from '../cluster';\n\n@Component({\n    selector: 'app-cluster-condition',\n    templateUrl: './cluster-condition.component.html',\n    styleUrls: ['./cluster-condition.component.css']\n})\nexport class ClusterConditionComponent implements OnInit {\n\n    opened = false;\n    clusterName: string;\n    item: ClusterStatus = new ClusterStatus();\n    loading = false;\n    timer;\n\n    constructor(private service: ClusterService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onCancel() {\n        clearInterval(this.timer);\n        this.opened = false;\n    }\n\n    open(clusterName: string) {\n        this.clusterName = clusterName;\n        this.getStatus();\n        this.polling();\n    }\n\n    getStatus() {\n        this.opened = true;\n        this.service.status(this.clusterName).subscribe(data => {\n            this.item = data;\n            this.loading = false;\n        });\n    }\n\n    getCurrentCondition(): Condition {\n        if (this.item.phase !== 'Running' && this.item.phase !== 'Failed') {\n            for (const item of this.item.conditions) {\n                if (item.status === 'Unknown') {\n                    return item;\n                }\n            }\n        }\n        return null;\n    }\n\n    onInit() {\n        this.service.init(this.clusterName).subscribe(data => {\n            this.polling();\n        });\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            this.service.status(this.clusterName).subscribe(data => {\n                if (this.item.phase !== data.phase) {\n                    this.item.phase = data.phase;\n                }\n                if (this.item.phase !== 'Running') {\n                    // data.status.conditions.forEach((n) => {\n                    //     this.item.conditions.forEach(condition => {\n                    //         if (condition.name === n.name) {\n                    //             if (condition.status !== n.status) {\n                    //                 condition.status = n.status;\n                    //             }\n                    //             if (condition.message !== n.message) {\n                    //                 condition.message = n.message;\n                    //             }\n                    //         }\n                    //     });\n                    // });\n                    this.item.conditions = data.conditions;\n                } else {\n                    clearInterval(this.timer);\n                }\n            });\n        }, 3000);\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"xl\">\n    <h3 class=\"modal-title\">{{\"APP_STATUS_DETAIL\"| translate}}</h3>\n    <div class=\"modal-body\">\n\n        <ul class=\"clr-timeline clr-timeline-vertical\">\n            <li class=\"clr-timeline-step\" *ngFor=\"let condition of item.conditions\" [ngSwitch]=\"condition.status\">\n                <clr-icon shape=\"success-standard\" aria-label=\"Completed\" *ngSwitchCase=\"'True'\"></clr-icon>\n                <clr-icon shape=\"error-standard\" aria-label=\"Error\" *ngSwitchCase=\"'False'\"></clr-icon>\n                <clr-spinner clrMedium aria-label=\"In progress\"\n                             *ngIf=\"getCurrentCondition()&&condition.name === getCurrentCondition().name\">\n                    Fetching data\n                </clr-spinner>\n                <span *ngIf=\"getCurrentCondition()&&condition.name !== getCurrentCondition().name\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\" *ngSwitchCase=\"'Unknown'\"></clr-icon>\n                </span>\n                <div class=\"clr-timeline-step-body\">\n                    <span class=\"clr-timeline-step-title\">{{condition.name |translate}}</span>\n                    {{condition.message}}\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button *ngIf=\"item.phase ==='Failed'\" class=\"btn btn-primary\"\n                (click)=\"onInit()\">{{\"APP_RETRY\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {ClusterCreateRequest, CreateNodeRequest} from '../cluster';\nimport {NgForm} from '@angular/forms';\nimport {ClusterService} from '../cluster.service';\nimport {ClrWizard} from '@clr/angular';\nimport {HostService} from '../../host/host.service';\nimport {PlanService} from \"../../deploy-plan/plan/plan.service\";\nimport {Plan} from \"../../deploy-plan/plan/plan\";\n\n\n@Component({\n    selector: 'app-cluster-create',\n    templateUrl: './cluster-create.component.html',\n    styleUrls: ['./cluster-create.component.css']\n})\nexport class ClusterCreateComponent implements OnInit {\n\n    opened = false;\n    item: ClusterCreateRequest = new ClusterCreateRequest();\n    options: any = {\n        multiple: true,\n    };\n    hosts: any[] = [];\n    masters: any[] = [];\n    workers: any[] = [];\n    plans: Plan[] = [];\n\n    @ViewChild('wizard', {static: true}) wizard: ClrWizard;\n    @ViewChild('basicForm') basicForm: NgForm;\n    @ViewChild('seniorForm') seniorForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private service: ClusterService, private hostService: HostService, private planService: PlanService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    reset() {\n        this.wizard.reset();\n        this.seniorForm.reset();\n        this.basicForm.reset();\n        this.hosts = [];\n        this.masters = [];\n        this.workers = [];\n    }\n\n    setDefaultValue() {\n        this.item.architectures = 'amd64';\n        this.item.provider = 'bareMetal';\n        this.item.networkType = 'flannel';\n        this.item.runtimeType = 'docker';\n        this.item.dockerStorageDir = '/var/lib/docker';\n        this.item.containerdStorageDir = '/var/lib/containerd';\n        this.item.flannelBackend = 'vxlan';\n        this.item.calicoIpv4poolIpip = 'Always';\n        this.item.kubePodSubnet = '10.244.0.0/18';\n        this.item.kubeServiceSubnet = '10.244.64.0/18';\n        this.item.kubeMaxPod = 110;\n        this.item.certsExpired = 36500;\n        this.item.kubernetesAudit = false;\n        this.item.kubeProxyMode = 'iptables';\n        this.item.ingressControllerType = 'nginx';\n    }\n\n    open() {\n        this.reset();\n        this.loadHosts();\n        this.loadPlan();\n        this.opened = true;\n        this.setDefaultValue();\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.reset();\n    }\n\n\n    toggle(role: string) {\n        switch (role) {\n            case 'worker':\n                const delw = [];\n                this.masters.forEach(m => {\n                    this.workers.forEach(w => {\n                        if (m.id === w.id) {\n                            delw.push(w);\n                        }\n                    });\n                });\n                const cw = [].concat(this.workers);\n                delw.forEach(d => {\n                    cw.splice(cw.indexOf(d), 1);\n                    this.workers = cw;\n                });\n                break;\n            case 'master':\n                const delm = [];\n                this.workers.forEach(m => {\n                    this.masters.forEach(w => {\n                        if (m.id === w.id) {\n                            delm.push(w);\n                        }\n                    });\n                });\n                const cm = [].concat(this.masters);\n                delm.forEach(d => {\n                    cm.splice(cm.indexOf(d), 1);\n                    this.masters = cm;\n                });\n                break;\n        }\n    }\n\n    loadHosts() {\n        this.hostService.list().subscribe(data => {\n            const list = [];\n            data.items.forEach(h => {\n                list.push({id: h.name, text: h.name, disabled: false});\n            });\n            this.hosts = list;\n        });\n    }\n\n    loadPlan() {\n        this.planService.list().subscribe(data => {\n            this.plans = data.items;\n        });\n    }\n\n    fullNodes() {\n        this.item.nodes = [];\n        this.masters.forEach(m => {\n            const node = new CreateNodeRequest();\n            node.hostName = m.id;\n            node.role = 'master';\n            this.item.nodes.push(node);\n        });\n        this.workers.forEach(m => {\n            const node = new CreateNodeRequest();\n            node.hostName = m.id;\n            node.role = 'worker';\n            this.item.nodes.push(node);\n        });\n    }\n\n    onSubmit() {\n        this.service.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.created.emit();\n        });\n    }\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" clrWizardSize=\"xl\" (clrWizardOnFinish)=\"onSubmit()\"\n            (clrWizardOnCancel)=\"onCancel()\" [clrWizardClosable]=\"false\">\n    <clr-wizard-title>{{\"APP_CREATE_CLUSTER\"|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{\"APP_CANCEL\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{\"APP_BACK\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{\"APP_NEXT\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{\"APP_FINISH\"|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\">\n        <ng-template clrPageTitle>{{\"APP_CLUSTER_INFO\"|translate}}</ng-template>\n        <form clrForm #basicForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>{{\"APP_PROVIDER\"|translate}}</label>\n                <select clrSelect name=\"provider\" [(ngModel)]=\"item.provider\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"bareMetal\">Bare Metal</option>\n                    <option value=\"plan\">Plan</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>{{\"APP_VERSION\"|translate}}</label>\n                <select clrSelect name=\"version\" [(ngModel)]=\"item.version\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"v1.18.0\">v1.18.0</option>\n                    <option value=\"v1.18.3\">v1.18.2</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>架构</label>\n                <select clrSelect name=\"version\" [(ngModel)]=\"item.architectures\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"arm64\">ARM64</option>\n                    <option value=\"amd64\">AMD64</option>\n                </select>\n            </clr-select-container>\n\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"seniorForm.invalid\">\n        <ng-template clrPageTitle>高级选项</ng-template>\n\n        <form clrForm #seniorForm='ngForm'>\n            <clr-select-container>\n                <label>{{\"APP_CONTAINER_RUNTIME_TYPE\"|translate}}</label>\n                <select clrSelect name=\"runtime\" [(ngModel)]=\"item.runtimeType\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"docker\">docker</option>\n                    <option value=\"containerd\">containerd</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container *ngIf=\"item.runtimeType == 'docker'\">\n                <label>{{\"APP_DOCKER_STORAGE_DIR\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"storage_dir\" [(ngModel)]=\"item.dockerStorageDir\"/>\n            </clr-input-container>\n            <clr-input-container *ngIf=\"item.runtimeType == 'containerd'\">\n                <label>{{\"APP_CONTAINERD_STORAGE_DIR\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"storage_dir\" [(ngModel)]=\"item.containerdStorageDir\"/>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>{{\"APP_CONTAINER_NETWORK_TYPE\"|translate}}</label>\n                <select clrSelect name=\"network\" [(ngModel)]=\"item.networkType\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"flannel\">flannel</option>\n                    <option value=\"calico\">calico</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.networkType === 'flannel'\">\n                <label>{{\"APP_NETWORK_MODE\"|translate}}</label>\n                <select clrSelect name=\"flannel_backend\" [(ngModel)]=\"item.flannelBackend\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"host-gw\">host-gw</option>\n                    <option value=\"vxlan\">vxlan</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.networkType === 'calico'\">\n                <label>{{\"APP_NETWORK_MODE\"|translate}}</label>\n                <select clrSelect name=\"calico_ipv4pool_ipip\" [(ngModel)]=\"item.calicoIpv4poolIpip\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"Always\">always</option>\n                    <option value=\"off\">off</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>Pod {{\"APP_SUBNET\"|translate}}</label>\n                <input clrInput size=\"34\" name=\"pod_subnet\" [(ngModel)]=\"item.kubePodSubnet\"/>\n            </clr-input-container>\n\n            <clr-input-container>\n                <label>Service {{\"APP_SUBNET\"|translate}}</label>\n                <input clrInput size=\"34\" name=\"service_subnet\" [(ngModel)]=\"item.kubeServiceSubnet\"/>\n            </clr-input-container>\n\n\n            <clr-input-container>\n                <label>最大POD数量</label>\n                <input clrInput type=\"number\" size=\"34\" name=\"kube_max_pods\" [(ngModel)]=\"item.kubeMaxPod\">\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>kube-proxy 模式</label>\n                <select clrSelect name=\"kube_proxy_mode\" [(ngModel)]=\"item.kubeProxyMode\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"iptables\">Iptables</option>\n                    <option value=\"ipvs\">ipvs</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>ingress 类型</label>\n                <select clrSelect name=\"ingress_controller_type\" [(ngModel)]=\"item.ingressControllerType\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"nginx\">nginx</option>\n                    <option value=\"traefik\">traefik</option>\n                </select>\n            </clr-select-container>\n            <clr-toggle-container>\n                <label>Kubernetes 审计</label>\n                <clr-toggle-wrapper>\n                    <input type=\"checkbox\" clrToggle name=\"kubernetes_audit\" [(ngModel)]=\"item.kubernetesAudit\"/>\n                </clr-toggle-wrapper>\n            </clr-toggle-container>\n        </form>\n    </clr-wizard-page>\n\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"masters.length===0\"\n                     (clrWizardPageNext)=\"fullNodes()\" *ngIf=\"item.provider === 'bareMetal'\">\n        <ng-template clrPageTitle>{{\"APP_NODE_INFO\"|translate}}</ng-template>\n        <form>\n            <div>\n                <h3>masters</h3>\n                <hr/>\n                <l-select2 name=\"masters\" [(ngModel)]=\"masters\" [data]=\"hosts\" [options]=\"options\"\n                           (valueChange)=\"toggle('master')\"></l-select2>\n            </div>\n            <div>\n                <h3>workers</h3>\n                <hr/>\n                <l-select2 name=\"workers\" [(ngModel)]=\"workers\" [data]=\"hosts\" [options]=\"options\"\n                           (valueChange)=\"toggle('worker')\"></l-select2>\n            </div>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page *ngIf=\"item.provider === 'plan'\">\n        <ng-template clrPageTitle>{{\"APP_DEPLOY_PLAN\"|translate}}</ng-template>\n        <form clrForm>\n            <clr-select-container>\n                <label>{{\"APP_DEPLOY_PLAN\"|translate}}</label>\n                <select clrSelect name=\"plan\" [(ngModel)]=\"item.plan\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option *ngFor=\"let plan of plans\" [value]=\"plan.name\"> {{plan.name}}</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container>\n                <label>{{\"APP_WORKER_AMOUNT\"|translate}}</label>\n                <input clrInput type=\"number\" name=\"workerSize\" [(ngModel)]=\"item.workerAmount\">\n            </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>{{\"APP_CONFIRM_INFO\"|translate}}</ng-template>\n        <form>\n            <div>\n                <table class=\"table table-vertical\">\n                    <tbody>\n                    <tr>\n                        <th>{{\"APP_NAME\"|translate}}</th>\n                        <td>{{item.name}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_VERSION\"|translate}}</th>\n                        <td>{{item.version}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_PROVIDER\"|translate}}</th>\n                        <td>{{item.provider}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_CONTAINER_NETWORK_TYPE\"|translate}}</th>\n                        <td>{{item.networkType}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_CONTAINER_RUNTIME_TYPE\"|translate}}</th>\n                        <td>{{item.runtimeType}}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </form>\n    </clr-wizard-page>\n\n</clr-wizard>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {Cluster} from '../cluster';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-cluster-delete',\n    templateUrl: './cluster-delete.component.html',\n    styleUrls: ['./cluster-delete.component.css']\n})\nexport class ClusterDeleteComponent implements OnInit {\n\n    opened = false;\n    items: Cluster[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private service: ClusterService, private commonAlert: CommonAlertService) {\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    open(items: Cluster[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n        }, error => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlert.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CLUSTER\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Cluster} from \"../cluster\";\nimport {ToolsService} from \"./tools/tools.service\";\nimport {ClusterTool} from \"./tools/tools\";\n\n@Component({\n    selector: 'app-cluster-detail',\n    templateUrl: './cluster-detail.component.html',\n    styleUrls: ['./cluster-detail.component.css']\n})\nexport class ClusterDetailComponent implements OnInit {\n\n    constructor(private router: Router, private route: ActivatedRoute, private toolsService: ToolsService) {\n    }\n\n    currentCluster: Cluster;\n    tools: ClusterTool[] = [];\n    ready = false;\n\n    ngOnInit(): void {\n        this.route.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolsService.list(this.currentCluster.name).subscribe(d => {\n                if (d) {\n                    this.tools = d;\n                }\n                this.ready = true;\n            });\n        });\n    }\n\n    showApp(toolName: string) {\n        for (const tool of this.tools) {\n            if (tool.name === toolName && tool.status === 'Running') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    backToCluster() {\n        this.router.navigate(['clusters']);\n    }\n\n}\n","<a class=\"backStyle\" (click)=\"backToCluster()\">&lt; 集群</a>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"overview\" routerLinkActive=\"active\">概览</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"nodes\" routerLinkActive=\"active\">节点</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"namespaces\" routerLinkActive=\"active\">\n                {{\"APP_NAMESPACE\"|translate}}\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"storages\" routerLinkActive=\"active\">\n                {{\"APP_STORAGE\"|translate}}\n            </a>\n        </li>\n        <!--        <li class=\"nav-item\">-->\n        <!--            <a class=\"nav-link\" href=\"javascript:void(0)\">事件</a>-->\n        <!--        </li>-->\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('dashboard')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"dashboard\" routerLinkActive=\"active\">控制台</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('registry') || showApp('chartmuseum')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"repository\" routerLinkActive=\"active\">仓库</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('efk')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"logging\" routerLinkActive=\"active\">日志</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('prometheus')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"monitor\" routerLinkActive=\"active\">监控</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"tool\" routerLinkActive=\"active\">工具</a>\n        </li>\n        <!--        <li class=\"nav-item\">-->\n        <!--            <a class=\"nav-link\" href=\"javascript:void(0)\">安全合规</a>-->\n        <!--        </li>-->\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-dashboard-dashboard',\n    templateUrl: './dashboard-dashboard.component.html',\n    styleUrls: ['./dashboard-dashboard.component.css']\n})\nexport class DashboardDashboardComponent implements OnInit {\n\n    @ViewChild('frame') frame: ElementRef;\n    loading = true;\n    @Input() currentCluster: Cluster;\n    url: any;\n\n    constructor(private route: ActivatedRoute, private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(`/proxy/dashboard/${this.currentCluster.name}/root`);\n    }\n\n    onFrameLoad() {\n        this.loading = false;\n    }\n\n}\n","<div style=\"text-align: center\">\n    <clr-spinner *ngIf=\"loading\"></clr-spinner>\n    <div style=\"padding-top: 10px\" [hidden]=\"loading\">\n        <iframe #frame [src]=\"url\"\n                style=\"width: 100%;height: 1024px;\" (load)=\"onFrameLoad()\"></iframe>\n    </div>\n</div>\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster } from \"../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ClusterTool} from \"../tools/tools\";\nimport {ToolsService} from \"../tools/tools.service\";\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'dashboard';\n    item: ClusterTool;\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.item = tool;\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-dashboard-dashboard *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-dashboard-dashboard>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Terminal} from 'xterm';\nimport {LoggingService} from '../logging.service';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {V1Container, V1Namespace, V1Pod} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-logging-query',\n    templateUrl: './logging-query.component.html',\n    styleUrls: ['./logging-query.component.css']\n})\nexport class LoggingQueryComponent implements OnInit {\n\n    @ViewChild('terminal', {static: true}) terminal: ElementRef;\n    term: Terminal;\n    namespace: V1Namespace;\n    pod: V1Pod;\n    container: V1Container;\n    date = new Date();\n    currentCluster: Cluster;\n    namespaces: V1Namespace[] = [];\n    pods: V1Pod[] = [];\n\n    constructor(private service: LoggingService, private kubernetesService: KubernetesService, private route: ActivatedRoute) {\n    }\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster =data.cluster;\n            this.listNamespace();\n        });\n        this.initTerminal();\n    }\n\n    initTerminal() {\n        this.term = new Terminal({\n            cursorBlink: false,\n            disableStdin: true,\n            cursorStyle: 'bar',\n            cols: 240,\n            rows: 30,\n            letterSpacing: 1,\n            fontSize: 12\n        });\n        this.term.open(this.terminal.nativeElement);\n        this.term.writeln('no log');\n    }\n\n    search() {\n        this.service.search(this.currentCluster.name, this.namespace.metadata.name,\n            this.pod.metadata.name, this.container.name).subscribe(data => {\n            this.term.clear();\n            console.log(data);\n            for (const hit of data.hits.hits) {\n                this.term.writeln(hit._source.message);\n            }\n        });\n    }\n\n    listNamespace() {\n        this.kubernetesService.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n            if (!this.namespace) {\n                this.namespace = this.namespaces[0];\n                this.listPod();\n            }\n        });\n    }\n\n    listPod() {\n        this.pod = null;\n        this.container = null;\n        this.kubernetesService.listPod(this.currentCluster.name, '', this.namespace.metadata.name).subscribe(data => {\n            this.pods = data.items;\n            if (!this.pod) {\n                if (this.pods.length > 0) {\n                    this.pod = this.pods[0];\n                    this.container = this.pod.spec.containers[0];\n                }\n            }\n        });\n    }\n\n    onPodChange() {\n        if (this.pod.spec.containers.length > 0) {\n            this.container = this.pod.spec.containers[0];\n        } else {\n            this.container = null;\n        }\n    }\n}\n","<div class=\"card\">\n    <div class=\"card-block\">\n        <form clrForm>\n            <clr-select-container>\n                <label>Namespace</label>\n                <select name=\"namespace\" [(ngModel)]=\"namespace\" (change)=\"listPod()\" clrSelect>\n                    <option *ngFor=\"let ns of namespaces\" [ngValue]=\"ns\">{{ns.metadata.name}}</option>\n                </select>\n            </clr-select-container>\n            <clr-select-container>\n                <label>Pod</label>\n                <select name=\"pod\" [(ngModel)]=\"pod\" (change)=\"onPodChange()\" clrSelect>\n                    <option *ngFor=\"let p of pods\" [ngValue]=\"p\">{{p.metadata.name}}</option>\n                </select>\n            </clr-select-container>\n            <clr-select-container *ngIf=\"pod\">\n                <label>Container</label>\n                <select name=\"container\" [(ngModel)]=\"container\" clrSelect>\n                    <option *ngFor=\"let c of pod.spec.containers\" [ngValue]=\"c\">{{c.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-primary\" (click)=\"search()\" [disabled]=\"!pod||!namespace||!container\">Query</button>\n    </div>\n</div>\n\n\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div #terminal></div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ToolsService} from \"../tools/tools.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Cluster} from \"../../cluster\";\n\n@Component({\n    selector: 'app-logging',\n    templateUrl: './logging.component.html',\n    styleUrls: ['./logging.component.css']\n})\nexport class LoggingComponent implements OnInit {\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'EFK';\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-logging-query *ngIf=\"ready\"></app-logging-query>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport format from 'date-fns/format';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggingService {\n\n    baseUrl = '/proxy/logging/{cluster_name}/{index_name}/_search';\n\n    constructor(private http: HttpClient) {\n    }\n\n    search(clusterName: string, namespace: string, container: string, pod: string): Observable<any> {\n        const date = format(new Date(), 'yyyy.MM.dd');\n        const index = 'logstash-' + date;\n        const query = {\n            query: {\n                bool: {\n                    must: [\n                        {\n                            match: {\n                                'kubernetes.pod_name': {\n                                    query: pod,\n                                },\n                            },\n                        },\n                        {\n                            match: {\n                                'kubernetes.namespace_name': {\n                                    query: namespace,\n                                },\n                            },\n                        },\n                        {\n                            match: {\n                                'kubernetes.container_name': {\n                                    query: container,\n                                },\n                            },\n                        }\n                    ],\n                },\n            },\n            sort: [\n                {'@timestamp': 'desc'},\n            ]\n        };\n        return this.http.post<any>(this.baseUrl.replace('{cluster_name}', clusterName).replace('{index_name}', index), query);\n    }\n}\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster} from '../../../cluster';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClusterService} from '../../../cluster.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ClusterTool} from \"../../tools/tools\";\n\n@Component({\n    selector: 'app-monitor-dashboard',\n    templateUrl: './monitor-dashboard.component.html',\n    styleUrls: ['./monitor-dashboard.component.css']\n})\nexport class MonitorDashboardComponent implements OnInit {\n\n\n    @ViewChild('frame') frame: ElementRef;\n    loading = true;\n    @Input() currentCluster: Cluster;\n    @Input() item: ClusterTool;\n    url: any;\n\n    constructor(private route: ActivatedRoute, private clusterService: ClusterService, private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        const url = this.item.vars['url'] + '?orgId=1&kiosk';\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n\n    onFrameLoad() {\n        this.frame.nativeElement.contentWindow.Mousetrap.unbindGlobal('esc');\n        this.loading = false;\n    }\n\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12\" style=\"text-align: center\">\n        <clr-spinner *ngIf=\"loading\"></clr-spinner>\n        <div style=\"padding-top: 10px\" [hidden]=\"loading\">\n            <iframe #frame [src]=\"url\"\n                    style=\"width: 100%;height: 1024px;\" (load)=\"onFrameLoad()\"></iframe>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../cluster';\nimport {ToolsService} from \"../tools/tools.service\";\nimport {ClusterTool} from \"../tools/tools\";\n\n@Component({\n    selector: 'app-monitor',\n    templateUrl: './monitor.component.html',\n    styleUrls: ['./monitor.component.css']\n})\nexport class MonitorComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'prometheus';\n    item: ClusterTool;\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.item = tool;\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-monitor-dashboard *ngIf=\"ready\" [item]=\"item\" [currentCluster]=\"currentCluster\"></app-monitor-dashboard>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n\n","import {Component, OnInit} from '@angular/core';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {V1Namespace} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-namespace-list',\n    templateUrl: './namespace-list.component.html',\n    styleUrls: ['./namespace-list.component.css']\n})\nexport class NamespaceListComponent implements OnInit {\n\n    loading = true;\n    selected = [];\n    items: V1Namespace[] = [];\n    page = 1;\n    currentCluster: Cluster;\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.list();\n        });\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n        });\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-namespace',\n  templateUrl: './namespace.component.html',\n  styleUrls: ['./namespace.component.css']\n})\nexport class NamespaceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-namespace-list></app-namespace-list>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NodeService} from \"../node.service\";\nimport {Cluster, CreateNodeRequest} from \"../../../cluster\";\nimport {HostService} from \"../../../../host/host.service\";\nimport {NodeBatch} from \"../node\";\n\n@Component({\n    selector: 'app-node-create',\n    templateUrl: './node-create.component.html',\n    styleUrls: ['./node-create.component.css']\n})\nexport class NodeCreateComponent implements OnInit {\n\n    constructor(private nodeService: NodeService, private hostService: HostService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: NodeBatch = new NodeBatch();\n    hosts: any[] = [];\n    workers: any[] = [];\n    options: any = {\n        multiple: true,\n    };\n    @Input() currentCluster: Cluster;\n    @Output() created = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n\n    loadHosts() {\n        this.hostService.list().subscribe(data => {\n            const list = [];\n            data.items.filter((item) => {\n                if (!item.clusterId) {\n                    return true;\n                }\n            }).forEach(h => {\n                list.push({id: h.name, text: h.name, disabled: false});\n            });\n            this.hosts = list;\n        });\n    }\n\n    fullNodes() {\n        this.item.hosts = [];\n        this.workers.forEach(m => {\n            this.item.hosts.push(m.id);\n        });\n    }\n\n    reset() {\n        this.item = new NodeBatch();\n        this.item.increase = 1;\n        this.hosts = [];\n        this.workers = [];\n    }\n\n    open() {\n        this.reset();\n        this.loadHosts();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n\n    onSubmit() {\n        this.fullNodes();\n        this.isSubmitGoing = true;\n        this.item.operation = 'create';\n        this.nodeService.batch(this.currentCluster.name, this.item).subscribe(data => {\n            this.created.emit();\n            this.isSubmitGoing = false;\n            this.opened = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"lg\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #itemForm='ngForm'>\n            <div *ngIf=\"currentCluster.provider==='bareMetal'\">\n                <h4>Select Host</h4>\n                <br>\n                <l-select2 name=\"workers\" [(ngModel)]=\"workers\" [data]=\"hosts\" [options]=\"options\" required></l-select2>\n            </div>\n\n            <div *ngIf=\"currentCluster.provider==='plan'\">\n                <clr-input-container>\n                    <label>增量</label>\n                    <input size=\"34\" clrInput type=\"number\" name=\"increase\" [(ngModel)]=\"item.increase\">\n                </clr-input-container>\n            </div>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||itemForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NodeBatch} from \"../node\";\nimport {NodeService} from \"../node.service\";\nimport {Cluster} from \"../../../cluster\";\nimport {Node} from \"../node\";\n\n@Component({\n    selector: 'app-node-delete',\n    templateUrl: './node-delete.component.html',\n    styleUrls: ['./node-delete.component.css']\n})\nexport class NodeDeleteComponent implements OnInit {\n\n    constructor(private nodeService: NodeService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    items: Node[] = [];\n    @Input() currentCluster: Cluster;\n    @Output() deleted = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        const batch = new NodeBatch();\n        batch.operation = 'delete';\n        batch.nodes = this.items.map(item => {\n            return item.name;\n        });\n        this.isSubmitGoing = true;\n        this.nodeService.batch(this.currentCluster.name, batch).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.opened = false;\n            this.deleted.emit();\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" clrModalClosable=\"true\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n\n","import {Component, OnInit} from '@angular/core';\nimport {V1Node} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-node-detail',\n    templateUrl: './node-detail.component.html',\n    styleUrls: ['./node-detail.component.css']\n})\nexport class NodeDetailComponent implements OnInit {\n\n    opened = false;\n    item: V1Node;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item: V1Node) {\n        this.opened = true;\n        this.item = item;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">{{\"APP_NODE_DETAIL\"|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\" style=\"overflow:auto\">\n        <h5>基本信息</h5>\n        <hr/>\n        <table class=\"table table-vertical\">\n            <tbody>\n            <tr>\n                <th>Name</th>\n                <td>{{item.metadata.name}}</td>\n            </tr>\n            <tr>\n                <th>Kernel Version</th>\n                <td>{{item.status.nodeInfo.kernelVersion}}</td>\n            </tr>\n            <tr>\n                <th>OS Image</th>\n                <td>{{item.status.nodeInfo.osImage}}</td>\n            </tr>\n            <tr>\n                <th>Container Runtime Version</th>\n                <td>{{item.status.nodeInfo.containerRuntimeVersion}}</td>\n            </tr>\n            <tr>\n                <th>Kubelet Version</th>\n                <td>{{item.status.nodeInfo.kubeletVersion}}</td>\n            </tr>\n            <tr>\n                <th>KubeProxy Version</th>\n                <td>{{item.status.nodeInfo.kubeProxyVersion}}</td>\n            </tr>\n            <tr>\n                <th>Operating System</th>\n                <td>{{item.status.nodeInfo.operatingSystem}}</td>\n            </tr>\n            <tr>\n                <th>Architecture</th>\n                <td>{{item.status.nodeInfo.architecture}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n        <h5>标签</h5>\n        <hr/>\n        <table class=\"table table-vertical\">\n            <tbody>\n            <tr *ngFor=\"let lable of item.metadata.labels | keyvalue\">\n                <th>{{lable.key}}</th>\n                <td>{{lable.value}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n        <h5>状态</h5>\n        <hr/>\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th>Type</th>\n                <th>Status</th>\n                <th>Time</th>\n                <th>Reason</th>\n                <th>Message</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let condition of item.status.conditions\">\n                <td class=\"left\">{{condition.type}}</td>\n                <td class=\"left\">{{condition.status}}</td>\n                <td class=\"left\">{{condition.lastTransitionTime | date:'hh:mm:ss'}}</td>\n                <td class=\"left\">{{condition.reason}}</td>\n                <td class=\"left\">{{condition.message}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {V1Node} from '@kubernetes/client-node';\nimport {Cluster} from '../../../cluster';\nimport {ActivatedRoute} from '@angular/router';\nimport {NodeService} from \"../node.service\";\nimport {Node} from \"../node\";\nimport {CommonAlertService} from \"../../../../../layout/common-alert/common-alert.service\";\nimport {AlertLevels} from \"../../../../../layout/common-alert/alert\";\n\n@Component({\n    selector: 'app-node-list',\n    templateUrl: './node-list.component.html',\n    styleUrls: ['./node-list.component.css']\n})\nexport class NodeListComponent implements OnInit, OnDestroy {\n\n    loading = true;\n    selected = [];\n    items: Node[] = [];\n    page = 1;\n    timer;\n    @Input() currentCluster: Cluster;\n    @Output() openDetail = new EventEmitter<V1Node>();\n    @Output() createEvent = new EventEmitter();\n    @Output() statusEvent = new EventEmitter<Node>();\n    @Output() deleteEvent = new EventEmitter<Node[]>();\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute,\n                private nodeService: NodeService, private alertService: CommonAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n        this.polling();\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n    }\n\n    refresh() {\n        this.nodeService.list(this.currentCluster.name).subscribe(d => {\n            this.items = d;\n            this.selected = [];\n            this.loading = false;\n        });\n    }\n\n    getInternalIp(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            for (const addr of item.info.status.addresses) {\n                if (addr.type === 'InternalIP') {\n                    result = addr.address;\n                }\n            }\n        }\n        return result;\n    }\n\n    getVersion(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = item.info.status.nodeInfo.kubeletVersion;\n        }\n        return result;\n    }\n\n    formatRAM(memory: string): string {\n        let result = 0.0;\n        if (memory.endsWith('Ki')) {\n            const str = memory.substring(0, memory.indexOf('Ki'));\n            result = parseFloat(str);\n            result = result / (1024 * 1024);\n        }\n        return result.toFixed(2) + 'GB';\n    }\n\n    getRAM(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = this.formatRAM(item.info.status.capacity['memory']);\n        }\n        return result;\n    }\n\n    getCpuCore(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = item.info.status.capacity['cpu'];\n        }\n        return result;\n    }\n\n    getNodeRoles(item: Node): string[] {\n        const roles: string[] = [];\n        if (item.status === 'Running') {\n            for (const key in item.info.metadata.labels) {\n                if (key) {\n                    switch (key) {\n                        case 'node-role.kubernetes.io/master':\n                            roles.push('master');\n                            break;\n                        case 'node-role.kubernetes.io/etcd':\n                            roles.push('etcd');\n                            break;\n                        case 'node-role.kubernetes.io/worker':\n                            roles.push('worker');\n                            break;\n                    }\n                }\n            }\n        }\n        return roles;\n    }\n\n    getStatus(item: Node) {\n        if (item.status === 'Running') {\n            return this.isNodeReady(item.info);\n        }\n        return item.status;\n    }\n\n    isNodeReady(n: V1Node): string {\n        let result = 'NotReady';\n        for (const condition of n.status.conditions) {\n            if (condition.type === 'Ready') {\n                if (condition.status === 'True') {\n                    result = 'Ready';\n                }\n            }\n        }\n        return result;\n    }\n\n    onDetail(item: Node) {\n        if (item.status === 'Running') {\n            this.openDetail.emit(item.info);\n        } else {\n            this.alertService.showAlert('node is not ready', AlertLevels.ERROR);\n        }\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n        this.selected = [];\n    }\n\n    onShowStatus(item: Node) {\n        this.statusEvent.emit(item);\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            let flag = false;\n            const needPolling = ['Waiting', 'Initializing', 'Terminating'];\n            for (const item of this.items) {\n                if (needPolling.indexOf(item.status) !== -1) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (flag) {\n                this.nodeService.list(this.currentCluster.name).subscribe(data => {\n                    data.forEach(n => {\n                        this.items.forEach(item => {\n                            if (item.name === n.name) {\n                                if (item.status !== n.status) {\n                                    item.status = n.status;\n                                }\n                            }\n                        });\n                    });\n                });\n            }\n        }, 1000);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n            <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n            {{\"APP_ADD\"|translate}}\n        </button>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n            <clr-icon shape=\"close\"></clr-icon>\n            {{\"APP_DELETE\"|translate}}\n        </button>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_IP\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>Roles</clr-dg-column>\n    <clr-dg-column>CPU</clr-dg-column>\n    <clr-dg-column>RAM</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\"\n                [clrDgSelectable]=\"getNodeRoles(item).indexOf('master')===-1\">\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onDetail(item)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{getInternalIp(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getVersion(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getNodeRoles(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getCpuCore(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getRAM(item)}}</clr-dg-cell>\n        <clr-dg-cell *ngIf=\"getStatus(item) !== 'Failed'\">{{getStatus(item)}}\n            <clr-spinner clrAssertive clrInline *ngIf=\"item.status === 'Initializing' || item.status === 'Terminating'\">\n                Loading...\n            </clr-spinner>\n        </clr-dg-cell>\n        <clr-dg-cell *ngIf=\"getStatus(item) === 'Failed'\"><a href=\"javascript:void(0)\"\n                                                             (click)=\"onShowStatus(item)\">{{getStatus(item)}}</a>\n        </clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Node} from \"../node\";\n\n@Component({\n    selector: 'app-node-status',\n    templateUrl: './node-status.component.html',\n    styleUrls: ['./node-status.component.css']\n})\nexport class NodeStatusComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item: Node = new Node();\n\n    ngOnInit(): void {\n    }\n\n    open(item: Node) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" clrModalClosable=\"true\">\n    <h3 class=\"modal-title\">{{\"APP_NODE_DETAIL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{item.message}}</p>\n    </div>\n    <div class=\"modal-footer\">\n\n    </div>\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NodeListComponent} from './node-list/node-list.component';\nimport {NodeDetailComponent} from './node-detail/node-detail.component';\nimport {V1Node} from '@kubernetes/client-node';\nimport {NodeCreateComponent} from \"./node-create/node-create.component\";\nimport {Cluster} from \"../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {NodeStatusComponent} from \"./node-status/node-status.component\";\nimport {Node} from \"./node\";\nimport {NodeDeleteComponent} from \"./node-delete/node-delete.component\";\n\n@Component({\n    selector: 'app-node',\n    templateUrl: './node.component.html',\n    styleUrls: ['./node.component.css']\n})\nexport class NodeComponent implements OnInit {\n\n    @ViewChild(NodeListComponent, {static: true})\n    list: NodeListComponent;\n\n    @ViewChild(NodeDetailComponent, {static: true})\n    detail: NodeDetailComponent;\n\n    @ViewChild(NodeCreateComponent, {static: true})\n    create: NodeCreateComponent;\n\n    @ViewChild(NodeStatusComponent, {static: true})\n    status: NodeStatusComponent;\n    @ViewChild(NodeDeleteComponent, {static: true})\n    delete: NodeDeleteComponent;\n\n    currentCluster: Cluster;\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openDetail(item: V1Node) {\n        this.detail.open(item);\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openShowCreate(item: Node) {\n        this.status.open(item);\n    }\n\n    openDelete(items: Node[]) {\n        this.delete.open(items);\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-node-detail></app-node-detail>\n<app-node-list [currentCluster]=\"currentCluster\" (createEvent)=\"openCreate()\"\n               (openDetail)=\"openDetail($event)\" (statusEvent)=\"openShowCreate($event)\"\n               (deleteEvent)=\"openDelete($event)\"></app-node-list>\n<app-node-create [currentCluster]=\"currentCluster\" (created)=\"refresh()\"></app-node-create>\n<app-node-delete [currentCluster]=\"currentCluster\" (deleted)=\"refresh()\"></app-node-delete>\n<app-node-status></app-node-status>","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Node, NodeBatch} from \"./node\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/node/{clusterName}/';\n    batchUrl = '/api/v1/clusters/node/batch/{clusterName}/';\n\n    list(clusterName: string): Observable<Node[]> {\n        return this.http.get<Node[]>(this.baseUrl.replace('{clusterName}', clusterName));\n    }\n\n    batch(clusterName: string, item: NodeBatch): Observable<Node[]> {\n        return this.http.post<Node[]>(this.batchUrl.replace('{clusterName}', clusterName), item);\n    }\n}\n","import {V1Node} from \"@kubernetes/client-node\";\nimport {BaseModel} from \"../../../../shared/class/BaseModel\";\n\nexport class Node extends BaseModel {\n    name: string;\n    status: string;\n    message: string;\n    info: V1Node;\n}\n\n\nexport class NodeBatch {\n    hosts: string[] = [];\n    nodes: string[] = [];\n    increase: number;\n    operation: string;\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-not-ready',\n    templateUrl: './not-ready.component.html',\n    styleUrls: ['./not-ready.component.css']\n})\nexport class NotReadyComponent implements OnInit {\n\n    constructor() {\n    }\n\n    @Input() toolName: string;\n\n    ngOnInit(): void {\n    }\n\n}\n","<div style=\"text-align: center\">\n    <span>service {{toolName}} is not ready!</span>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ClusterService} from '../../cluster.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../cluster';\nimport {KubernetesService} from '../../kubernetes.service';\nimport {LoggingService} from '../../logging.service';\nimport {V1Deployment, V1Namespace, V1Node, V1Pod} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-overview',\n    templateUrl: './overview.component.html',\n    styleUrls: ['./webkubectl/overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n    constructor(private service: ClusterService,\n                private route: ActivatedRoute,\n                private kubernetesService: KubernetesService,\n                private loggingService: LoggingService) {\n    }\n\n    currentCluster: Cluster;\n    namespaces: V1Namespace[] = [];\n    pods: V1Pod[] = [];\n    nodes: V1Node[] = [];\n    deployments: V1Deployment[] = [];\n    containerNumber = 0;\n    cpuTotal = 0;\n    cpuUsage = 0;\n    cpuUsagePercent = 0.0;\n    memTotal = 0;\n    memUsage = 0;\n    memUsagePercent = 0.0;\n    podLimit = 0;\n    podUsagePercent = 0.0;\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.listNameSpaces();\n            this.listNodes();\n            this.listDeployment();\n        });\n    }\n\n    listNameSpaces() {\n        this.kubernetesService.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n        });\n    }\n\n    listPods() {\n        this.kubernetesService.listPod(this.currentCluster.name).subscribe(data => {\n            this.pods = data.items;\n            for (const pod of this.pods) {\n                this.containerNumber = this.containerNumber + pod.spec.containers.length;\n            }\n            this.podUsagePercent = (this.pods.length / this.podLimit) * 100;\n        });\n    }\n\n    listNodes() {\n        this.kubernetesService.listNodes(this.currentCluster.name).subscribe(data => {\n            this.nodes = data.items;\n            for (const node of this.nodes) {\n                this.cpuTotal = this.cpuTotal + Number(node.status.capacity.cpu);\n                const mem = node.status.capacity.memory.replace('Ki', '');\n                this.memTotal = this.memTotal + Number(mem);\n                this.podLimit = this.podLimit + Number(node.status.capacity.pods);\n            }\n            this.listNodesUsage();\n            this.listPods();\n        });\n    }\n\n    listDeployment() {\n        this.kubernetesService.listDeployment(this.currentCluster.name).subscribe(data => {\n            this.deployments = data.items;\n        });\n    }\n\n    listNodesUsage() {\n        this.kubernetesService.listNodesUsage(this.currentCluster.name).subscribe(data => {\n            const metrics = data.items;\n            for (const me of metrics) {\n                const c = me.usage.cpu.replace('n', '');\n                this.cpuUsage = this.cpuUsage + Number(c);\n                const m = me.usage.memory.replace('Ki', '');\n                this.memUsage = this.memUsage + Number(m);\n            }\n            this.cpuUsage = this.cpuUsage / (1000 * 1000 * 1000);\n            this.memUsagePercent = (this.memUsage / this.memTotal) * 100;\n            this.cpuUsagePercent = (this.cpuUsage / this.cpuTotal) * 100;\n        });\n    }\n\n    onOpenDashboard() {\n        window.open('/proxy/dashboard/' + this.currentCluster.name + '/root', '_blank');\n    }\n}\n\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12 \">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-3\">\n                        <div class=\"clr-row\">\n                            <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                                <h4>{{'APP_BASIC_INFORMATION'|translate}}</h4> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6  clr-col-12 count\">\n                                <span><b>{{'APP_NAME'|translate}}</b></span> <br>\n                                <span><b>{{'APP_VERSION'|translate}}</b></span> <br>\n                                <span><b>{{'APP_NETWORK_TYPE'|translate}}</b></span> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 type-face\">\n                                <span>{{currentCluster.name}}</span> <br>\n                                <span>{{currentCluster.spec.version}}</span> <br>\n                                <span>{{currentCluster.spec.networkType}}</span> <br>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"clr-col-6 solid\">\n                        <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                            <h4>{{'APP_CAPACITY_INFORMATION'|translate}}</h4> <br>\n                        </div>\n                        <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                            <circle-progress\n                                    [percent]=\"cpuUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'CPU 使用率'\"\n                            ></circle-progress>\n                            <circle-progress\n                                    [percent]=\"memUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'内存 使用率'\"\n                            ></circle-progress>\n                            <circle-progress\n                                    [percent]=\"podUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'容器组'\"\n                            ></circle-progress>\n                        </div>\n                    </div>\n                    <div class=\"clr-col-3 solid\">\n                        <div class=\"clr-row\">\n                            <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                                <h4>{{'APP_STATISTICS'|translate}}</h4> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 count\">\n                                <span><b>{{nodes.length}}</b></span> <br>\n                                <span><b>{{namespaces.length}}</b></span> <br>\n                                <span><b>{{deployments.length}}</b></span> <br>\n                                <span><b>{{pods.length}}</b></span> <br>\n                                <span><b>{{containerNumber}}</b></span> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 type-face\">\n                                <span>Nodes</span> <br>\n                                <span>Namespaces</span> <br>\n                                <span>Deployments</span> <br>\n                                <span>Pods</span> <br>\n                                <span>Containers</span> <br>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<app-webkubectl [currentCluster]=\"currentCluster\"></app-webkubectl>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {WebkubectlService} from \"./webkubectl.service\";\nimport {WebkubectlToken} from \"./webkubectl\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-webkubectl',\n    templateUrl: './webkubectl.component.html',\n    styleUrls: ['./webkubectl.component.css']\n})\nexport class WebkubectlComponent implements OnInit {\n\n    constructor(private service: WebkubectlService, private sanitizer: DomSanitizer) {\n    }\n\n    @Input() currentCluster: Cluster;\n    url: any;\n    loading = false;\n    opened = false;\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.loading = true;\n        this.service.getToken(this.currentCluster.name).subscribe(data => {\n            this.url = this.sanitizer.bypassSecurityTrustResourceUrl('/webkubectl/terminal?token=' + data.token);\n            this.loading = false;\n        });\n    }\n\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12 \">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                WebKubeCtl\n\n                <div *ngIf=\"!opened\" style=\"float: right\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"open()\">连接</button>\n                </div>\n\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-text\" style=\"text-align: center\">\n                    <div *ngIf=\"opened\">\n                        <clr-spinner *ngIf=\"loading\"></clr-spinner>\n                        <div *ngIf=\"url&&!loading\">\n                            <iframe #frame [src]=\"url\"\n                                    style=\"width: 100%;height: 512px;\"></iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {WebkubectlToken} from \"./webkubectl\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WebkubectlService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/webkubectl/{cluster_name}/';\n\n    getToken(clusterName: string): Observable<WebkubectlToken> {\n        return this.http.get<WebkubectlToken>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChartmuseumService} from \"../chartmuseum.service\";\nimport {Chart} from \"../chart\";\nimport {Cluster} from \"../../../../cluster\";\n\n@Component({\n    selector: 'app-chart-list',\n    templateUrl: './chart-list.component.html',\n    styleUrls: ['./chart-list.component.css']\n})\nexport class ChartListComponent implements OnInit {\n\n    loading = false;\n    items: Chart[] = [];\n    @Input() currentCluster: Cluster;\n\n    constructor(private chartService: ChartmuseumService) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.chartService.list(this.currentCluster.name).subscribe(data => {\n            this.items = [];\n            for (const key in data) {\n                if (key) {\n                    this.items = this.items.concat(data[key]);\n                }\n            }\n            this.loading = false;\n        });\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_DESCRIPTION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.version}}</clr-dg-cell>\n        <clr-dg-cell>{{item.appVersion}}</clr-dg-cell>\n        <clr-dg-cell>{{item.description}}</clr-dg-cell>\n        <clr-dg-cell>{{item.created|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n    </clr-dg-footer>\n</clr-datagrid>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ToolsService} from \"../../tools/tools.service\";\n\n@Component({\n    selector: 'app-chartmuseum',\n    templateUrl: './chartmuseum.component.html',\n    styleUrls: ['./chartmuseum.component.css']\n})\nexport class ChartmuseumComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'chartmuseum';\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-chart-list *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-chart-list>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ChartMap} from \"./chart\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ChartmuseumService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/proxy/chartmuseum/{cluster_name}/api/charts/';\n\n    list(clusterName: string): Observable<ChartMap> {\n        return this.http.get<ChartMap>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Registry} from \"../registry\";\nimport {RegistryService} from \"../registry.service\";\nimport {Cluster} from \"../../../../cluster\";\n\n@Component({\n    selector: 'app-registry-list',\n    templateUrl: './registry-list.component.html',\n    styleUrls: ['./registry-list.component.css']\n})\nexport class RegistryListComponent implements OnInit {\n\n    constructor(private registryService: RegistryService) {\n    }\n\n    loading = false;\n    items: Registry[] = [];\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.registryService.list(this.currentCluster.name).subscribe(data => {\n            this.loading = false;\n            this.items = [];\n            for (const repository of data.repositories) {\n                const item = new Registry();\n                item.name = repository;\n                this.items.push(item);\n                this.loading = false;\n            }\n        });\n    }\n\n    loadChild(item: Registry) {\n        item.loading = true;\n        this.registryService.listTags(this.currentCluster.name, item.name).subscribe(data => {\n            item.tags = data.tags;\n            item.loading = false;\n        });\n    }\n\n\n}\n","<clr-stack-view>\n    <clr-stack-header></clr-stack-header>\n    <clr-stack-block *ngFor=\"let item of items\"\n                     [clrStackViewLevel]=\"1\"\n                     [clrStackViewSetsize]=\"items.length\"\n                     [clrStackViewPosinset]=\"1\"\n                     [clrSbExpandable]=\"true\"\n                     (clrSbExpandedChange)=\"loadChild(item)\">\n        <clr-stack-label>{{'APP_NAME'|translate}}</clr-stack-label>\n        <clr-stack-content>{{item.name}}</clr-stack-content>\n\n        <clr-stack-block *ngIf=\"item.loading\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\"\n                         [clrStackViewPosinset]=\"1\">\n            <clr-spinner clrAssertive clrInline>\n                Loading...\n            </clr-spinner>\n        </clr-stack-block>\n        <clr-stack-block\n                *ngFor=\"let tag of item.tags; let i = index\"\n                [clrStackViewLevel]=\"2\"\n                [clrStackViewSetsize]=\"item.tags.length\"\n                [clrStackViewPosinset]=\"i + 1\">\n            <clr-stack-label>tag</clr-stack-label>\n            <clr-stack-content>{{tag}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Cluster} from \"../../../cluster\";\nimport {ToolsService} from \"../../tools/tools.service\";\n\n@Component({\n    selector: 'app-registry',\n    templateUrl: './registry.component.html',\n    styleUrls: ['./registry.component.css']\n})\nexport class RegistryComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'registry';\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-registry-list *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-registry-list>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {ChartMap} from \"../chartmuseum/chart\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Registry, RegistryList} from \"./registry\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegistryService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    listUrl = '/proxy/registry/{cluster_name}/v2/_catalog';\n    tagsUrl = '/proxy/registry/{cluster_name}/v2/{registry_name}/tags/list/';\n\n    list(clusterName: string): Observable<RegistryList> {\n        return this.http.get<RegistryList>(this.listUrl.replace('{cluster_name}', clusterName));\n    }\n\n    listTags(clusterName: string, tagName: string): Observable<Registry> {\n        return this.http.get<Registry>(this.tagsUrl.replace('{cluster_name}', clusterName).replace('{registry_name}', tagName));\n    }\n\n}\n","export class Registry {\n    name: string;\n    tags: string[] = [];\n    loading = false;\n}\n\nexport class RegistryList {\n    repositories: string[] = [];\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.css']\n})\nexport class RepositoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-container\" style=\"height: 100%;\">\n    <nav class=\"sidenav\">\n        <section class=\"sidenav-content\">\n            <section class=\"nav-group\">\n                <ul class=\"nav-list\">\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"chartmuseum\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                Chart 仓库\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"registry\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                镜像仓库\n                            </div>\n                        </a>\n                    </li>\n                </ul>\n            </section>\n        </section>\n    </nav>\n    <div class=\"content-area\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Cluster} from '../../../../cluster';\nimport {V1Namespace, V1PersistentVolume} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'app-persistent-volume-claim-list',\n    templateUrl: './persistent-volume-claim-list.component.html',\n    styleUrls: ['./persistent-volume-claim-list.component.css']\n})\nexport class PersistentVolumeClaimListComponent implements OnInit {\n\n    currentCluster: Cluster;\n    items: V1PersistentVolume[] = [];\n    namespaces: V1Namespace[] = [];\n    namespace = '';\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster =data.cluster;\n            this.listNamespace();\n        });\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listPersistentVolumeClaims(this.currentCluster.name, this.namespace, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n    listNamespace() {\n        this.loading = true;\n        this.service.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n            if (this.namespace === '') {\n                this.namespace = this.items[0].metadata.name;\n            }\n        });\n        this.list();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-persistent-volume-claim',\n  templateUrl: './persistent-volume-claim.component.html',\n  styleUrls: ['./persistent-volume-claim.component.css']\n})\nexport class PersistentVolumeClaimComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-persistent-volume-claim-list></app-persistent-volume-claim-list>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {KubernetesService} from '../../../../../kubernetes.service';\nimport {V1HostPathVolumeSource, V1PersistentVolume} from '@kubernetes/client-node';\nimport {Cluster} from '../../../../../cluster';\nimport {NgForm} from '@angular/forms';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\n\n@Component({\n    selector: 'app-persistent-volume-create-host-path',\n    templateUrl: './persistent-volume-create-host-path.component.html',\n    styleUrls: ['./persistent-volume-create-host-path.component.css']\n})\nexport class PersistentVolumeCreateHostPathComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    item: V1PersistentVolume = this.newHostPathPv();\n    accessMode = 'ReadWriteOnce';\n    isSubmitGoing = false;\n\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('pvForm') pvForm: NgForm;\n\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.reset();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.item = this.newHostPathPv();\n        this.pvForm.resetForm();\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.item.spec.accessModes.push(this.accessMode);\n        this.kubernetesService.createPersistentVolume(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    newHostPathPv(): V1PersistentVolume {\n        return {\n            apiVersion: 'v1',\n            kind: 'PersistentVolume',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            spec: {\n                capacity: {},\n                accessModes: [],\n                hostPath: {\n                    path: '',\n                } as V1HostPathVolumeSource,\n            } as V1PersistentVolumeSpec,\n        } as V1PersistentVolume;\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.metadata.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Size (Gib)</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"size\" [(ngModel)]=\"item.spec.capacity['storage']\"\n                       required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>Access Mode</label>\n                <select clrSelect name=\"accessMode\" [(ngModel)]=\"accessMode\">\n                    <option value=\"ReadWriteOnce\">ReadWriteOnce</option>\n                    <option value=\"ReadWriteMany\">ReadWriteMany</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>Host Path</label>\n                <input clrInput [size]=\"32\" name=\"path\" [(ngModel)]=\"item.spec.hostPath.path\" required/>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||pvForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {V1PersistentVolume} from '@kubernetes/client-node';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {NgForm} from '@angular/forms';\nimport {KubernetesService} from '../../../../../kubernetes.service';\nimport {Cluster} from '../../../../../cluster';\n\n@Component({\n    selector: 'app-persistent-volume-create-nfs',\n    templateUrl: './persistent-volume-create-nfs.component.html',\n    styleUrls: ['./persistent-volume-create-nfs.component.css']\n})\nexport class PersistentVolumeCreateNfsComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    item: V1PersistentVolume = this.newNfsPv();\n    accessMode = 'ReadWriteOnce';\n    isSubmitGoing = false;\n\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('pvForm') pvForm: NgForm;\n\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.reset();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.item = this.newNfsPv();\n        this.pvForm.resetForm();\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.item.spec.accessModes.push(this.accessMode);\n        this.kubernetesService.createPersistentVolume(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    newNfsPv(): V1PersistentVolume {\n        return {\n            apiVersion: 'v1',\n            kind: 'PersistentVolume',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            spec: {\n                capacity: {},\n                accessModes: [],\n                nfs: {\n                    path: '',\n                    server: '',\n                } as V1NFSVolumeSource,\n            } as V1PersistentVolumeSpec,\n        } as V1PersistentVolume;\n    }\n}\n\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.metadata.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Size (Gib)</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"size\" [(ngModel)]=\"item.spec.capacity['storage']\"\n                       required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>Access Mode</label>\n                <select clrSelect name=\"accessMode\" [(ngModel)]=\"accessMode\">\n                    <option value=\"ReadWriteOnce\">ReadWriteOnce</option>\n                    <option value=\"ReadWriteMany\">ReadWriteMany</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>NFS Server</label>\n                <input clrInput [size]=\"32\" name=\"server\" [(ngModel)]=\"item.spec.nfs.server\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>NFS Path</label>\n                <input clrInput [size]=\"32\" name=\"path\" [(ngModel)]=\"item.spec.nfs.path\" required/>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||pvForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-persistent-volume-create',\n    templateUrl: './persistent-volume-create.component.html',\n    styleUrls: ['./persistent-volume-create.component.css']\n})\nexport class PersistentVolumeCreateComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    provisioner = 'nfs';\n\n    @Output() selected = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.selected.emit(this.provisioner);\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-radio-container>\n                <label>Provisioner</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"provisioner\" value=\"nfs\" [(ngModel)]=\"provisioner\"\n                           required/>\n                    <label>NFS</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"provisioner\" value=\"hostPath\" [(ngModel)]=\"provisioner\"\n                           required/>\n                    <label>Host Path</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../../cluster';\nimport {V1Namespace, V1PersistentVolume} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\n\n@Component({\n    selector: 'app-persistent-volume-list',\n    templateUrl: './persistent-volume-list.component.html',\n    styleUrls: ['./persistent-volume-list.component.css']\n})\nexport class PersistentVolumeListComponent implements OnInit {\n\n    items: V1PersistentVolume[] = [];\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n    @Output() createEvent = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    constructor(private service: KubernetesService,) {\n    }\n\n    ngOnInit(): void {\n        this.list();\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listPersistentVolumes(this.currentCluster.name, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n\n    getSource(item: V1PersistentVolume) {\n        for (const key in item.spec) {\n            if (key === 'nfs') {\n                return 'NFS';\n            }\n            if (key === 'hostPath') {\n                return 'Host Path';\n            }\n        }\n        return 'unknown';\n    }\n\n    refresh() {\n        this.list();\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n            <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n            {{\"APP_ADD\"|translate}}\n        </button>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CAPACITY\"|translate}}</clr-dg-column>\n    <clr-dg-column>Access Modes</clr-dg-column>\n    <clr-dg-column>{{\"APP_SOURCE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.spec.capacity[\"storage\"]}}Gib</clr-dg-cell>\n        <clr-dg-cell>{{item.spec.accessModes}}</clr-dg-cell>\n        <clr-dg-cell>{{getSource(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PersistentVolumeListComponent} from './persistent-volume-list/persistent-volume-list.component';\nimport {PersistentVolumeCreateComponent} from './persistent-volume-create/persistent-volume-create.component';\nimport {PersistentVolumeCreateNfsComponent} from './persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {PersistentVolumeCreateHostPathComponent} from './persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component';\n\n@Component({\n    selector: 'app-persistent-volume',\n    templateUrl: './persistent-volume.component.html',\n    styleUrls: ['./persistent-volume.component.css']\n})\nexport class PersistentVolumeComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    @ViewChild(PersistentVolumeListComponent, {static: true})\n    list: PersistentVolumeListComponent;\n\n    @ViewChild(PersistentVolumeCreateComponent, {static: true})\n    create: PersistentVolumeCreateComponent;\n\n    @ViewChild(PersistentVolumeCreateNfsComponent, {static: true})\n    nfs: PersistentVolumeCreateNfsComponent;\n\n    @ViewChild(PersistentVolumeCreateHostPathComponent, {static: true})\n    hostPath: PersistentVolumeCreateHostPathComponent;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openSelected(provisioner: string) {\n        switch (provisioner) {\n            case 'nfs':\n                this.nfs.open();\n                break;\n            case 'hostPath':\n                this.hostPath.open();\n                break;\n        }\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-persistent-volume-list [currentCluster]=\"currentCluster\" (createEvent)=\"openCreate()\"></app-persistent-volume-list>\n<app-persistent-volume-create (selected)=\"openSelected($event)\"></app-persistent-volume-create>\n<app-persistent-volume-create-nfs [currentCluster]=\"currentCluster\"\n                                  (created)=\"refresh()\"></app-persistent-volume-create-nfs>\n<app-persistent-volume-create-host-path [currentCluster]=\"currentCluster\"\n                                        (created)=\"refresh()\"></app-persistent-volume-create-host-path>\n\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CreateStorageClassRequest} from '../../storage';\nimport {NgForm} from '@angular/forms';\nimport {V1PersistentVolume, V1StorageClass} from '@kubernetes/client-node';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\nimport {StorageProvisionerService} from '../../storage-provisioner/storage-provisioner.service';\nimport {StorageProvisioner} from '../../storage-provisioner/storage-provisioner';\nimport {Cluster} from '../../../../cluster';\nimport {KubernetesService} from '../../../../kubernetes.service';\n\n@Component({\n    selector: 'app-storage-class-create',\n    templateUrl: './storage-class-create.component.html',\n    styleUrls: ['./storage-class-create.component.css']\n})\nexport class StorageClassCreateComponent implements OnInit {\n\n    constructor(private provisionerService: StorageProvisionerService, private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: V1StorageClass;\n    provisioner: StorageProvisioner = new StorageProvisioner();\n    @Input() currentCluster: Cluster;\n    @Output() created = new EventEmitter();\n    provisioners: StorageProvisioner[] = [];\n\n    @Output() selected = new EventEmitter<CreateStorageClassRequest>();\n\n\n    ngOnInit(): void {\n\n    }\n\n    reset() {\n        this.item = this.newV1StorageClass();\n        this.provisionerService.list(this.currentCluster.name).subscribe(data => {\n            this.provisioners = data;\n        });\n    }\n\n    open() {\n        this.opened = true;\n        this.reset();\n    }\n\n    onProvisionerChange() {\n        this.item.provisioner = '';\n        if (this.provisioner) {\n            this.item.provisioner = this.provisioner.name;\n        }\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.kubernetesService.createStorageClass(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    newV1StorageClass(): V1StorageClass {\n        return {\n            apiVersion: 'storage.k8s.io/v1',\n            kind: 'StorageClass',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            provisioner: '',\n        } as V1StorageClass;\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"lg\">\n    <h3 class=\"modal-title\">创建存储类</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <form clrForm>\n            <clr-input-container>\n                <label>名称</label>\n                <input clrInput [size]=\"34\" name=\"name\" [(ngModel)]=\"item.metadata.name\">\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>存储类型</label>\n                <select clrSelect>\n                    <option value=\"\">NFS</option>\n                    <option value=\"\">Ceph-RBD</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>提供商</label>\n                <select name=\"provisioner\" [(ngModel)]=\"provisioner\" (change)=\"onProvisionerChange()\" clrSelect>\n                    <option [ngValue]=\"null\">自定义</option>\n                    <option [ngValue]=\"p\" *ngFor=\"let p of provisioners\">{{p.name}}</option>\n                </select>\n            </clr-select-container>\n\n            <table class=\"table table-vertical\" *ngIf=\"provisioner ===null\">\n                <tbody>\n                <tr>\n                    <th>provisioner_name</th>\n                    <td>\n                        <input clrInput [size]=\"34\" name=\"provisioner_name\" [(ngModel)]=\"item.provisioner\">\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <table class=\"table table-vertical\" *ngIf=\"provisioner&&provisioner.type==='nfs'\">\n                <tbody>\n                <tr>\n                    <th>provisioner_name</th>\n                    <td>\n                        <input [size]=\"34\" class=\"clr-input\" name=\"provisioner_name\" [(ngModel)]=\"item.provisioner\"\n                               disabled>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Cluster} from '../../../../cluster';\nimport {V1StorageClass} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'app-storage-class-list',\n    templateUrl: './storage-class-list.component.html',\n    styleUrls: ['./storage-class-list.component.css']\n})\nexport class StorageClassListComponent implements OnInit {\n\n    currentCluster: Cluster;\n    items: V1StorageClass[] = [];\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n    @Output() createEvent = new EventEmitter();\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.list();\n        });\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listStorageClass(this.currentCluster.name, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n    refresh() {\n        this.list();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_PROVISIONER\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_RECLAIM_POLICY\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VOLUME_BINDING_MODE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.provisioner}}</clr-dg-cell>\n        <clr-dg-cell>{{item.reclaimPolicy}}</clr-dg-cell>\n        <clr-dg-cell>{{item.volumeBindingMode}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {StorageClassCreateComponent} from './storage-class-create/storage-class-create.component';\nimport {StorageClassListComponent} from './storage-class-list/storage-class-list.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\n\n@Component({\n    selector: 'app-storage-class',\n    templateUrl: './storage-class.component.html',\n    styleUrls: ['./storage-class.component.css']\n})\nexport class StorageClassComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    @ViewChild(StorageClassCreateComponent, {static: true})\n    create: StorageClassCreateComponent;\n\n    @ViewChild(StorageClassListComponent, {static: true})\n    list: StorageClassListComponent;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n}\n","<app-storage-class-list (createEvent)=\"openCreate()\"></app-storage-class-list>\n<app-storage-class-create [currentCluster]=\"currentCluster\" (created)=\"refresh()\"></app-storage-class-create>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CreateStorageProvisionerRequest} from '../../storage-provisioner';\nimport {StorageProvisionerService} from '../../storage-provisioner.service';\nimport {Cluster} from '../../../../../cluster';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n    selector: 'app-storage-provisioner-create-nfs',\n    templateUrl: './storage-provisioner-create-nfs.component.html',\n    styleUrls: ['./storage-provisioner-create-nfs.component.css']\n})\nexport class StorageProvisionerCreateNfsComponent implements OnInit {\n\n    constructor(private storageProvisionerService: StorageProvisionerService) {\n    }\n\n    opened = false;\n    item: CreateStorageProvisionerRequest = new CreateStorageProvisionerRequest();\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('nfsForm') nfsForm: NgForm;\n\n    ngOnInit(): void {\n    }\n\n    open(item: CreateStorageProvisionerRequest) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    reset() {\n        this.item = new CreateStorageProvisionerRequest();\n        this.nfsForm.resetForm();\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.storageProvisionerService.create(this.currentCluster.name, this.item).subscribe(data => {\n            this.opened = false;\n            this.created.emit();\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ADD\" |translate}}</h3>\n    <div class=\"modal-body\">\n        <form clrForm #nfsForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [(ngModel)]=\"item.name\" name=\"name\" size=\"34\" required>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>Version</label>\n                <select name=\"version\" clrSelect [(ngModel)]=\"item.vars['storage_nfs_server_version']\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container>\n                <label>Server</label>\n                <input clrInput [(ngModel)]=\"item.vars['storage_nfs_server']\" name=\"server\" size=\"34\" required>\n            </clr-input-container>\n\n\n            <clr-input-container>\n                <label>Path</label>\n                <input clrInput [(ngModel)]=\"item.vars['storage_nfs_server_path']\" name=\"path\" size=\"34\" required>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"nfsForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {CreateStorageProvisionerRequest} from '../storage-provisioner';\n\n@Component({\n    selector: 'app-storage-provisioner-create',\n    templateUrl: './storage-provisioner-create.component.html',\n    styleUrls: ['./storage-provisioner-create.component.css']\n})\nexport class StorageProvisionerCreateComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item = new CreateStorageProvisionerRequest();\n    @Output() selected = new EventEmitter<CreateStorageProvisionerRequest>();\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.opened = false;\n        this.selected.emit(this.item);\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ADD\" |translate}}</h3>\n    <div class=\"modal-body\">\n        <form clrForm #selectForm='ngForm'>\n            <clr-select-container>\n                <label>类型</label>\n                <select clrSelect [(ngModel)]=\"item.type\" name=\"type\" required>\n                    <option value=\"\">请选择</option>\n                    <option value=\"nfs\">NFS</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"selectForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Cluster} from \"../../../../cluster\";\nimport {StorageProvisionerService} from \"../storage-provisioner.service\";\nimport {StorageProvisioner} from \"../storage-provisioner\";\n\n@Component({\n    selector: 'app-storage-provisioner-delete',\n    templateUrl: './storage-provisioner-delete.component.html',\n    styleUrls: ['./storage-provisioner-delete.component.css']\n})\nexport class StorageProvisionerDeleteComponent implements OnInit {\n\n    constructor(private service: StorageProvisionerService) {\n    }\n\n    opened = false;\n    items: StorageProvisioner[] = [];\n    @Output() deleted = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n    }\n\n    open(items: StorageProvisioner[]) {\n        this.opened = true;\n        this.items = items;\n    }\n\n    onSubmit() {\n        this.service.batch(this.currentCluster.name, this.items).subscribe(data => {\n            this.opened = false;\n            this.deleted.emit();\n            console.log(data);\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StorageProvisionerService} from '../storage-provisioner.service';\nimport {Cluster} from '../../../../cluster';\nimport {StorageProvisioner} from '../storage-provisioner';\n\n@Component({\n    selector: 'app-storage-provisioner-list',\n    templateUrl: './storage-provisioner-list.component.html',\n    styleUrls: ['./storage-provisioner-list.component.css']\n})\nexport class StorageProvisionerListComponent implements OnInit {\n\n    constructor(private service: StorageProvisionerService) {\n    }\n\n    loading = false;\n    items: StorageProvisioner[] = [];\n    selected: StorageProvisioner[] = [];\n    @Output() createEvent = new EventEmitter();\n    @Output() deleteEvent = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    list() {\n        this.service.list(this.currentCluster.name).subscribe(data => {\n            this.items = data;\n        });\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n    }\n\n    refresh() {\n        this.list();\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>Type</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.type}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {StorageProvisionerListComponent} from './storage-provisioner-list/storage-provisioner-list.component';\nimport {StorageProvisionerCreateComponent} from './storage-provisioner-create/storage-provisioner-create.component';\nimport {StorageProvisionerCreateNfsComponent} from './storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component';\nimport {CreateStorageProvisionerRequest, StorageProvisioner} from './storage-provisioner';\nimport {StorageProvisionerDeleteComponent} from \"./storage-provisioner-delete/storage-provisioner-delete.component\";\n\n@Component({\n    selector: 'app-storage-provisioner',\n    templateUrl: './storage-provisioner.component.html',\n    styleUrls: ['./storage-provisioner.component.css']\n})\nexport class StorageProvisionerComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    @ViewChild(StorageProvisionerListComponent, {static: true})\n    list: StorageProvisionerListComponent;\n\n    @ViewChild(StorageProvisionerCreateComponent, {static: true})\n    create: StorageProvisionerCreateComponent;\n\n    @ViewChild(StorageProvisionerDeleteComponent, {static: true})\n    delete: StorageProvisionerDeleteComponent;\n\n    @ViewChild(StorageProvisionerCreateNfsComponent, {static: true})\n    nfs: StorageProvisionerCreateNfsComponent;\n    currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: StorageProvisioner[]) {\n        this.delete.open(items);\n    }\n\n\n    openSelected(item: CreateStorageProvisionerRequest) {\n        console.log(item.name);\n        switch (item.type) {\n            case 'nfs':\n                this.nfs.open(item);\n                break;\n        }\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-storage-provisioner-list [currentCluster]=\"currentCluster\"\n                              (createEvent)=\"openCreate()\"\n                              (deleteEvent)=\"openDelete($event)\"></app-storage-provisioner-list>\n<app-storage-provisioner-create (selected)=\"openSelected($event)\"></app-storage-provisioner-create>\n<app-storage-provisioner-delete [currentCluster]=\"currentCluster\"\n                                (deleted)=\"refresh()\"></app-storage-provisioner-delete>\n<app-storage-provisioner-create-nfs [currentCluster]=\"currentCluster\"\n                                    (created)=\"refresh()\"></app-storage-provisioner-create-nfs>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CreateStorageProvisionerRequest, StorageProvisioner} from './storage-provisioner';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageProvisionerService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/provisioner/{cluster_name}/';\n\n    list(clusterName: string): Observable<StorageProvisioner[]> {\n        return this.http.get<StorageProvisioner[]>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n    create(clusterName: string, item: CreateStorageProvisionerRequest): Observable<StorageProvisioner> {\n        return this.http.post<StorageProvisioner>(this.baseUrl.replace('{cluster_name}', clusterName), item);\n    }\n\n    delete(clusterName: string, name: string): Observable<any> {\n        const url = this.baseUrl.replace('{cluster_name}', clusterName) + name + '/';\n        return this.http.delete<any>(url);\n    }\n\n    batch(clusterName: string, items: StorageProvisioner[]): Observable<any> {\n        const url = this.baseUrl.replace('{cluster_name}', 'batch/' + clusterName);\n        return this.http.post<any>(url, {items, operation: 'delete'});\n    }\n}\n\n\n","import {BaseModel} from '../../../../../shared/class/BaseModel';\n\nexport class StorageProvisioner extends BaseModel {\n    name: string;\n    type: string;\n    status: string;\n    vars: string;\n}\n\nexport class CreateStorageProvisionerRequest {\n    name: string;\n    type: string;\n    vars: {} = {};\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-storage',\n  templateUrl: './storage.component.html',\n  styleUrls: ['./storage.component.css']\n})\nexport class StorageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-container\" style=\"height: 100%;\">\n    <nav class=\"sidenav\">\n        <section class=\"sidenav-content\">\n            <section class=\"nav-group\">\n                <ul class=\"nav-list\">\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"pv\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_PERSISTENT_VOLUME\" |translate}}\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"sc\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_STORAGE_CLASS\" |translate}}\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"provisioner\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_STORAGE_PROVISIONER\"|translate}}\n                            </div>\n                        </a>\n                    </li>\n                </ul>\n            </section>\n        </section>\n    </nav>\n    <div class=\"content-area\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {KubernetesService} from \"../../../kubernetes.service\";\nimport {ClusterTool} from \"../tools\";\nimport {V1StorageClass} from \"@kubernetes/client-node\";\nimport {NgForm} from \"@angular/forms\";\nimport {Cluster} from \"../../../cluster\";\nimport {ToolsService} from \"../tools.service\";\n\n@Component({\n    selector: 'app-tools-enable',\n    templateUrl: './tools-enable.component.html',\n    styleUrls: ['./tools-enable.component.css']\n})\nexport class ToolsEnableComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService, private toolsService: ToolsService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: ClusterTool = new ClusterTool();\n    storageClazz: V1StorageClass[] = [];\n    @ViewChild('itemForm') itemForm: NgForm;\n    @Output() enabled = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n\n    ngOnInit(): void {\n    }\n\n    onSubmit() {\n        this.toolsService.enable(this.currentCluster.name, this.item).subscribe(data => {\n            this.opened = false;\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.itemForm.resetForm();\n        this.listStorageClass();\n    }\n\n    open(item: ClusterTool) {\n        this.reset();\n        this.opened = true;\n        this.setDefaultVars(item);\n        this.item = item;\n        console.log(this.item);\n    }\n\n    listStorageClass() {\n        this.kubernetesService.listStorageClass(this.currentCluster.name, '', true).subscribe(data => {\n            this.storageClazz = data.items;\n        });\n    }\n\n    setDefaultVars(item: ClusterTool) {\n        switch (item.name) {\n            case 'prometheus':\n                item.vars = {\n                    'server.retention': '10d',\n                    'server.persistentVolume.enabled': false,\n                    'server.persistentVolume.size': '10Gi',\n                    'server.persistentVolume.storageClass': '',\n                };\n                break;\n            case 'chartmuseum':\n                item.vars = {\n                    'persistence.enabled': false,\n                    'env.open.DISABLE_API': false,\n                    'persistence.storageClass': '',\n                };\n                break;\n            case 'registry':\n                item.vars = {\n                    'persistence.enabled': false,\n                    'persistence.storageClass': '',\n                    'service.type': 'NodePort',\n                };\n                break;\n            case 'efk':\n                item.vars = {\n                    'elasticsearch.persistence.enabled': false,\n                    'elasticsearch.volumeClaimTemplate.resources.requests.storage': '10Gi',\n                    'elasticsearch.volumeClaimTemplate.storageClassName': '',\n                };\n                break;\n            case 'dashboard':\n                item.vars = {};\n                break;\n        }\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #itemForm='ngForm'>\n            <div *ngIf=\"item.name === 'chartmuseum'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\" [(ngModel)]=\"item.vars['persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n\n                <clr-select-container *ngIf=\"item.vars['persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\" [(ngModel)]=\"item.vars['persistence.storageClass']\" required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n            <div *ngIf=\"item.name === 'prometheus'\">\n                <clr-input-container>\n                    <label>数据保留</label>\n                    <input clrInput name=\"retention\"\n                           [(ngModel)]=\"item.vars['server.retention']\" size=\"34\"/>\n                </clr-input-container>\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['server.persistentVolume.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-input-container *ngIf=\"item.vars['server.persistentVolume.enabled']\">\n                    <label>容量</label>\n                    <input clrInput name=\"size\"\n                           [(ngModel)]=\"item.vars['server.persistentVolume.size']\" size=\"34\"/>\n                </clr-input-container>\n                <clr-select-container *ngIf=\"item.vars['server.persistentVolume.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\" [(ngModel)]=\"item.vars['server.persistentVolume.storageClass']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n            <div *ngIf=\"item.name === 'efk'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['elasticsearch.persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-input-container *ngIf=\"item.vars['elasticsearch.persistence.enabled']\">\n                    <label>容量</label>\n                    <input clrInput name=\"size\"\n                           [(ngModel)]=\"item.vars['elasticsearch.volumeClaimTemplate.resources.requests.storage']\"\n                           size=\"34\"/>\n                </clr-input-container>\n                <clr-select-container *ngIf=\"item.vars['elasticsearch.persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\"\n                            [(ngModel)]=\"item.vars['elasticsearch.volumeClaimTemplate.storageClassName']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n\n            <div *ngIf=\"item.name === 'registry'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-select-container *ngIf=\"item.vars['persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\"\n                            [(ngModel)]=\"item.vars['persistence.storageClass']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||itemForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {ClusterTool} from \"../tools\";\n\n@Component({\n    selector: 'app-tools-failed',\n    templateUrl: './tools-failed.component.html',\n    styleUrls: ['./tools-failed.component.css']\n})\nexport class ToolsFailedComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item: ClusterTool = new ClusterTool();\n\n    ngOnInit(): void {\n    }\n\n    open(item: ClusterTool) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        {{item.message}}\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ClusterTool} from \"../tools\";\nimport {ToolsService} from \"../tools.service\";\nimport {Cluster} from \"../../../cluster\";\n\n@Component({\n    selector: 'app-tools-list',\n    templateUrl: './tools-list.component.html',\n    styleUrls: ['./tools-list.component.css']\n})\nexport class ToolsListComponent implements OnInit {\n\n    constructor(private service: ToolsService) {\n    }\n\n    items: ClusterTool[] = [];\n    @Input() currentCluster: Cluster;\n    @Output() enableEvent = new EventEmitter<ClusterTool>();\n    @Output() failedEvent = new EventEmitter<ClusterTool>();\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n\n    refresh() {\n        this.service.list(this.currentCluster.name).subscribe(data => {\n            this.items = data;\n        });\n    }\n\n    onEnable(item: ClusterTool) {\n        this.enableEvent.emit(item);\n    }\n\n    onFailed(item: ClusterTool) {\n        this.failedEvent.emit(item);\n    }\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-3\" *ngFor=\"let item of items\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"card-media-block\">\n                    <img [src]=\"'assets/images/tool/'+item.logo\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            {{item.name}}-{{item.version}}\n                        </span>\n                        <span class=\"card-media-text\">\n                            {{item.describe}}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div style=\"text-align: right\">\n                    <button *ngIf=\"item.status === 'Waiting' || item.status === 'Failed'\" class=\"btn btn-sm btn-primary\"\n                            (click)=\"onEnable(item)\">\n                        Enable\n                    </button>\n\n                    <button *ngIf=\"item.status === 'Failed'\" class=\"btn btn-sm btn-danger\" (click)=\"onFailed(item)\">\n                        Failed\n                    </button>\n\n                    <button *ngIf=\"item.status === 'Running'\" class=\"btn btn-sm btn-primary\" (click)=\"onFailed(item)\">\n                        Disable\n                    </button>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, EventEmitter, OnInit, ViewChild} from '@angular/core';\nimport {ToolsService} from \"./tools.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ClusterTool} from \"./tools\";\nimport {Cluster} from \"../../cluster\";\nimport {ToolsListComponent} from \"./tools-list/tools-list.component\";\nimport {ToolsEnableComponent} from \"./tools-enable/tools-enable.component\";\nimport {ToolsFailedComponent} from \"./tools-failed/tools-failed.component\";\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: './tools.component.html',\n    styleUrls: ['./tools.component.css']\n})\nexport class ToolsComponent implements OnInit {\n\n\n    @ViewChild(ToolsListComponent, {static: true})\n    list: ToolsListComponent;\n\n    @ViewChild(ToolsEnableComponent, {static: true})\n    enable: ToolsEnableComponent;\n\n    @ViewChild(ToolsFailedComponent, {static: true})\n    failed: ToolsFailedComponent;\n\n    constructor(private service: ToolsService, private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openEnable(item: ClusterTool) {\n        this.enable.open(item);\n    }\n\n    openFailed(item: ClusterTool) {\n        this.failed.open(item);\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-tools-list [currentCluster]=\"currentCluster\" (enableEvent)=\"openEnable($event)\"\n                (failedEvent)=\"openFailed($event)\"></app-tools-list>\n<app-tools-enable [currentCluster]=\"currentCluster\"></app-tools-enable>\n<app-tools-failed></app-tools-failed>","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {ClusterTool} from \"./tools\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolsService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/tool/{cluster_name}/';\n\n    list(clusterName: string): Observable<ClusterTool[]> {\n        return this.http.get<ClusterTool[]>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n    enable(clusterName: string, item: ClusterTool): Observable<ClusterTool> {\n        return this.http.post<ClusterTool>(this.baseUrl.replace('{cluster_name}', clusterName), item);\n    }\n\n}\n","import {BaseModel} from \"../../../../shared/class/BaseModel\";\n\nexport class ClusterTool extends BaseModel {\n    name: string;\n    version: string;\n    describe: string;\n    status: string;\n    message: string;\n    logo: string;\n    vars: {} = {};\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CLusterImportRequest} from '../cluster';\nimport {NgForm} from '@angular/forms';\nimport {ClusterService} from '../cluster.service';\n\n@Component({\n    selector: 'app-cluster-import',\n    templateUrl: './cluster-import.component.html',\n    styleUrls: ['./cluster-import.component.css']\n})\nexport class ClusterImportComponent implements OnInit {\n\n    constructor(private clusterService: ClusterService) {\n    }\n\n    opened = false;\n    item = new CLusterImportRequest();\n    @Output() imported = new EventEmitter();\n    @ViewChild('importForm') importForm: NgForm;\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.clusterService.import(this.item).subscribe(() => {\n            this.imported.emit();\n            this.opened = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">导入集群</h3>\n    <div class=\"modal-body\">\n        <form clrForm #importForm=\"ngForm\">\n            <clr-input-container>\n                <label>Name</label>\n                <input clrInput size=\"50\" name=\"name\" [(ngModel)]=\"item.name\" required>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Api Server</label>\n                <input clrInput size=\"50\" name=\"api-server\" [(ngModel)]=\"item.apiServer\" required>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Router</label>\n                <input clrInput size=\"50\" name=\"api-server\" [(ngModel)]=\"item.router\" required>\n            </clr-input-container>\n            <clr-textarea-container>\n                <label>Token</label>\n                <textarea clrTextarea [cols]=\"48\" name=\"token\" [(ngModel)]=\"item.token\" required></textarea>\n            </clr-textarea-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"onCancel()\">\n            {{\"APP_CANCEL\" |translate}}\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"importForm.invalid\" (click)=\"onSubmit()\">\n            {{\"APP_COMMIT\" |translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Cluster} from '../cluster';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-cluster-list',\n    templateUrl: './cluster-list.component.html',\n    styleUrls: ['./cluster-list.component.css']\n})\nexport class ClusterListComponent extends BaseModelComponent<Cluster> implements OnInit, OnDestroy {\n\n    constructor(clusterService: ClusterService, private commonAlert: CommonAlertService, private router: Router) {\n        super(clusterService);\n    }\n\n    @Output() statusDetailEvent = new EventEmitter<string>();\n    @Output() importEvent = new EventEmitter();\n    timer;\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.polling();\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n    }\n\n    onDetail(item: Cluster) {\n        if (item.status !== 'Running') {\n            this.commonAlert.showAlert('cluster is not ready', AlertLevels.ERROR);\n        } else {\n            this.router.navigate(['clusters', item.name]).then();\n        }\n    }\n\n    onImport() {\n        this.importEvent.emit();\n    }\n\n    onNodeDetail(item: Cluster) {\n        if (item.status !== 'Running') {\n            this.commonAlert.showAlert('cluster is not ready', AlertLevels.ERROR);\n        } else {\n            this.router.navigate(['clusters', item.name, 'nodes']).then();\n        }\n    }\n\n\n    onStatusDetail(name: string) {\n        this.statusDetailEvent.emit(name);\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            let flag = false;\n            const needPolling = ['Waiting', 'Initializing', 'Terminating', 'Creating'];\n            for (const item of this.items) {\n                if (needPolling.indexOf(item.status) !== -1) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (flag) {\n                this.service.page(this.page, this.size).subscribe(data => {\n                    data.items.forEach(n => {\n                        this.items.forEach(item => {\n                            if (item.name === n.name) {\n                                if (item.status !== n.status) {\n                                    item.status = n.status;\n                                }\n                            }\n                        });\n                    });\n                });\n            }\n        }, 1000);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n\n<!--            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onImport()\">-->\n<!--                <clr-icon shape=\"import\" size=\"16\"></clr-icon>-->\n<!--                {{\"APP_IMPORT\"|translate}}-->\n<!--            </button>-->\n\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_NODE_SIZE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onDetail(item)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.spec.version}}</clr-dg-cell>\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onNodeDetail(item)\">{{item.nodeSize}}</a></clr-dg-cell>\n        <clr-dg-cell><a (click)=\"onStatusDetail(item.name)\" href=\"javascript:void(0)\">{{item.status}}</a>\n        </clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_CLUSTER\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Cluster} from './cluster';\nimport {Observable} from 'rxjs';\nimport {ClusterService} from './cluster.service';\nimport {map, take} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClusterRoutingResolverService implements Resolve<Cluster> {\n\n    constructor(private service: ClusterService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Cluster> | Promise<Cluster> | Cluster {\n        const clusterName = route.params.name;\n        return this.service.get(clusterName).pipe(\n            take(1),\n            map(cluster => {\n                if (cluster) {\n                    return cluster;\n                } else {\n                    return null;\n                }\n            })\n        );\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ClusterCreateComponent} from './cluster-create/cluster-create.component';\nimport {ClusterListComponent} from './cluster-list/cluster-list.component';\nimport {ClusterDeleteComponent} from './cluster-delete/cluster-delete.component';\nimport {Cluster} from './cluster';\nimport {ClusterConditionComponent} from './cluster-condition/cluster-condition.component';\nimport {ClusterImportComponent} from './cluster-import/cluster-import.component';\n\n@Component({\n    selector: 'app-cluster',\n    templateUrl: './cluster.component.html',\n    styleUrls: ['./cluster.component.css']\n})\nexport class ClusterComponent implements OnInit {\n\n    constructor() {\n    }\n\n    @ViewChild(ClusterCreateComponent, {static: true})\n    create: ClusterCreateComponent;\n\n    @ViewChild(ClusterDeleteComponent, {static: true})\n    delete: ClusterDeleteComponent;\n\n    @ViewChild(ClusterConditionComponent, {static: true})\n    condition: ClusterConditionComponent;\n\n    @ViewChild(ClusterListComponent, {static: true})\n    list: ClusterListComponent;\n\n    @ViewChild(ClusterImportComponent, {static: true})\n    import: ClusterImportComponent;\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openImport() {\n        this.import.open();\n    }\n\n    openDelete(items: Cluster[]) {\n        this.delete.open(items);\n    }\n\n    openStatusDetail(name: string) {\n        this.condition.open(name);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_CLUSTER' | translate }}</h2>\n    </div>\n    <app-cluster-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                      (statusDetailEvent)=\"openStatusDetail($event)\" (importEvent)=\"openImport()\"></app-cluster-list>\n    <app-cluster-create (created)=\"refresh()\"></app-cluster-create>\n    <app-cluster-delete (deleted)=\"refresh()\"></app-cluster-delete>\n    <app-cluster-import (imported)=\"refresh()\"></app-cluster-import>\n    <app-cluster-condition></app-cluster-condition>\n</div>\n","import {NgModule} from '@angular/core';\nimport {ClusterComponent} from './cluster.component';\nimport {CoreModule} from '../../core/core.module';\nimport {ClusterListComponent} from './cluster-list/cluster-list.component';\nimport {ClusterCreateComponent} from './cluster-create/cluster-create.component';\nimport {ClusterDeleteComponent} from './cluster-delete/cluster-delete.component';\nimport {ClusterDetailComponent} from './cluster-detail/cluster-detail.component';\nimport {OverviewComponent} from './cluster-detail/overview/overview.component';\nimport {RouterModule} from '@angular/router';\nimport {ClusterConditionComponent} from './cluster-condition/cluster-condition.component';\nimport {NodeComponent} from './cluster-detail/node/node.component';\nimport {NamespaceComponent} from './cluster-detail/namespace/namespace.component';\nimport {NamespaceListComponent} from './cluster-detail/namespace/namespace-list/namespace-list.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {StorageComponent} from './cluster-detail/storage/storage.component';\nimport {PersistentVolumeComponent} from './cluster-detail/storage/persistent-volume/persistent-volume.component';\nimport {PersistentVolumeClaimComponent} from './cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component';\nimport {StorageClassComponent} from './cluster-detail/storage/storage-class/storage-class.component';\nimport {PersistentVolumeListComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component';\nimport {NodeListComponent} from './cluster-detail/node/node-list/node-list.component';\nimport {NodeDetailComponent} from './cluster-detail/node/node-detail/node-detail.component';\nimport {PersistentVolumeClaimListComponent} from './cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component';\nimport {StorageClassListComponent} from './cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component';\nimport {LoggingComponent} from './cluster-detail/logging/logging.component';\nimport {LoggingQueryComponent} from './cluster-detail/logging/logging-query/logging-query.component';\n\nimport {NgCircleProgressModule} from 'ng-circle-progress';\nimport {MonitorComponent} from './cluster-detail/monitor/monitor.component';\nimport {MonitorDashboardComponent} from './cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component';\nimport {ClusterImportComponent} from './cluster-import/cluster-import.component';\nimport {StorageClassCreateComponent} from './cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component';\nimport {PersistentVolumeCreateComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component';\nimport {PersistentVolumeCreateNfsComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component';\nimport {PersistentVolumeCreateHostPathComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component';\nimport {StorageProvisionerComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner.component';\nimport {StorageProvisionerListComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component';\nimport {StorageProvisionerCreateComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component';\nimport {StorageProvisionerCreateNfsComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component';\nimport {StorageProvisionerDeleteComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component';\nimport {ToolsComponent} from './cluster-detail/tools/tools.component';\nimport {ToolsListComponent} from './cluster-detail/tools/tools-list/tools-list.component';\nimport {RepositoryComponent} from './cluster-detail/repository/repository.component';\nimport {RegistryComponent} from './cluster-detail/repository/registry/registry.component';\nimport {ChartmuseumComponent} from './cluster-detail/repository/chartmuseum/chartmuseum.component';\nimport {ChartListComponent} from './cluster-detail/repository/chartmuseum/chart-list/chart-list.component';\nimport {RegistryListComponent} from './cluster-detail/repository/registry/registry-list/registry-list.component';\nimport {ToolsEnableComponent} from './cluster-detail/tools/tools-enable/tools-enable.component';\nimport {NotReadyComponent} from './cluster-detail/not-ready/not-ready.component';\nimport { DashboardComponent } from './cluster-detail/dashboard/dashboard.component';\nimport { ToolsFailedComponent } from './cluster-detail/tools/tools-failed/tools-failed.component';\nimport { DashboardDashboardComponent } from './cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component';\nimport { NodeCreateComponent } from './cluster-detail/node/node-create/node-create.component';\nimport { NodeDeleteComponent } from './cluster-detail/node/node-delete/node-delete.component';\nimport { NodeStatusComponent } from './cluster-detail/node/node-status/node-status.component';\nimport { WebkubectlComponent } from './cluster-detail/overview/webkubectl/webkubectl.component';\n\n\n@NgModule({\n    declarations: [ClusterComponent, ClusterListComponent, ClusterCreateComponent, ClusterDeleteComponent, ClusterDetailComponent,\n        OverviewComponent, ClusterConditionComponent, NodeComponent, NamespaceComponent, NamespaceListComponent,\n        StorageComponent, PersistentVolumeComponent, PersistentVolumeClaimComponent, StorageClassComponent, PersistentVolumeListComponent,\n        NodeListComponent, NodeDetailComponent, PersistentVolumeClaimListComponent,\n        StorageClassListComponent, LoggingComponent, LoggingQueryComponent,\n        MonitorComponent, MonitorDashboardComponent,\n        ClusterImportComponent,\n        StorageClassCreateComponent,\n        PersistentVolumeCreateComponent,\n        PersistentVolumeCreateNfsComponent,\n        PersistentVolumeCreateHostPathComponent,\n        StorageProvisionerComponent,\n        StorageProvisionerListComponent,\n        StorageProvisionerCreateComponent,\n        StorageProvisionerCreateNfsComponent,\n        StorageProvisionerDeleteComponent,\n        ToolsComponent,\n        ToolsListComponent,\n        RepositoryComponent,\n        RegistryComponent,\n        ChartmuseumComponent,\n        ChartListComponent,\n        RegistryListComponent,\n        ToolsEnableComponent,\n        NotReadyComponent,\n        DashboardComponent,\n        ToolsFailedComponent,\n        DashboardDashboardComponent,\n        NodeCreateComponent,\n        NodeDeleteComponent,\n        NodeStatusComponent,\n        WebkubectlComponent],\n    imports: [\n        CoreModule,\n        RouterModule,\n        SharedModule,\n        NgCircleProgressModule,\n    ]\n})\nexport class ClusterModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Cluster, CLusterImportRequest, ClusterStatus, InitClusterResponse} from './cluster';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClusterService extends BaseModelService<Cluster> {\n\n    baseUrl = '/api/v1/clusters';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    status(clusterName: string): Observable<ClusterStatus> {\n        return this.http.get<ClusterStatus>(`${this.baseUrl}/status/${clusterName}`);\n    }\n\n    init(clusterName: string): Observable<InitClusterResponse> {\n        return this.http.post<InitClusterResponse>(`${this.baseUrl}/init/${clusterName}/`, {});\n    }\n\n    import(item: CLusterImportRequest): Observable<any> {\n        return this.http.post<any>(`${this.baseUrl}/import/`, item);\n    }\n}\n","import {BaseModel} from '../../shared/class/BaseModel';\n\nexport class Cluster extends BaseModel {\n    name: string;\n    spec: Spec;\n    nodeSize: string;\n    status: string;\n    provider: string;\n}\n\nexport class Spec {\n    version: string;\n    networkType: string;\n}\n\nexport class ClusterStatus {\n    phase: string;\n    conditions: Condition[] = [];\n}\n\nexport class Condition {\n    status: string;\n    message: string;\n    name: string;\n}\n\nexport class CreateNodeRequest {\n    role: string;\n    hostName: string;\n}\n\n\nexport class ClusterCreateRequest extends BaseModel {\n    name: string;\n    version: string;\n    provider: string;\n    architectures: string;\n    networkType: string;\n    runtimeType: string;\n    dockerStorageDir: string;\n    containerdStorageDir: string;\n    flannelBackend: string;\n    calicoIpv4poolIpip: string;\n    kubePodSubnet: string;\n    kubeServiceSubnet: string;\n    kubeProxyMode: string;\n    kubeMaxPod: number;\n    certsExpired: number;\n    kubernetesAudit: boolean;\n    ingressControllerType: string;\n    plan: string;\n    nodes: CreateNodeRequest[] = [];\n    workerAmount: number;\n}\n\nexport class CLusterImportRequest {\n    name: string;\n    apiServer: string;\n    token: string;\n    router: string;\n}\n\nexport class InitClusterResponse {\n    message: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {V1NamespaceList} from '@kubernetes/client-node/dist/gen/model/v1NamespaceList';\nimport {Observable} from 'rxjs';\nimport {\n    NetworkingV1beta1IngressList,\n    V1beta1CronJobList,\n    V1beta1CSINodeList,\n    V1ConfigMapList,\n    V1CSINodeList,\n    V1DaemonSetList,\n    V1DeploymentList,\n    V1JobList,\n    V1NodeList,\n    V1PersistentVolume,\n    V1PersistentVolumeClaimList,\n    V1PersistentVolumeList,\n    V1PodList,\n    V1SecretList,\n    V1ServiceList,\n    V1StatefulSetList,\n    V1StorageClass,\n    V1StorageClassList\n} from '@kubernetes/client-node';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class KubernetesService {\n\n    proxyUrl = '/proxy/kubernetes/{cluster_name}/{resource_url}';\n    limit = 10;\n    continueTokenKey = 'continue';\n\n    constructor(private client: HttpClient) {\n    }\n\n    namespaceUrl = '/api/v1/namespaces';\n    serviceUrl = 'api/v1/services';\n    namespaceServiceUrl = 'api/v1/namespaces/{namespace}/services';\n    persistentVolumesUrl = '/api/v1/persistentvolumes';\n    storageClassUrl = '/apis/storage.k8s.io/v1/storageclasses';\n    persistentVolumeClaimsUrl = '/api/v1/persistentvolumeclaims';\n    namespacePersistentVolumeClaimsUrl = '/api/v1/namespaces/{namespace}/deployments';\n    deploymentUrl = 'apis/apps/v1/deployments';\n    namespaceDeploymentUrl = 'apis/apps/v1/namespaces/{namespace}/deployments';\n    daemonSetUrl = '/apis/apps/v1/daemonsets/';\n    statefulSetUrl = '/apis/apps/v1/statefulsets/';\n    namespaceStatefulSet = '/apis/apps/v1/namespaces/{namespace}/statefulsets/';\n    namespaceDaemonSetUrl = '/apis/apps/v1/namespaces/{namespace}/daemonsets/';\n    cornJobUrl = 'apis/batch/v1beta1/cronjobs';\n    namespaceCornJobUrl = 'apis/batch/v1beta1/namespaces/{namespace}/cronjobs';\n    jobUrl = '/apis/batch/v1/jobs';\n    namespaceJobUrl = '/apis/batch/v1/namespaces/{namespace}/jobs';\n    ingressUrl = '/apis/networking.k8s.io/v1beta1/ingresses';\n    namespaceIngressUrl = '/apis/networking.k8s.io/v1beta1/namespaces/{namespace}/ingresses';\n    configMapUrl = '/api/v1/configmaps';\n    namespaceConfigMapUrl = '/api/v1/namespaces/{namespace}/configmaps';\n    secretUrl = '/api/v1/secrets';\n    namespaceSecretUrl = '/api/v1/secrets';\n    podUrl = '/api/v1/pods';\n    namespacePodUrl = '/api/v1/namespaces/{namespace}/pods/';\n    nodesUrl = 'api/v1/nodes';\n    nodeStatsSummaryUrl = 'apis/metrics.k8s.io/v1beta1/nodes';\n\n    listNodesUsage(clusterName: string, continueToken?: string): Observable<any> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.nodeStatsSummaryUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<any>(url);\n    }\n\n\n    listNodes(clusterName: string, continueToken?: string): Observable<V1NodeList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.nodesUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1NodeList>(url);\n    }\n\n    listNamespaces(clusterName: string): Observable<V1NamespaceList> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.namespaceUrl);\n        return this.client.get<V1NamespaceList>(url);\n    }\n\n    createPersistentVolume(clusterName: string, item: V1PersistentVolume): Observable<V1PersistentVolume> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.persistentVolumesUrl);\n        return this.client.post<V1PersistentVolume>(url, item);\n    }\n\n    listPersistentVolumes(clusterName: string, continueToken?: string): Observable<V1PersistentVolumeList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.persistentVolumesUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1PersistentVolumeList>(url);\n    }\n\n    listStorageClass(clusterName: string, continueToken?: string, all?: boolean): Observable<V1StorageClassList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.storageClassUrl);\n        if (!all) {\n            url += '?limit=' + this.limit;\n        }\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1StorageClassList>(url);\n    }\n\n\n    createStorageClass(clusterName: string, item: V1StorageClass): Observable<V1StorageClass> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.storageClassUrl);\n        return this.client.post<V1StorageClass>(url, item);\n    }\n\n\n    listPersistentVolumeClaims(clusterName: string, continueToken?: string, namespace?: string): Observable<V1PersistentVolumeClaimList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespacePersistentVolumeClaimsUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.persistentVolumeClaimsUrl);\n        }\n        return this.client.get<V1PersistentVolumeClaimList>(url);\n    }\n\n    listDeployment(clusterName: string, continueToken?: string, namespace?: string): Observable<V1DeploymentList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceDeploymentUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.deploymentUrl);\n        }\n\n        return this.client.get<V1DeploymentList>(url);\n    }\n\n    listDaemonSet(clusterName: string, continueToken?: string, namespace?: string): Observable<V1DaemonSetList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceDaemonSetUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.daemonSetUrl);\n        }\n\n        return this.client.get<V1DaemonSetList>(url);\n    }\n\n    listStatefulSet(clusterName: string, continueToken?: string, namespace?: string): Observable<V1StatefulSetList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceStatefulSet).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.statefulSetUrl);\n        }\n\n        return this.client.get<V1StatefulSetList>(url);\n    }\n\n    listJob(clusterName: string, continueToken?: string, namespace?: string): Observable<V1JobList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceJobUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.jobUrl);\n        }\n        return this.client.get<V1JobList>(url);\n    }\n\n\n    listCornJob(clusterName: string, continueToken?: string, namespace?: string): Observable<V1beta1CronJobList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceCornJobUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.cornJobUrl);\n        }\n        return this.client.get<V1beta1CronJobList>(url);\n    }\n\n    listService(clusterName: string, continueToken?: string, namespace?: string): Observable<V1ServiceList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceServiceUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.serviceUrl);\n        }\n        return this.client.get<V1ServiceList>(url);\n    }\n\n    listIngress(clusterName: string, continueToken?: string, namespace?: string): Observable<NetworkingV1beta1IngressList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceIngressUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.ingressUrl);\n        }\n        return this.client.get<NetworkingV1beta1IngressList>(url);\n    }\n\n    listConfigMap(clusterName: string, continueToken?: string, namespace?: string): Observable<V1ConfigMapList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceConfigMapUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.configMapUrl);\n        }\n        return this.client.get<V1ConfigMapList>(url);\n    }\n\n    listSecret(clusterName: string, continueToken?: string, namespace?: string): Observable<V1SecretList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceSecretUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.secretUrl);\n        }\n        return this.client.get<V1SecretList>(url);\n    }\n\n    listPod(clusterName: string, continueToken?: string, namespace?: string): Observable<V1PodList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespacePodUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.podUrl);\n        }\n        return this.client.get<V1PodList>(url);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggingService {\n\n    constructor() {\n    }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deploy-plan',\n  templateUrl: './deploy-plan.component.html',\n  styleUrls: ['./deploy-plan.component.css']\n})\nexport class DeployPlanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <h2> {{ 'APP_DEPLOY_PLAN' | translate }}</h2>\n</div>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"region\"\n               routerLinkActive=\"active\">{{ 'APP_REGION' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"zone\"\n               routerLinkActive=\"active\">{{ 'APP_ZONE' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"plan\"\n               routerLinkActive=\"active\">{{ 'APP_PLAN' | translate}}</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {RegionModule} from './region/region.module';\nimport {RouterModule} from '@angular/router';\nimport {DeployPlanComponent} from './deploy-plan.component';\nimport {CoreModule} from '../../core/core.module';\nimport {ZoneModule} from './zone/zone.module';\nimport {PlanModule} from './plan/plan.module';\n\n\n@NgModule({\n    declarations: [DeployPlanComponent],\n    imports: [\n        ZoneModule,\n        RegionModule,\n        RouterModule,\n        CoreModule,\n        PlanModule,\n    ]\n})\nexport class DeployPlanModule {\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan, PlanCreateRequest, PlanVmConfig, VmConfig} from '../plan';\nimport {PlanService} from '../plan.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {RegionService} from '../../region/region.service';\nimport {Region} from '../../region/region';\nimport {Zone} from '../../zone/zone';\nimport {NgForm} from '@angular/forms';\nimport {ClrWizard} from '@clr/angular';\nimport {ZoneService} from '../../zone/zone.service';\n\n@Component({\n    selector: 'app-plan-create',\n    templateUrl: './plan-create.component.html',\n    styleUrls: ['./plan-create.component.css']\n})\nexport class PlanCreateComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    regions: Region[] = [];\n    zones: Zone[] = [];\n    item: PlanCreateRequest = new PlanCreateRequest();\n    vmConfigs: PlanVmConfig[] = [];\n    regionName: string;\n    @Output() created = new EventEmitter();\n    @ViewChild('basicForm', {static: true}) basicForm: NgForm;\n    @ViewChild('planForm', {static: true}) planForm: NgForm;\n    @ViewChild('wizard') wizard: ClrWizard;\n\n\n    constructor(private planService: PlanService, private modalAlertService: ModalAlertService, private regionService: RegionService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService,\n                private zoneService: ZoneService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.regionService.list().subscribe(res => {\n            this.regions = res.items;\n        }, error => {\n\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.created.emit();\n        this.wizard.reset();\n        this.item = new PlanCreateRequest();\n        this.basicForm.resetForm(this.item);\n        this.planForm.resetForm(this.item);\n    }\n\n    onSubmit() {\n        if (this.item.deployTemplate === 'SINGLE') {\n            this.item.zones = [];\n            this.item.zones.push(this.item.zone);\n            this.onCancel();\n        }\n        this.planService.create(this.item).subscribe(res => {\n            this.onCancel();\n        });\n    }\n\n    onBasicFormCommit() {\n        this.listZones();\n        this.listVmConfigs();\n    }\n\n    onRegionChange() {\n        this.regions.forEach(region => {\n            if (region.id === this.item.regionId) {\n                this.regionName = region.name;\n            }\n        });\n    }\n\n    onDeployChange() {\n\n    }\n\n    listVmConfigs() {\n        this.planService.listVmConfigs(this.regionName).subscribe(res => {\n            this.vmConfigs = res;\n        });\n    }\n\n    listZones() {\n        this.zoneService.listByRegionId(this.item.regionId).subscribe(res => {\n            this.zones = res;\n        });\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_PLAN_ADD'|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\"\n                     (clrWizardPageOnCommit)=\"onBasicFormCommit()\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #basicForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 type=\"text\" maxlength=\"15\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_REGION'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.regionId\" name=\"provider\" (change)=\"onRegionChange()\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let re of regions\" [value]=\"re.id\">{{re.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_TEMPLATE'|translate}}</label>\n                <select [(ngModel)]=\"item.deployTemplate\" name=\"template\" (change)=\"onDeployChange()\" required\n                        clrSelect>\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option value=\"SINGLE\">{{'APP_PLAN_DEPLOY_TEMPLATE_SINGLE'|translate}}</option>\n                    <option value=\"MULTIPLE\">{{'APP_PLAN_DEPLOY_TEMPLATE_MULTIPLE'|translate}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <!--&lt;!&ndash;            <clr-select-container>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <label>项目</label>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <select clrSelect [(ngModel)]=\"item.item_id\" name=\"item\" multiple>&ndash;&gt;-->\n            <!--&lt;!&ndash;                    <option [value]=\"\" disabled>请选择</option>&ndash;&gt;-->\n            <!--&lt;!&ndash;                    <option *ngFor=\"let item of items\" [value]=\"item.id\">{{item.name}}</option>&ndash;&gt;-->\n            <!--&lt;!&ndash;                </select>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <clr-control-helper>部署计划需要授权到项目才可用（非必填）</clr-control-helper>&ndash;&gt;-->\n            <!--&lt;!&ndash;            </clr-select-container>&ndash;&gt;-->\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"planForm.invalid\" (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_PLAN_DEPLOY_CONFIG'|translate}}</ng-template>\n        <form clrForm #planForm=\"ngForm\">\n            <clr-select-container *ngIf=\"item.deployTemplate === 'SINGLE'\">\n                <label>{{'APP_ZONE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.zone\" name=\"cloud-region\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let zone of zones\" [value]=\"zone.id\">{{zone.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.deployTemplate === 'MULTIPLE'\">\n                <label>{{'APP_ZONE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.zones\" name=\"cloud-region\" multiple required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let zone of zones\" [value]=\"zone.id\">{{zone.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_MASTER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.planVars['masterModel']\" name=\"master\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let model of vmConfigs\" [value]=\"model.name\">{{model.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_WORKER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.planVars['workerModel']\" name=\"worker\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let model of vmConfigs\" [value]=\"model.name\">{{model.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n        </form>\n        <div *ngIf=\"vmConfigs\">\n            <h3>{{'APP_PLAN_DEPLOY_CONFIG_REFERENCE'|translate}}</h3>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th>{{'APP_CONFIG'|translate}}</th>\n                    <th>{{'APP_CPU'|translate}}</th>\n                    <th>{{'APP_HOST_MEMORY_GB'|translate}}</th>\n                    <th>{{'APP_HOST_DISK'|translate}}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let model of vmConfigs\">\n                    <td>{{model.name}}</td>\n                    <td>{{model.config.cpu}}</td>\n                    <td>{{model.config.memory}}</td>\n                    <td>{{model.config.disk}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PlanService} from '../plan.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-plan-delete',\n    templateUrl: './plan-delete.component.html',\n    styleUrls: ['./plan-delete.component.css']\n})\nexport class PlanDeleteComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    items: Plan[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private planService: PlanService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.planService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_REGION_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {PlanService} from '../plan.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-plan-detail',\n    templateUrl: './plan-detail.component.html',\n    styleUrls: ['./plan-detail.component.css']\n})\nexport class PlanDetailComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    item: Plan = new Plan();\n    @Output() detail = new EventEmitter();\n\n    constructor(private planService: PlanService,private translateService: TranslateService) {\n        super(planService)\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n\n    getDeployName(name: string) {\n        switch (name) {\n            case 'SINGLE':\n                return this.translateService.instant(\"APP_PLAN_DEPLOY_TEMPLATE_SINGLE\");\n            case 'MULTIPLE':\n                return this.translateService.instant(\"APP_PLAN_DEPLOY_TEMPLATE_MULTIPLE\");\n            default:\n                return 'None';\n        }\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_PLAN_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION'|translate}}:</b>\n                    {{item.region.name}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>\n                    <span *ngFor=\"let zone of item.zones\">{{zone.name}},</span>\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_PLAN_DEPLOY_TEMPLATE'|translate}}:</b>{{getDeployName(item.deployTemplate)}}</li>\n                <li><b style=\"margin-right: 16px\">Master {{'APP_PLAN_NODE_SPEC'|translate}}:</b>{{item.planVars['masterModel']}}</li>\n                <li><b style=\"margin-right: 16px\">Worker {{'APP_PLAN_NODE_SPEC'|translate}}:</b>{{item.planVars['workerModel']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {PlanService} from '../plan.service';\n\n@Component({\n    selector: 'app-plan-list',\n    templateUrl: './plan-list.component.html',\n    styleUrls: ['./plan-list.component.css']\n})\nexport class PlanListComponent extends BaseModelComponent<Plan> implements OnInit {\n\n\n    @Output() detailEvent = new EventEmitter<Plan>();\n\n\n    constructor(private planService: PlanService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_PLAN\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PlanListComponent} from './plan-list/plan-list.component';\nimport {PlanCreateComponent} from './plan-create/plan-create.component';\nimport {PlanDeleteComponent} from './plan-delete/plan-delete.component';\nimport {PlanDetailComponent} from './plan-detail/plan-detail.component';\n\n@Component({\n    selector: 'app-plan',\n    templateUrl: './plan.component.html',\n    styleUrls: ['./plan.component.css']\n})\nexport class PlanComponent implements OnInit {\n\n    @ViewChild(PlanListComponent, {static: true})\n    list: PlanListComponent;\n\n    @ViewChild(PlanCreateComponent, {static: true})\n    create: PlanCreateComponent;\n\n    @ViewChild(PlanDeleteComponent, {static: true})\n    delete: PlanDeleteComponent;\n\n    @ViewChild(PlanDetailComponent, {static: true})\n    detail: PlanDetailComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_PLAN_PROMPT'|translate}}</p>\n<app-plan-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (detailEvent)=\"openDetail($event)\"></app-plan-list>\n<app-plan-create (created)=\"refresh()\"></app-plan-create>\n<app-plan-delete (deleted)=\"refresh()\"></app-plan-delete>\n<app-plan-detail (detail)=\"refresh()\"></app-plan-detail>","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PlanCreateComponent} from './plan-create/plan-create.component';\nimport {PlanDeleteComponent} from './plan-delete/plan-delete.component';\nimport {PlanListComponent} from './plan-list/plan-list.component';\nimport {PlanComponent} from './plan.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport { PlanDetailComponent } from './plan-detail/plan-detail.component';\n\n\n@NgModule({\n    declarations: [PlanCreateComponent, PlanDeleteComponent, PlanListComponent, PlanComponent, PlanDetailComponent],\n    exports: [\n        PlanListComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class PlanModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Plan} from './plan';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanService extends BaseModelService<Plan> {\n\n    baseUrl = '/api/v1/plans';\n\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listVmConfigs(regionName:string): Observable<any> {\n        const itemUrl = `${this.baseUrl}/configs/`+regionName+'/';\n        return this.http.get<any>(itemUrl);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\nimport {Region} from '../region/region';\nimport {Zone} from '../zone/zone';\n\nexport class Plan extends BaseModel {\n    name: string;\n    zoneId: string;\n    deployTemplate: string;\n    vars: string;\n    regionId: string;\n    region: Region = new Region();\n    zones: Zone[] = [];\n    planVars: {} = {};\n}\n\nexport class PlanCreateRequest extends BaseRequest {\n    deployTemplate: string;\n    vars: string;\n    planVars: {} = {};\n    regionId: string;\n    zone: string;\n    zones: string [] = [];\n    region: string;\n}\n\nexport class PlanVmConfig {\n    name: string;\n    config: VmConfig;\n}\n\nexport class VmConfig {\n    cpu: number;\n    memory: number;\n    disk: number;\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {BaseModelService} from \"../../../shared/class/BaseModelService\";\nimport {CloudProvider} from \"./cloud-provider\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CloudProviderService extends BaseModelService<CloudProvider>{\n\n  baseUrl = '/api/v1/cloud/providers/'\n\n  constructor(http: HttpClient) {\n    super(http);\n  }\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region, RegionCreateRequest} from '../region';\nimport {RegionService} from '../region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {NgForm} from '@angular/forms';\nimport {CloudProviderService} from '../cloud-provider.service';\nimport {CloudProvider} from '../cloud-provider';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ClrWizard, ClrWizardPage} from '@clr/angular';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-region-create',\n    templateUrl: './region-create.component.html',\n    styleUrls: ['./region-create.component.css']\n})\nexport class RegionCreateComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: RegionCreateRequest = new RegionCreateRequest();\n    cloudProviders: CloudProvider[] = [];\n    isParamsValid;\n    isParamsCheckGoing = false;\n    cloudRegions: [] = [];\n    @Output() created = new EventEmitter();\n    @ViewChild('regionForm', {static: true}) regionForm: NgForm;\n    @ViewChild('paramsForm', {static: true}) paramsForm: NgForm;\n    @ViewChild('dtFrom', {static: true}) dtFrom: NgForm;\n    @ViewChild('wizard') wizard: ClrWizard;\n    @ViewChild('finishPage') finishPage: ClrWizardPage;\n\n\n    constructor(private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService,\n                private commonAlertService: CommonAlertService, private cloudProviderService: CloudProviderService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.cloudProviderService.list().subscribe(res => {\n            this.cloudProviders = res.items;\n            this.opened = true;\n            this.item = new RegionCreateRequest();\n        }, error => {\n            this.modalAlertService.showAlert('', AlertLevels.ERROR);\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.item = new RegionCreateRequest();\n        this.isParamsValid = undefined;\n        this.isParamsCheckGoing = false;\n        this.paramsForm.resetForm(this.item);\n        this.regionForm.resetForm(this.item);\n        this.dtFrom.resetForm(this.item);\n    }\n\n    doFinish(): void {\n        this.wizard.forceFinish();\n    }\n\n    onCheckParams() {\n        if (this.isParamsCheckGoing) {\n            return;\n        }\n        this.isParamsValid = false;\n        this.isParamsCheckGoing = true;\n        this.item.regionVars['provider'] = this.item.provider;\n        this.regionService.listDatacenter(this.item).subscribe(data => {\n            this.isParamsValid = true;\n            this.isParamsCheckGoing = false;\n            this.cloudRegions = data.result;\n            this.paramsForm.valueChanges.subscribe(() => {\n                this.isParamsValid = undefined;\n            });\n        }, error => {\n            this.isParamsValid = false;\n            this.isParamsCheckGoing = false;\n        });\n    }\n\n\n    onSubmit() {\n        this.regionService.create(this.item).subscribe(res => {\n            this.opened = false;\n            this.created.emit();\n            this.doFinish();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_CREATE_REGION'|translate}}</clr-wizard-title>\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"regionForm.invalid\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #regionForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 type=\"text\" maxlength=\"15\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_PROVIDER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.provider\" name=\"provider\" required>\n                    <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let template of cloudProviders\" [value]=\"template.name\">{{template.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"paramsForm.invalid || !isParamsValid\">\n        <ng-template clrPageTitle>{{'APP_REGION_PARAM_CONFIG'|translate}}</ng-template>\n        <form clrForm #paramsForm='ngForm'>\n            <div *ngIf=\"item.provider === 'vSphere'\">\n                <clr-input-container>\n                    <label>{{'APP_REGION_VCENTER_HOST'|translate}}</label>\n                    <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.regionVars['host']\" name=\"vcHost\" required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_API'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_REGION_VCENTER_PORT'|translate}}</label>\n                    <input clrInput size=45 type=\"number\" [(ngModel)]=\"item.regionVars['port']\" name=\"vcPort\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_PORT_HELP'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_USERNAME'|translate}}</label>\n                    <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.regionVars['username']\" name=\"vcUsername\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_USER_HELP'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-password-container>\n                    <label>{{'APP_PASSWORD'|translate}}</label>\n                    <input clrPassword size=45 type=\"password\" [(ngModel)]=\"item.regionVars['password']\"\n                           name=\"vcPassword\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_PASSWORD_HELP'|translate}}</clr-control-helper>\n                </clr-password-container>\n                <button class=\"btn\" [disabled]=\"paramsForm.invalid || isParamsCheckGoing\" (click)=\"onCheckParams()\">\n                    <i *ngIf=\"isParamsCheckGoing\" class=\"fa fa-spinner fa-pulse\"></i>\n                    {{'APP_REGION_VCENTER_CHECK'|translate}}\n                </button>\n                <br>\n                <span *ngIf=\"isParamsValid&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #859900;\"> {{'APP_REGION_VCENTER_PARAM_VALID'|translate}}</span>\n                <span *ngIf=\"isParamsValid==false&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #e02200;\"> {{'APP_REGION_VCENTER_PARAM_INVALID'|translate}}</span>\n            </div>\n            <div *ngIf=\"item.provider === 'OpenStack'\">\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_ID'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['identity']\" name=\"identity\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_KEYSTONE'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_USERNAME'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['username']\" name=\"openstack_username\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_USERNAME'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-password-container>\n                    <label>{{'APP_PASSWORD'|translate}}</label>\n                    <input clrPassword type=\"text\" [(ngModel)]=\"item.regionVars['password']\" name=\"openstack_password\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_PASSWORD'|translate}}</clr-control-helper>\n                </clr-password-container>\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_PROJECT'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['projectId']\" name=\"projectId\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_PROJECT_HELPER'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_DOMAIN'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['domainName']\" name=\"domainName\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_DOMAIN_HELPER'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <button class=\"btn\" [disabled]=\"isParamsCheckGoing || paramsForm.invalid\" (click)=\"onCheckParams()\">\n                    <i *ngIf=\"isParamsCheckGoing\" class=\"fa fa-spinner fa-pulse\"></i>\n                    {{'APP_REGION_VCENTER_CHECK'|translate}}\n                </button>\n                <span *ngIf=\"isParamsValid&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #859900;\"> {{'APP_REGION_VCENTER_PARAM_VALID'|translate}}</span>\n                <span *ngIf=\"isParamsValid==false&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #e02200;\"> {{'APP_REGION_VCENTER_PARAM_INVALID'|translate}}</span>\n            </div>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"dtFrom.invalid\" #finishPage (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</ng-template>\n        <form clrForm #dtFrom='ngForm'>\n            <clr-select-container>\n                <label>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.datacenter\" name=\"cloud-region\" required>\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option [value]=\"cRegion\" *ngFor=\"let cRegion of cloudRegions\">{{cRegion}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-region-delete',\n    templateUrl: './region-delete.component.html',\n    styleUrls: ['./region-delete.component.css']\n})\nexport class RegionDeleteComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    items: Region[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items: Region[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.regionService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n            this.opened = false;\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_REGION_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\n\n@Component({\n    selector: 'app-region-detail',\n    templateUrl: './region-detail.component.html',\n    styleUrls: ['./region-detail.component.css']\n})\nexport class RegionDetailComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    @Output() detail = new EventEmitter();\n    item: Region = new Region();\n\n    constructor(private regionService: RegionService) {\n        super(regionService)\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_REGION_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item && item.regionVars['provider'] === 'vSphere'\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_PROVIDER'|translate}}\n                    :</b>{{item.regionVars['provider']}}</li>\n                <!--                <li><b style=\"margin-right: 16px\">集群数量:</b>{{item.cluster_size}}</li>-->\n                <!--                <li><b style=\"margin-right: 16px\">可用区数量:</b>{{item.zone_size}}</li>-->\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VCENTER_DATACENTER'|translate}}:</b>\n                    {{item.datacenter}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VC_HOST'|translate}}:</b>{{item.regionVars['host']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VC_USER'|translate}}:</b>{{item.regionVars['username']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}\n                    :</b>{{item.createdAt |  date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-body\" *ngIf=\"item && item.regionVars['provider'] === 'OpenStack'\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_PROVIDER'|translate}}:</b>{{item.regionVars['provider']}}</li>\n<!--                <li><b style=\"margin-right: 16px\">集群数量:</b>{{currentRegion.cluster_size}}</li>-->\n<!--                <li><b style=\"margin-right: 16px\">可用区数量:</b>{{currentRegion.zone_size}}</li>-->\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VCENTER_DATACENTER'|translate}}:</b>{{item.datacenter}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_ID'|translate}}:</b>{{item.regionVars['identity']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_USERNAME'|translate}}:</b>{{item.regionVars['username']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_PROJECT'|translate}}:</b>{{item.regionVars['projectId']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_DOMAIN'|translate}}:</b>{{item.regionVars['domainName']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}:</b>{{item.createdAt |  date: 'yyyy-MM-dd HH:mm:ss'}}\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\n\n@Component({\n    selector: 'app-region-list',\n    templateUrl: './region-list.component.html',\n    styleUrls: ['./region-list.component.css']\n})\nexport class RegionListComponent extends BaseModelComponent<Region> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Region>();\n\n    constructor(private regionService: RegionService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION_PROVIDER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.regionVars['provider']}}</clr-dg-cell>\n        <clr-dg-cell>{{item.datacenter}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_REGION\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RegionListComponent} from './region-list/region-list.component';\nimport {RegionCreateComponent} from './region-create/region-create.component';\nimport {RegionDeleteComponent} from './region-delete/region-delete.component';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Region} from './region';\nimport {RegionService} from './region.service';\nimport {RegionDetailComponent} from './region-detail/region-detail.component';\n\n@Component({\n    selector: 'app-region',\n    templateUrl: './region.component.html',\n    styleUrls: ['./region.component.css']\n})\nexport class RegionComponent extends BaseModelComponent<Region> implements OnInit {\n\n    @ViewChild(RegionListComponent, {static: true})\n    list: RegionListComponent;\n\n    @ViewChild(RegionCreateComponent, {static: true})\n    create: RegionCreateComponent;\n\n    @ViewChild(RegionDeleteComponent, {static: true})\n    delete: RegionDeleteComponent;\n\n    @ViewChild(RegionDetailComponent, {static: true})\n    detail: RegionDetailComponent;\n\n    constructor(private regionService: RegionService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_REGION_PROMPT'|translate}}</p>\n<app-region-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (detailEvent)=\"openDetail($event)\"></app-region-list>\n<app-region-create (created)=\"refresh()\"></app-region-create>\n<app-region-delete (deleted)=\"refresh()\"></app-region-delete>\n<app-region-detail (detail)=\"refresh()\"></app-region-detail>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RegionComponent} from './region.component';\nimport {RegionCreateComponent} from './region-create/region-create.component';\nimport {RegionListComponent} from './region-list/region-list.component';\nimport {RegionDeleteComponent} from './region-delete/region-delete.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport { RegionDetailComponent } from './region-detail/region-detail.component';\n\n\n@NgModule({\n    declarations: [RegionComponent, RegionCreateComponent, RegionListComponent, RegionDeleteComponent, RegionDetailComponent],\n    exports: [\n        RegionListComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class RegionModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {Region, RegionCreateRequest} from './region';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegionService extends BaseModelService<Region> {\n\n    baseUrl = '/api/v1/regions';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listDatacenter(item: RegionCreateRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/datacenter/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class Region extends BaseModel {\n    id: string;\n    name: string;\n    vars: string;\n    datacenter: string;\n    regionVars: {} = {};\n}\n\nexport class RegionCreateRequest extends BaseRequest {\n    id: string;\n    regionVars: {} = {};\n    provider: string;\n    datacenter: string;\n    vars: string;\n}\n\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {CloudTemplate, CloudZone, CloudZoneRequest, Subnet, Zone, ZoneCreateRequest} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {RegionService} from '../../region/region.service';\nimport {Region, RegionCreateRequest} from '../../region/region';\nimport {ClrWizard, ClrWizardPage} from '@clr/angular';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport * as ipaddr from 'ipaddr.js';\nimport {CredentialService} from '../../../setting/credential/credential.service';\nimport {Credential} from '../../../setting/credential/credential';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n    selector: 'app-zone-create',\n    templateUrl: './zone-create.component.html',\n    styleUrls: ['./zone-create.component.css']\n})\nexport class ZoneCreateComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: ZoneCreateRequest = new ZoneCreateRequest();\n    cloudZoneRequest: CloudZoneRequest = new CloudZoneRequest();\n    regions: Region[] = [];\n    cloudZones: CloudZone[] = [];\n    cloudTemplates: CloudTemplate[] = [];\n    region: Region = new Region();\n    cloudZone: CloudZone;\n    templateLoading = false;\n    networkError = [];\n    networkValid = false;\n    subnetList: Subnet[] = [];\n    credentials: Credential[] = [];\n    @Output() created = new EventEmitter();\n    @ViewChild('wizard') wizard: ClrWizard;\n    @ViewChild('finishPage') finishPage: ClrWizardPage;\n    @ViewChild('basicForm', {static: true}) basicForm: NgForm;\n    @ViewChild('paramsForm', {static: true}) paramsForm: NgForm;\n\n\n    constructor(private zoneService: ZoneService, private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService,\n                private credentialService: CredentialService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    open() {\n        this.item = new ZoneCreateRequest();\n        this.opened = true;\n        this.listRegions();\n        this.listCredentials();\n        this.item.cloudVars['templateType'] = 'default';\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.item = new ZoneCreateRequest();\n        this.basicForm.resetForm(this.item);\n        this.paramsForm.resetForm(this.item);\n    }\n\n    doFinish(): void {\n        this.wizard.forceFinish();\n    }\n\n    onSubmit(): void {\n        this.zoneService.create(this.item).subscribe(res => {\n            this.doFinish();\n            this.onCancel();\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n    changeRegion() {\n        this.regions.forEach(region => {\n            if (region.name === this.item.regionName) {\n                this.region = region;\n                this.region.regionVars = JSON.parse(this.region.vars);\n                this.cloudZoneRequest.cloudVars = JSON.parse(this.region.vars);\n                this.cloudZoneRequest.cloudVars['datacenter'] = this.region.datacenter;\n                this.item.regionID = region.id;\n            }\n        });\n    }\n\n    changeCloudZone() {\n        this.cloudZones.forEach(cloudZone => {\n            if (cloudZone.cluster === this.item.cloudVars['cluster']) {\n                this.cloudZone = cloudZone;\n            }\n        });\n    }\n\n\n    changeNetwork() {\n        this.cloudZone.networkList.forEach(network => {\n            if (network.id === this.item.cloudVars['network']) {\n                this.subnetList = network.subnetList;\n            }\n        });\n    }\n\n    listCredentials() {\n        this.credentialService.list().subscribe(res => {\n            this.credentials = res.items;\n        });\n    }\n\n    listRegions() {\n        this.regionService.list().subscribe(res => {\n            this.regions = res.items;\n        }, error => {\n\n        });\n    }\n\n    listTemplates() {\n        this.templateLoading = true;\n        this.zoneService.listTemplates(this.cloudZoneRequest).subscribe(res => {\n            this.cloudTemplates = res.result;\n            this.templateLoading = false;\n        }, error => {\n            this.templateLoading = false;\n        });\n    }\n\n    listClusters() {\n        this.loading = true;\n        this.zoneService.listClusters(this.cloudZoneRequest).subscribe(res => {\n            this.cloudZones = res.result;\n            this.loading = false;\n        });\n    }\n\n    checkNetwork() {\n        this.networkError = [];\n        let result = true;\n\n        const cidr = this.item.cloudVars['networkCidr'].split('/', 2);\n        if (cidr.length !== 2) {\n            result = false;\n            this.networkValid = result;\n            this.networkError.push(this.translateService.instant('APP_IP_INVALID'));\n            return;\n        }\n        const address = cidr[0];\n        if (!ipaddr.isValid(address)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_INVALID'));\n        }\n        const netmask = Number(cidr[1]);\n        if (netmask < 0 || netmask > 32) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_NETMASK_INVALID'));\n        }\n\n        if (this.region.vars['provider'] === 'vSphere') {\n            const gateway = this.item.cloudVars['gateway'];\n            if (!ipaddr.isValid(gateway)) {\n                result = false;\n                this.networkError.push(this.translateService.instant('APP_GATEWAY_INVALID'));\n            }\n        }\n        this.networkValid = result;\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_ZONE_CREATE'|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\" (clrWizardPageOnCommit)=\"listClusters()\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #basicForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 maxlength=\"15\" type=\"text\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_REGION'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.regionName\" name=\"provider\" required (ngModelChange)=\"changeRegion()\">\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let region of regions\" [value]=\"region.name\">{{region.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"paramsForm.invalid\" #finishPage\n                     (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_REGION_PARAM_CONFIG'|translate}}</ng-template>\n        <clr-spinner *ngIf=\"loading\">loading</clr-spinner>\n        <form clrForm #paramsForm=\"ngForm\">\n            <div *ngIf=\"cloudZones.length>0\">\n\n                <div *ngIf=\"region.regionVars['provider'] === 'vSphere'\">\n                    <h3>{{'APP_COPMUTE'|translate}}</h3>\n                    <hr/>\n                    <clr-select-container>\n                        <label>{{'APP_CLUSTER'|translate}}</label>\n                        <select [(ngModel)]=\"item.cloudVars['cluster']\" name=\"compute\"\n                                (ngModelChange)=\"changeCloudZone()\" required clrSelect>\n                            <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                            <option *ngFor=\"let zone of cloudZones\" [value]=\"zone.cluster\">{{zone.cluster}}</option>\n                        </select>\n                        <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                        <clr-control-helper>{{'APP_RESOURCE_POOL_HELPER'|translate}}</clr-control-helper>\n                    </clr-select-container>\n                    <div *ngIf=\"cloudZone\">\n                        <clr-select-container>\n                            <label>{{'APP_RESOURCE_POOL'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['resourcePool']\" name=\"resourcePool\" required clrSelect>\n                                <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let rp of cloudZone.resourcePools\" [value]='rp'>{{rp}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_RESOURCE_POOL_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                    </div>\n                    <div *ngIf=\"item.cloudVars['resourcePool']\">\n                        <h3>{{'APP_DATASTORE'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_DATASTORE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['datastore']\" name=\"datastore\" required clrSelect>\n                                <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let datastore of cloudZone.datastores\"\n                                        [value]=\"datastore\">{{datastore}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_DATASTORE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                    </div>\n                    <div *ngIf=\"item.cloudVars['datastore']\">\n                        <h3>{{'APP_TEMPLATE'|translate}}</h3>\n                        <hr/>\n                        <clr-radio-container clrInline>\n                            <label>{{'APP_TEMPLATE_TYPE'|translate}}</label>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"default\"\n                                       checked=\"checked\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"/>\n                                <label>{{'APP_DEFAULT'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"customize\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"\n                                       (ngModelChange)=\"listTemplates()\"/>\n                                <label>{{'APP_CUSTOMIZE'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-control-helper >\n                                <span *ngIf=\"item.cloudVars['templateType'] === 'customize'\"> {{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</span>\n                                <span *ngIf=\"item.cloudVars['templateType'] === 'default'\">{{'APP_TEMPLATE_DEFAULT_HELPER'|translate}}</span>\n                            </clr-control-helper>\n                        </clr-radio-container>\n                        <div *ngIf=\"item.cloudVars['templateType'] === 'customize'\">\n                            <clr-spinner *ngIf=\"templateLoading\">loading</clr-spinner>\n                            <div *ngIf=\"!templateLoading\">\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE'|translate}}</label>\n                                    <select [(ngModel)]=\"item.cloudVars['imageName']\" name=\"template\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let temp of cloudTemplates\"\n                                                [value]=temp.imageName>{{temp.imageName}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                </clr-select-container>\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE_PASSWORD'|translate}}</label>\n                                    <select [(ngModel)]=\"item.credentialId\" name=\"credential\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let credential of credentials\"\n                                                [value]=credential.id>{{credential.name}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                    <clr-control-helper>{{'APP_TEMPLATE_PASSWORD_HELPER'|translate}}</clr-control-helper>\n                                </clr-select-container>\n                            </div>\n                        </div>\n\n                        <h3>{{'APP_NETWORK'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_NETWORK_ADAPTER'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['network']\" name=\"network\" required clrSelect>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.networks\"\n                                        [value]=\"network\">{{network}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_CIDR'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['networkCidr']\" name=\"networkCidr\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_CIDR_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_GATEWAY'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['gateway']\" name=\"gateway\"\n                                   required>\n                        </clr-input-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_DNS1'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['dns1']\" name=\"dns1\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_DNS_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_DNS2'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['dns2']\" name=\"dns2\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_DNS_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                    </div>\n                </div>\n\n                <div *ngIf=\"region.regionVars['provider'] === 'OpenStack'\">\n                    <h3>{{'APP_COPMUTE'|translate}}</h3>\n                    <hr/>\n                    <clr-select-container>\n                        <label>{{'APP_ZONE'|translate}}</label>\n                        <select [(ngModel)]=\"item.cloudVars['cluster']\" name=\"compute\"\n                                (ngModelChange)=\"changeCloudZone()\"\n                                clrSelect required>\n                            <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                            <option *ngFor=\"let zone of cloudZones\"\n                                    [value]=\"zone.cluster\">{{zone.cluster}}</option>\n                        </select>\n                        <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                        <clr-control-helper>{{'APP_OPENSTACK_ZONE_HELPER'|translate}}</clr-control-helper>\n                    </clr-select-container>\n                    <div *ngIf=\"cloudZone\">\n                        <h3>{{'APP_DATASTORE'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_STORAGE_TYPE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['storageType']\" name=\"storage\"\n                                    clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let storage of cloudZone.storages\"\n                                        [value]=\"storage.id\">{{storage.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_STORAGE_TYPE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <h3>{{'APP_TEMPLATE'|translate}}</h3>\n                        <hr/>\n                        <clr-radio-container clrInline>\n                            <label>{{'APP_TEMPLATE_TYPE'|translate}}</label>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"default\"\n                                       checked=\"checked\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"/>\n                                <label>{{'APP_DEFAULT'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"customize\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"\n                                       (ngModelChange)=\"listTemplates()\"/>\n                                <label>{{'APP_CUSTOMIZE'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-control-helper\n                                    *ngIf=\"item.cloudVars['templateType'] === 'customize'\">{{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</clr-control-helper>\n                            <clr-control-helper\n                                    *ngIf=\"item.cloudVars['templateType'] === 'default'\">{{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</clr-control-helper>\n                        </clr-radio-container>\n                        <div *ngIf=\"item.cloudVars['templateType'] === 'customize'\">\n                            <clr-spinner *ngIf=\"templateLoading\">loading</clr-spinner>\n                            <div *ngIf=\"!templateLoading\">\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE'|translate}}</label>\n                                    <select [(ngModel)]=\"item.cloudVars['imageName']\" name=\"template\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let temp of cloudTemplates\"\n                                                [value]=temp.imageName>{{temp.imageName}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                </clr-select-container>\n\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE_PASSWORD'|translate}}</label>\n                                    <select [(ngModel)]=\"item.credentialId\" name=\"credential\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let credential of credentials\"\n                                                [value]=credential.id>{{credential.name}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                    <clr-control-helper>{{'APP_TEMPLATE_PASSWORD_HELPER'|translate}}</clr-control-helper>\n                                </clr-select-container>\n                            </div>\n                        </div>\n\n                        <h3>{{'APP_NETWORK'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_SECURITY_GROUP'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['securityGroup']\" name=\"sg\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let sg of cloudZone.securityGroups\" [value]=\"sg\">{{sg}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_SECURITY_GROUP_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                        <clr-select-container>\n                            <label>{{'APP_NETWORK'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['network']\" name=\"network\" clrSelect\n                                    (ngModelChange)=\"changeNetwork()\"\n                                    required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.networkList\"\n                                        [value]=\"network.id\">{{network.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_NETWORK_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_IPTYPE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['ipType']\" name=\"ip_type\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let type of cloudZone.ipTypes\" [value]=\"type\">{{type}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_IPTYPE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container *ngIf=\"item.cloudVars['ipType'] === 'private'\">\n                            <label>{{'APP_OPENSTACK_SUBNET'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['subnet']\" name=\"subnet\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let subnet of subnetList\" [value]=\"subnet.id\">{{subnet.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_SUBNET_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container *ngIf=\"item.cloudVars['ipType'] === 'floating'\">\n                            <label>{{'APP_OPENSTACK_FLOATING_IP'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['floatingNetwork']\" name=\"floatingNetwork\" clrSelect\n                                    required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.floatingNetworkList\"\n                                        [value]=\"network.name\">{{network.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_FLOATING_IP_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_CIDR'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['networkCidr']\" name=\"networkCidr\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_CIDR_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                    </div>\n                </div>\n            </div>\n        </form>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\"\n                               [clrWizardButtonDisabled]=\"!networkValid\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n        <div>\n            <div>\n                <button class=\"btn\" (click)=\"checkNetwork()\"\n                        [disabled]=\"paramsForm.invalid\">{{'APP_IP_CHECK'|translate}}</button>\n            </div>\n            <ul>\n                <li *ngFor=\"let error of networkError\">{{error}}</li>\n            </ul>\n        </div>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ZoneService} from '../zone.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-zone-delete',\n    templateUrl: './zone-delete.component.html',\n    styleUrls: ['./zone-delete.component.css']\n})\nexport class ZoneDeleteComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    @Output() deleted = new EventEmitter();\n\n    constructor(private zoneService: ZoneService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(items: Zone[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n\n    onSubmit() {\n        this.zoneService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.opened = false;\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ZONE_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ZoneService} from '../zone.service';\n\n@Component({\n    selector: 'app-zone-detail',\n    templateUrl: './zone-detail.component.html',\n    styleUrls: ['./zone-detail.component.css']\n})\nexport class ZoneDetailComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: Zone = new Zone()\n\n    @Output() detail = new EventEmitter()\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService)\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(item) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_ZONE_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\" *ngIf=\"item.region.regionVars['provider'] === 'vSphere'\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>{{item.region.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_RESOURCE_POOL'|translate}}\n                    :</b>{{item.cloudVars['resourcePool']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CLUSTER'|translate}}:</b>{{item.cloudVars['cluster']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_DATASTORE'|translate}}:</b>{{item.cloudVars['datastore']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK'|translate}}:</b>{{item.cloudVars['network']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_CIDR'|translate}}:</b>{{item.cloudVars['networkCidr']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_GATEWAY'|translate}}:</b>{{item.cloudVars['gateway']}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_DNS1'|translate}}:</b>{{item.cloudVars['dns1']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_DNS2'|translate}}:</b>{{item.cloudVars['dns2']}}</li>\n                <li *ngIf=\"item.cloudVars['templateType'] === 'customize'\"><b\n                        style=\"margin-right: 16px\">{{'APP_TEMPLATE'|translate}}:</b>{{item.cloudVars['imageName']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}\n                    :</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n            <ul class=\"list-unstyled\" *ngIf=\"item.region.regionVars['provider'] === 'OpenStack'\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION'|translate}}:</b>{{item.region.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>{{item.cloudVars['cluster']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_STORAGE_TYPE'|translate}}:</b>{{item.cloudVars['storageType']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK'|translate}}:</b>{{item.cloudVars['network']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_CIDR'|translate}}:</b>{{item.cloudVars['networkCidr']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_SECURITY_GROUP'|translate}}:</b>{{item.cloudVars['securityGroup']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}:</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {Region} from '../../region/region';\n\n@Component({\n    selector: 'app-zone-list',\n    templateUrl: './zone-list.component.html',\n    styleUrls: ['./zone-list.component.css']\n})\nexport class ZoneListComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Region>();\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_STATUS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.region.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status | zoneStatus}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_REGION\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone, ZoneUpdateRequest} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {RegionService} from '../../region/region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport * as ipaddr from 'ipaddr.js';\n\n\n@Component({\n    selector: 'app-zone-update',\n    templateUrl: './zone-update.component.html',\n    styleUrls: ['./zone-update.component.css']\n})\nexport class ZoneUpdateComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: ZoneUpdateRequest = new ZoneUpdateRequest()\n    networkError = [];\n    @Output() updated = new EventEmitter()\n\n    constructor(private zoneService: ZoneService, private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService) {\n        super(zoneService)\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.item = item;\n        this.item.cloudVars =  JSON.parse(item.vars);\n        this.opened = true;\n    }\n\n    checkIp() {\n        this.networkError = [];\n        let result = true;\n        const ipStart = this.item.cloudVars['ipStart'];\n        const ipEnd = this.item.cloudVars['ipEnd'];\n        if (!ipaddr.isValid(ipStart)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_START_INVALID'));\n        }\n        if (!ipaddr.isValid(ipEnd)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_END_INVALID'));\n        }\n        if (ipaddr.isValid(ipStart) && ipaddr.isValid(ipEnd)) {\n            const start = ipaddr.parse(ipStart).toByteArray();\n            const end = ipaddr.parse(ipEnd).toByteArray();\n            for (let i = 0; i < 4; i++) {\n                if (start[i] > end[i]) {\n                    result = false;\n                    this.networkError.push(this.translateService.instant('APP_IP_START_MUST'));\n                    break;\n                }\n            }\n        }\n        return result\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onConfirm() {\n        this.zoneService.update(this.item.name,this.item).subscribe(res => {\n            this.onCancel();\n        }, error => {\n\n        })\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=false>:\n    <h3 class=\"modal-title\">{{'APP_ZONE_EDIT'|translate}}</h3>\n    <div class=\"modal-body\">\n        <div *ngIf=\"item\">\n            <form clrForm #editForm='ngForm'>\n                <clr-input-container>\n                    <label>{{'APP_NETWORK_START_IP'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.cloudVars['ipStart']\" name=\"ip_start\" (change)=\"checkIp()\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_NETWORK_END_IP'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.cloudVars['ipEnd']\" name=\"ip_end\" (change)=\"checkIp()\" required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                </clr-input-container>\n                <ul>\n                    <li *ngFor=\"let error of networkError\">{{error}}</li>\n                </ul>\n            </form>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"onConfirm()\"\n                        [disabled]=\"editForm.invalid || networkError.length!==0\">\n                    {{'APP_COMMIT'|translate}}\n                </button>\n            </div>\n        </div>\n    </div>\n\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Zone} from './zone';\nimport {ZoneService} from './zone.service';\nimport {ZoneListComponent} from './zone-list/zone-list.component';\nimport {ZoneUpdateComponent} from './zone-update/zone-update.component';\nimport {ZoneDeleteComponent} from './zone-delete/zone-delete.component';\nimport {ZoneCreateComponent} from './zone-create/zone-create.component';\nimport {ZoneDetailComponent} from './zone-detail/zone-detail.component';\n\n@Component({\n    selector: 'app-zone',\n    templateUrl: './zone.component.html',\n    styleUrls: ['./zone.component.css']\n})\nexport class ZoneComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    @ViewChild(ZoneListComponent, {static: true})\n    list: ZoneListComponent;\n\n    @ViewChild(ZoneUpdateComponent, {static: true})\n    update: ZoneUpdateComponent;\n\n    @ViewChild(ZoneDeleteComponent, {static: true})\n    delete: ZoneDeleteComponent;\n\n    @ViewChild(ZoneCreateComponent, {static: true})\n    create: ZoneCreateComponent;\n\n    @ViewChild(ZoneDetailComponent, {static: true})\n    detail: ZoneDetailComponent;\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n\n    openUpdate(item) {\n        this.update.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_ZONE_PROMPT'|translate}}</p>\n<app-zone-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n               (detailEvent)=\"openDetail($event)\" (updateEvent)=\"openUpdate($event)\"></app-zone-list>\n<app-zone-create (created)=\"refresh()\"></app-zone-create>\n<app-zone-delete (deleted)=\"refresh()\"></app-zone-delete>\n<app-zone-detail (detail)=\"refresh()\"></app-zone-detail>\n<app-zone-update (updated)=\"refresh()\"></app-zone-update>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ZoneCreateComponent} from './zone-create/zone-create.component';\nimport {ZoneDeleteComponent} from './zone-delete/zone-delete.component';\nimport {ZoneUpdateComponent} from './zone-update/zone-update.component';\nimport {ZoneListComponent} from './zone-list/zone-list.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {ZoneComponent} from './zone.component';\nimport { ZoneDetailComponent } from './zone-detail/zone-detail.component';\n\n\n@NgModule({\n    declarations: [ZoneComponent, ZoneCreateComponent, ZoneDeleteComponent, ZoneUpdateComponent, ZoneListComponent, ZoneDetailComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class ZoneModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {CloudZoneRequest, Zone} from './zone';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ZoneService extends BaseModelService<Zone> {\n\n    baseUrl = '/api/v1/zones';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listClusters(item: CloudZoneRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/clusters/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n\n    listTemplates(item: CloudZoneRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/templates/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n\n    listByRegionId(regionId: string): Observable<any> {\n        const itemUrl = `${this.baseUrl}/list/` + regionId + '/';\n        return this.http.get<any>(itemUrl);\n    }\n\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\nimport {Region} from '../region/region';\n\nexport class Zone extends BaseModel {\n    id: string;\n    name: string;\n    vars: string;\n    credentialId: string;\n    cloudVars: {} = {};\n    region: Region = new Region();\n    status: string;\n}\n\nexport class ZoneCreateRequest extends BaseRequest {\n    vars: string;\n    regionName: string;\n    regionID: string;\n    cloudVars: {} = {};\n    provider: string;\n    credentialId: string;\n}\n\nexport class ZoneUpdateRequest extends BaseRequest {\n    vars: string;\n    regionID: string;\n    cloudVars: {} = {};\n}\n\nexport class CloudZoneRequest extends BaseRequest {\n    cloudVars: {} = {};\n    datacenter: string;\n}\n\nexport class CloudZone {\n    cluster: string;\n    networks: [] = [];\n    resourcePools: [] = [];\n    datastores: [] = [];\n    storages: Storage[] = [];\n    securityGroups: [] = [];\n    networkList: Network[] = [];\n    floatingNetworkList: Network[] = [];\n    ipTypes: [] = [];\n    imageList: Image[] = [];\n}\n\nexport class CloudTemplate {\n    imageName: string;\n    guestId: string;\n}\n\nexport class Storage {\n    id: string;\n    name: string;\n}\n\nexport class Network {\n    id: string;\n    name: string;\n    subnetList: Subnet[] = [];\n}\n\nexport class Subnet {\n    id: string;\n    name: string;\n}\n\nexport class Image {\n    id: string;\n    name: string;\n}\n\n\n\n\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host, HostCreateRequest} from '../host';\nimport {HostService} from '../host.service';\nimport {NgForm} from '@angular/forms';\nimport {CredentialService} from '../../setting/credential/credential.service';\nimport {Credential} from '../../setting/credential/credential';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-host-create',\n    templateUrl: './host-create.component.html',\n    styleUrls: ['./host-create.component.css']\n})\nexport class HostCreateComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: HostCreateRequest = new HostCreateRequest();\n    credentials: Credential[] = [];\n    @ViewChild('hostForm') hostForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private hostService: HostService, private credentialService: CredentialService,\n                private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.credentialService.list().subscribe(data => {\n            this.credentials = data.items;\n        });\n        this.opened = true;\n        this.item = new HostCreateRequest();\n        this.hostForm.resetForm();\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.hostService.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #hostForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_IP\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"ip\" [(ngModel)]=\"item.ip\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_PORT\"|translate}}</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"port\" [(ngModel)]=\"item.port\" required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{\"APP_CREDENTIAL\"|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.credentialId\" name=\"credential\" required>\n                    <option *ngFor=\"let item of credentials\" [value]=\"item.id\">{{item.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"hostForm.invalid\">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\nimport {HostService} from '../host.service';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-host-delete',\n    templateUrl: './host-delete.component.html',\n    styleUrls: ['./host-delete.component.css']\n})\nexport class HostDeleteComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    items: Host[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private hostService: HostService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.opened = true;\n        this.items = items;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\nimport {HostService} from '../host.service';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-host-detail',\n    templateUrl: './host-detail.component.html',\n    styleUrls: ['./host-detail.component.css']\n})\nexport class HostDetailComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    item: Host = new Host();\n    loading = false;\n    @Output() detail = new EventEmitter();\n\n    constructor(private hostService: HostService, private modalAlertService: ModalAlertService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    onCancel() {\n        this.item = new Host();\n        this.opened = false;\n        this.loading = false;\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onSync() {\n        this.loading = true;\n        this.hostService.sync(this.item.name, this.item).subscribe(data => {\n            this.item = data;\n            this.loading = false;\n        }, res => {\n            this.modalAlertService.showAlert(res.error.msg, AlertLevels.ERROR);\n            this.loading = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">{{'APP_HOST_SPEC'|translate}}</h3>\n    <div class=\"modal-body\">\n        <div *ngIf=\"item!=null && !loading\">\n            <h5>{{'APP_BASIC_INFORMATION'|translate}}</h5>\n            <hr/>\n            {{'APP_CPU'|translate}}:{{item.cpuCore}} <br/>\n            {{'APP_HOST_MEMORY'|translate}}:{{item.memory}} <br/>\n            {{'APP_OS'|translate}}:{{item.os}} {{item.osVersion}}<br/>\n            <h5>{{'APP_HOST_DISK_SPEC'|translate}}</h5>\n            <hr/>\n            <clr-datagrid>\n                <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n                <clr-dg-column>{{'APP_HOST_DISK_SIZE'|translate}}</clr-dg-column>\n\n                <clr-dg-row *clrDgItems=\"let volume of item.volumes\" [clrDgItem]=\"volume\">\n                    <clr-dg-cell>{{volume.name}}</clr-dg-cell>\n                    <clr-dg-cell>{{volume.size}}</clr-dg-cell>\n                </clr-dg-row>\n            </clr-datagrid>\n            <br/>\n            <!--            <div *ngIf=\"item.gpus.length>0\">-->\n            <!--                <h5>显卡信息</h5>-->\n            <!--                <hr/>-->\n            <!--                <clr-datagrid>-->\n            <!--                    <clr-dg-column>名称</clr-dg-column>-->\n            <!--                    <clr-dg-row *clrDgItems=\"let gpu of host.gpus\" [clrDgItem]=\"gpu\">-->\n            <!--                        <clr-dg-cell>{{gpu.name}}</clr-dg-cell>-->\n            <!--                    </clr-dg-row>-->\n            <!--                </clr-datagrid>-->\n            <!--            </div>-->\n            <!--            <h5>健康检查</h5>-->\n            <!--            <hr/>-->\n            <!--            <clr-datagrid>-->\n            <!--                <clr-dg-column>原因</clr-dg-column>-->\n            <!--                <clr-dg-column>采集时间</clr-dg-column>-->\n            <!--                <clr-dg-column>状态</clr-dg-column>-->\n            <!--                <clr-dg-column>消息</clr-dg-column>-->\n\n            <!--                <clr-dg-row *clrDgItems=\"let con of host.conditions\" [clrDgItem]=\"con\">-->\n            <!--                    <clr-dg-cell>{{con.reason}}</clr-dg-cell>-->\n            <!--                    <clr-dg-cell>{{con.last_time}}</clr-dg-cell>-->\n            <!--                    <clr-dg-cell style=\"text-align: center\">-->\n            <!--                        <i class=\"fa fa-check\" aria-hidden=\"true\" *ngIf=\"con.status\"></i>-->\n            <!--                        <i class=\"fa fa-close\" aria-hidden=\"true\" *ngIf=\"!con.status\"></i>-->\n            <!--                    </clr-dg-cell>-->\n            <!--                    <clr-dg-cell>{{con.message}}</clr-dg-cell>-->\n            <!--                </clr-dg-row>-->\n            <!--            </clr-datagrid>-->\n        </div>\n        <div *ngIf=\"loading\" style=\"text-align: center\">\n            <clr-spinner></clr-spinner>\n        </div>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"onCancel()\" [disabled]=\"loading\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn\" (click)=\"onSync()\" [disabled]=\"loading\">{{'APP_REFRESH'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HostService} from '../host.service';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\n\n@Component({\n    selector: 'app-host-list',\n    templateUrl: './host-list.component.html',\n    styleUrls: ['./host-list.component.css']\n})\nexport class HostListComponent extends BaseModelComponent<Host> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Host>();\n\n    constructor(private hostService: HostService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onStatusDetail(item) {\n        this.detailEvent.emit(item);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CLUSTER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_IP'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CPU'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_HOST_MEMORY'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_GPU'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_OS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_STATUS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onStatusDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.cluster.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.ip}}</clr-dg-cell>\n        <clr-dg-cell>{{item.cpuCore}}</clr-dg-cell>\n        <clr-dg-cell>{{item.memory}}</clr-dg-cell>\n        <clr-dg-cell>{{item.gpuNum}}</clr-dg-cell>\n        <clr-dg-cell>{{item.os}} {{item.osVersion}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_HOST\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostListComponent} from './host-list/host-list.component';\nimport {HostCreateComponent} from './host-create/host-create.component';\nimport {HostDeleteComponent} from './host-delete/host-delete.component';\nimport {Host} from './host';\nimport {HostDetailComponent} from './host-detail/host-detail.component';\n\n@Component({\n    selector: 'app-host',\n    templateUrl: './host.component.html',\n    styleUrls: ['./host.component.css']\n})\nexport class HostComponent implements OnInit {\n\n    @ViewChild(HostListComponent, {static: true})\n    list: HostListComponent;\n\n    @ViewChild(HostCreateComponent, {static: true})\n    create: HostCreateComponent;\n\n    @ViewChild(HostDeleteComponent, {static: true})\n    delete: HostDeleteComponent;\n\n    @ViewChild(HostDetailComponent, {static: true})\n    detail: HostDetailComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: Host[]) {\n        this.delete.open(items);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_HOST' | translate }}</h2>\n        <app-host-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                       (detailEvent)=\"openDetail($event)\"></app-host-list>\n        <app-host-delete (deleted)=\"refresh()\"></app-host-delete>\n        <app-host-create (created)=\"refresh()\"></app-host-create>\n        <app-host-detail (detail)=\"refresh()\"></app-host-detail>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { HostComponent } from './host.component';\nimport { HostListComponent } from './host-list/host-list.component';\nimport { HostCreateComponent } from './host-create/host-create.component';\nimport { HostDeleteComponent } from './host-delete/host-delete.component';\nimport {CoreModule} from '../../core/core.module';\nimport { HostDetailComponent } from './host-detail/host-detail.component';\nimport {SharedModule} from '../../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [HostComponent, HostListComponent, HostCreateComponent, HostDeleteComponent, HostDetailComponent],\n    imports: [\n        CoreModule,\n        SharedModule,\n    ]\n})\nexport class HostModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {Observable} from 'rxjs';\nimport {Host, HostCreateRequest} from './host';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HostService extends BaseModelService<any> {\n\n    baseUrl = '/api/v1/hosts';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    sync(name: string, item: HostCreateRequest): Observable<Host> {\n        const itemUrl = `${this.baseUrl}/sync/${name}/`;\n        return this.http.post<Host>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../shared/class/BaseModel';\nimport {Credential} from '../setting/credential/credential';\nimport {Cluster} from '../cluster/cluster';\n\nexport class Host extends BaseModel {\n\n    id: string;\n    name: string;\n    ip: string;\n    port: string;\n    credentialId: string;\n    os: string;\n    osVersion: string;\n    memory: string;\n    cpuCore: number;\n    gpuNum: number;\n    gpuInfo: string;\n    status: string;\n    volumes: Volume[];\n    credential: Credential;\n    cluster: Cluster;\n}\n\nexport class Volume extends BaseModel {\n    ID: string;\n    size: string;\n    name: string;\n    hostId: string;\n}\n\nexport class HostCreateRequest extends BaseRequest {\n    name: string;\n    ip: string;\n    port: string;\n    credentialId: string;\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CredentialCreateRequest} from '../credential';\nimport {NgForm} from '@angular/forms';\nimport {CredentialService} from '../credential.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-create',\n    templateUrl: './credential-create.component.html',\n    styleUrls: ['./credential-create.component.css']\n})\nexport class CredentialCreateComponent implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: CredentialCreateRequest = new CredentialCreateRequest();\n    @ViewChild('credentialForm') credentialForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.item = new CredentialCreateRequest();\n        this.credentialForm.resetForm();\n        this.opened = true;\n        this.item.type = 'password';\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.service.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #credentialForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_USERNAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"username\" [(ngModel)]=\"item.username\" required/>\n            </clr-input-container>\n            <clr-radio-container>\n                <label>{{\"APP_TYPE\"|translate}}</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"password\" [(ngModel)]=\"item.type\"/>\n                    <label>password</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"privateKey\" [(ngModel)]=\"item.type\"/>\n                    <label>privateKey</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n            <clr-password-container *ngIf=\"item.type == 'password'\">\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input clrPassword size=\"32\" name=\"password\" [(ngModel)]=\"item.password\"/>\n            </clr-password-container>\n            <clr-textarea-container *ngIf=\"item.type == 'privateKey'\">\n                <label>密钥:</label>\n                <textarea clrTextarea [(ngModel)]=\"item.privateKey\" name=\"private_key\" required></textarea>\n            </clr-textarea-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\" [disabled]=\"isSubmitGoing\">取消</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"credentialForm.invalid\">提交\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Credential} from '../credential';\nimport {CredentialService} from '../credential.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-delete',\n    templateUrl: './credential-delete.component.html',\n    styleUrls: ['./credential-delete.component.css']\n})\nexport class CredentialDeleteComponent implements OnInit {\n\n    opened = false;\n    items: Credential[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(items: Credential[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.opened = false;\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CredentialService} from '../credential.service';\nimport {Credential} from '../credential';\nimport {NgForm} from '@angular/forms';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-edit',\n    templateUrl: './credential-edit.component.html',\n    styleUrls: ['./credential-edit.component.css']\n})\nexport class CredentialEditComponent implements OnInit {\n\n    item: Credential = new Credential();\n    opened = false;\n    isSubmitGoing = false;\n    @ViewChild('credentialEditForm') credentialForm: NgForm;\n    @Output() edit = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item: Credential) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.item = new Credential();\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.service.update(this.item.name, this.item).subscribe(data => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_UPDATE_SUCCESS'), AlertLevels.SUCCESS);\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.edit.emit();\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #credentialEditForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required readonly/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_USERNAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"username\" [(ngModel)]=\"item.username\" required/>\n            </clr-input-container>\n            <clr-radio-container>\n                <label>{{\"APP_TYPE\"|translate}}</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"password\" [(ngModel)]=\"item.type\"/>\n                    <label>password</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"privateKey\" [(ngModel)]=\"item.type\"/>\n                    <label>privateKey</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n            <clr-password-container *ngIf=\"item.type == 'password'\">\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input clrPassword size=\"32\" name=\"password\" [(ngModel)]=\"item.password\"/>\n            </clr-password-container>\n            <clr-textarea-container *ngIf=\"item.type == 'privateKey'\">\n                <label>密钥:</label>\n                <textarea clrTextarea [(ngModel)]=\"item.privateKey\" name=\"private_key\" required></textarea>\n            </clr-textarea-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\" [disabled]=\"isSubmitGoing\">取消</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"credentialEditForm.invalid\">提交\n        </button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {CredentialService} from '../credential.service';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Credential} from '../credential';\n\n@Component({\n    selector: 'app-credential-list',\n    templateUrl: './credential-list.component.html',\n    styleUrls: ['./credential-list.component.css']\n})\nexport class CredentialListComponent extends BaseModelComponent<Credential> implements OnInit {\n\n    constructor(private credentialService: CredentialService) {\n        super(credentialService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onUpdate(selected[0])\"\n                    [disabled]=\"selected.length!==1\">\n                <clr-icon shape=\"note\"></clr-icon>\n                {{\"APP_EDIT\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_USERNAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_TYPE'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.username}}</clr-dg-cell>\n        <clr-dg-cell>{{item.type}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_CREDENTIAL\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {CredentialListComponent} from './credential-list/credential-list.component';\nimport {CredentialCreateComponent} from './credential-create/credential-create.component';\nimport {CredentialDeleteComponent} from './credential-delete/credential-delete.component';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Credential} from './credential';\nimport {CredentialService} from './credential.service';\nimport {CredentialEditComponent} from './credential-edit/credential-edit.component';\n\n@Component({\n    selector: 'app-credential',\n    templateUrl: './credential.component.html',\n    styleUrls: ['./credential.component.css']\n})\nexport class CredentialComponent extends BaseModelComponent<Credential> implements OnInit {\n\n\n    @ViewChild(CredentialListComponent, {static: true})\n    list: CredentialListComponent;\n\n    @ViewChild(CredentialCreateComponent, {static: true})\n    create: CredentialCreateComponent;\n\n    @ViewChild(CredentialDeleteComponent, {static: true})\n    delete: CredentialDeleteComponent;\n\n    @ViewChild(CredentialEditComponent, {static: true})\n    edit: CredentialEditComponent;\n\n    constructor(private credentialService: CredentialService) {\n        super(credentialService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: Credential[]) {\n        this.delete.open(items);\n    }\n\n    openEdit(item: Credential) {\n        this.edit.open(item);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <app-credential-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (updateEvent)=\"openEdit($event)\"></app-credential-list>\n    <app-credential-create (created)=\"refresh()\"></app-credential-create>\n    <app-credential-delete (deleted)=\"refresh()\"></app-credential-delete>\n    <app-credential-edit (edit)=\"refresh()\"></app-credential-edit>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CredentialDeleteComponent} from './credential-delete/credential-delete.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {CredentialEditComponent} from './credential-edit/credential-edit.component';\nimport {CredentialListComponent} from './credential-list/credential-list.component';\nimport {CredentialComponent} from './credential.component';\nimport {CredentialCreateComponent} from './credential-create/credential-create.component';\nimport {SharedModule} from '../../../shared/shared.module';\n\n\n@NgModule({\n    declarations: [CredentialDeleteComponent, CredentialEditComponent, CredentialListComponent,\n        CredentialComponent, CredentialCreateComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class CredentialModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Credential} from './credential';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CredentialService extends BaseModelService<Credential> {\n\n    baseUrl = '/api/v1/credentials';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class Credential extends BaseModel {\n    id: string;\n    name: string;\n    username: string;\n    password: string;\n    privateKey: string;\n    type = 'password';\n}\n\n\nexport class CredentialCreateRequest extends BaseRequest {\n    id: string;\n    name: string;\n    username: string;\n    password: string;\n    privateKey: string;\n    type: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <h2> {{ 'APP_SYSTEM_SETTING' | translate }}</h2>\n</div>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"system\"\n               routerLinkActive=\"active\">{{ 'APP_SYSTEM' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"credential\"\n               routerLinkActive=\"active\">{{ 'APP_CREDENTIAL' | translate}}</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {SettingComponent} from './setting.component';\nimport {RouterModule} from '@angular/router';\nimport {CoreModule} from '../../core/core.module';\nimport {CredentialModule} from './credential/credential.module';\nimport { SystemComponent } from './system/system.component';\n\n\n@NgModule({\n    declarations: [SettingComponent, SystemComponent],\n    imports: [\n        RouterModule,\n        CoreModule,\n        CredentialModule,\n    ]\n})\n\nexport class SettingModule {\n\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {System} from './system/system';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystemService extends BaseModelService<System> {\n\n    baseUrl = '/api/v1/systemSettings';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {System, SystemCreateRequest} from './system';\nimport {SystemService} from '../system.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-system',\n    templateUrl: './system.component.html',\n    styleUrls: ['./system.component.css']\n})\nexport class SystemComponent extends BaseModelComponent<System> implements OnInit {\n\n    items: System[] = [];\n    item: SystemCreateRequest = new SystemCreateRequest();\n\n    constructor(private systemService: SystemService, private commonAlertService: CommonAlertService,\n                private translateService: TranslateService) {\n        super(systemService);\n    }\n\n    ngOnInit(): void {\n        this.listSystemSettings();\n    }\n\n\n    listSystemSettings() {\n        this.systemService.list().subscribe(res => {\n            this.items = res.items;\n            this.item.vars = this.items[0].vars;\n        });\n    }\n\n    onSubmit() {\n        this.systemService.create(this.item).subscribe(res => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.SUCCESS);\n        });\n    }\n}\n","<div>\n    <form clrForm #settingForm=\"ngForm\">\n        <div *ngIf=\"item\">\n            <clr-input-container>\n                <label>{{'APP_SYSTEM_IP'|translate}}</label>\n                <input clrInput [(ngModel)]=\"item.vars['ip']\" name=\"ip\" size=45 required/>\n                <clr-control-helper>{{'APP_SYSTEM_IP_HELPER'|translate}}</clr-control-helper>\n            </clr-input-container>\n        </div>\n    </form>\n    <button class=\"btn btn-info-outline\" (click)=\"onSubmit()\"\n            [disabled]=\"settingForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n</div>\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class System extends BaseModel {\n    vars: {} = {};\n}\n\nexport class SystemCreateRequest extends BaseRequest {\n    vars: {} = {};\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {User, UserCreateRequest} from '../user';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {UserService} from '../user.service';\nimport {NgForm} from '@angular/forms';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {PasswordPattern} from '../../../constant/pattern';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-user-create',\n    templateUrl: './user-create.component.html',\n    styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: UserCreateRequest = new UserCreateRequest();\n    passwordPattern = PasswordPattern;\n\n    @ViewChild('userForm') userForm: NgForm;\n    @Output() created = new EventEmitter();\n\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.item = new UserCreateRequest();\n        this.userForm.resetForm();\n    }\n\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.userService.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #userForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_EMAIL\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"email\" [(ngModel)]=\"item.email\"\n                       [email]=\"true\"\n                       required/>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-input-container>\n            <clr-password-container>\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input style=\"display:none\">\n                <input clrPassword [size]=\"32\" name=\"password\" [(ngModel)]=\"item.password\"\n                       pattern=\"{{passwordPattern}}\"\n                       required/>\n                <clr-control-helper\n                        *ngIf=\"item.password && item.confirmPassword && ( item.password != item.confirmPassword)\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{\"APP_CONFIRM_PASSWORD\"|translate}}</label>\n                <input style=\"display:none\">\n                <input clrPassword [size]=\"32\" name=\"confirmPassword\" [(ngModel)]=\"item.confirmPassword\"\n                       pattern=\"{{passwordPattern}}\" required/>\n                <clr-control-helper\n                        *ngIf=\"item.password && item.confirmPassword && ( item.password != item.confirmPassword)\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"userForm.invalid \">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-user-delete',\n    templateUrl: './user-delete.component.html',\n    styleUrls: ['./user-delete.component.css']\n})\nexport class UserDeleteComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    items: User[] = [];\n\n    @Output()\n    deleted = new EventEmitter();\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\n\n@Component({\n    selector: 'app-user-list',\n    templateUrl: './user-list.component.html',\n    styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent extends BaseModelComponent<User> implements OnInit {\n\n    constructor(private userService: UserService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onUpdate(selected[0])\"\n                    [disabled]=\"selected.length!==1\">\n                <clr-icon shape=\"note\"></clr-icon>\n                {{\"APP_EDIT\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_EMAIL'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_ENABLE'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.email}}</clr-dg-cell>\n        <clr-dg-cell>{{item.isActive}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt |date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_USER\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\nimport {NgForm} from '@angular/forms';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-user-update',\n    templateUrl: './user-update.component.html',\n    styleUrls: ['./user-update.component.css']\n})\nexport class UserUpdateComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    item: User = new User();\n    isSubmitGoing = false;\n    @ViewChild('userForm') userFrom: NgForm;\n\n    @Output()\n    update = new EventEmitter();\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.userService.update(this.item.name, this.item).subscribe(data => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_UPDATE_SUCCESS'), AlertLevels.SUCCESS);\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.update.emit();\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_EDIT'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #userForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_EMAIL\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"email\" [(ngModel)]=\"item.email\"\n                       [email]=\"true\"\n                       required/>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-input-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"userForm.invalid \">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserListComponent} from './user-list/user-list.component';\nimport {UserCreateComponent} from './user-create/user-create.component';\nimport {UserUpdateComponent} from './user-update/user-update.component';\nimport {UserDeleteComponent} from './user-delete/user-delete.component';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n    @ViewChild(UserListComponent, {static: true})\n    list: UserListComponent;\n\n    @ViewChild(UserCreateComponent, {static: true})\n    create: UserCreateComponent;\n\n    @ViewChild(UserUpdateComponent, {static: true})\n    update: UserUpdateComponent;\n\n    @ViewChild(UserDeleteComponent, {static: true})\n    delete: UserDeleteComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openUpdate(item) {\n        this.update.open(item);\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_USER_MANAGEMENT' | translate }}</h2>\n        <app-user-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                       (updateEvent)=\"openUpdate($event)\"></app-user-list>\n        <app-user-create (created)=\"refresh()\"></app-user-create>\n        <app-user-update></app-user-update>\n        <app-user-delete (deleted)=\"refresh()\"></app-user-delete>\n    </div>\n</div>","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Host, HostCreateRequest} from '../host/host';\nimport {Observable} from 'rxjs';\nimport {ChangePasswordRequest} from './user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService extends BaseModelService<any> {\n\n\n    baseUrl = '/api/v1/users';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    changePassword(item: ChangePasswordRequest): Observable<Host> {\n        const itemUrl = `${this.baseUrl}/change/password/`;\n        return this.http.post<Host>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../shared/class/BaseModel';\n\nexport class User extends BaseModel {\n    name: string;\n    id: string;\n    password: string;\n    email: string;\n    language: string;\n    isActive: string;\n    confirmPassword: string;\n}\n\nexport class UserCreateRequest extends BaseRequest {\n    name: string;\n    password: string;\n    email: string;\n    confirmPassword: string;\n}\n\nexport class ChangePasswordRequest extends BaseRequest {\n    name: string;\n    password: string;\n    original: string;\n}\n","export const PasswordPattern = '^(?=.*\\\\d)(?=.*[a-zA-Z])[\\\\da-zA-Z~!@#$%^&*]{6,20}$';\n","\nexport const CommonRoutes = {\n    LOGIN: '/login',\n    KO_ROOT: '/',\n};\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AppRoutingModule} from '../app-routing.module';\nimport {ClarityModule} from '@clr/angular';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {LSelect2Module} from 'ngx-select2';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ClarityModule,\n        TranslateModule,\n        LSelect2Module,\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ClarityModule,\n        TranslateModule,\n        LSelect2Module\n    ]\n})\nexport class CoreModule {\n}\n","export enum AlertLevels {\n    SUCCESS, ERROR\n}\n\nexport class Alert {\n    msg: string;\n    level: AlertLevels;\n\n    constructor(msg: string, level: AlertLevels) {\n        this.msg = msg;\n        this.level = level;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Alert, AlertLevels} from '../common-alert/alert';\nimport {AppAlertService} from './app-alert.service';\n\n@Component({\n    selector: 'app-app-alert',\n    templateUrl: './app-alert.component.html',\n    styleUrls: ['./app-alert.component.css']\n})\nexport class AppAlertComponent implements OnInit {\n\n    show = false;\n    level = '';\n    msg = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n    currentAlert: Alert;\n\n    constructor(private appAlertService: AppAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.appAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'info';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.appAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n\n    close() {\n        this.show = false;\n    }\n\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"true\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n          {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from './alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","export enum AlertLevels {\n    SUCCESS, ERROR\n}\n\nexport class Alert {\n    msg: string;\n    level: AlertLevels;\n\n    constructor(msg: string, level: AlertLevels) {\n        this.msg = msg;\n        this.level = level;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CommonAlertService} from './common-alert.service';\nimport {Alert, AlertLevels} from './alert';\n\n@Component({\n    selector: 'app-common-alert',\n    templateUrl: './common-alert.component.html',\n    styleUrls: ['./common-alert.component.css']\n})\n\nexport class CommonAlertComponent implements OnInit {\n\n    show = false;\n    level = '';\n    msg = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n    currentAlert: Alert;\n\n    constructor(private commonAlertService: CommonAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.commonAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'info';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.commonAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n\n    close() {\n        this.show = false;\n    }\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"false\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n          {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from './alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommonAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SessionService} from '../../shared/auth/session.service';\nimport {SessionUser} from '../../shared/auth/session-user';\nimport {Router} from '@angular/router';\nimport {CommonRoutes} from '../../constant/route';\nimport {PasswordComponent} from './password/password.component';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    user: SessionUser = new SessionUser();\n\n    @ViewChild(PasswordComponent, {static: true})\n    password: PasswordComponent;\n\n    constructor(private sessionService: SessionService, private router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.getProfile();\n    }\n\n    getProfile() {\n        const profile = this.sessionService.getCacheProfile();\n        if (profile != null) {\n            this.user = profile.user;\n        }\n    }\n\n    changePassword() {\n        this.password.open(this.user);\n    }\n\n    logOut() {\n        this.sessionService.clear();\n        this.router.navigateByUrl(CommonRoutes.LOGIN).then();\n    }\n}\n","\n<app-password></app-password>\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <img src=\"assets/images/logo-white.png\" height=\"40\" style=\"margin-top: 10px\">\n    </div>\n    <div class=\"header-actions\">\n        <!--        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">-->\n        <!--            <clr-icon shape=\"cog\"></clr-icon>-->\n        <!--        </a>-->\n        <clr-dropdown class=\"dropdown\">\n            <button class=\"nav-text\" clrDropdownToggle>\n                <clr-icon shape=\"user\" class=\"is-inverse\" size=\"24\"></clr-icon>\n                <span>{{user.name}}</span>\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu [clrPosition]=\"'bottom-right'\">\n                <a href=\"javascript:void(0)\" clrDropdownItem (click)=\"changePassword()\">{{'APP_SYSTEM_CHANGE_PASSWORD'|translate}}</a>\n                <a href=\"javascript:void(0)\" clrDropdownItem (click)=\"logOut()\">{{'APP_SYSTEM_LOGOUT'|translate}}</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PasswordPattern} from '../../../constant/pattern';\nimport {NgForm} from '@angular/forms';\nimport {UserService} from '../../../business/user/user.service';\nimport {SessionUser} from '../../../shared/auth/session-user';\nimport {ChangePasswordRequest} from '../../../business/user/user';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../common-alert/alert';\n\n@Component({\n    selector: 'app-password',\n    templateUrl: './password.component.html',\n    styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n    opened = false;\n    password: string;\n    confirmPassword: string;\n    original: string;\n    submitGoing = false;\n    passwordPattern = PasswordPattern;\n    user: SessionUser = new SessionUser();\n    changePasswordRequest: ChangePasswordRequest = new ChangePasswordRequest();\n    @ViewChild('passForm', {static: true}) passForm: NgForm;\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(user) {\n        this.user = user;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.passForm.resetForm();\n    }\n\n    onSubmit() {\n        this.submitGoing = true;\n        this.changePasswordRequest = {\n            password: this.password,\n            original: this.original,\n            name: this.user.name\n        };\n\n        this.userService.changePassword(this.changePasswordRequest).subscribe(res => {\n            this.submitGoing = false;\n            this.opened = false;\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n            this.submitGoing = false;\n        });\n    }\n\n    checkPassword() {\n        return this.password === this.confirmPassword;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_CHANGE_PASSWORD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #passForm=\"ngForm\">\n            <clr-password-container>\n                <label>{{'APP_OLD_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 type=\"password\" minlength=\"6\" maxlength=\"30\"\n                       [(ngModel)]=\"original\" name=\"old\" required>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{'APP_NEW_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 type=\"password\" [(ngModel)]=\"password\" name=\"name\"\n                       pattern=\"{{passwordPattern}}\" (change)=\"checkPassword()\" required>\n                <clr-control-helper\n                        *ngIf=\"!checkPassword() && password &&confirmPassword\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{'APP_CONFIRM_NEW_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 minlength=\"6\" maxlength=\"30\" type=\"password\" [(ngModel)]=\"confirmPassword\"\n                       name=\"name\"\n                       pattern=\"{{passwordPattern}}\" (change)=\"checkPassword()\" required>\n                <clr-control-helper *ngIf=\"!checkPassword() && password &&confirmPassword\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"passForm.invalid || !checkPassword()\">\n            <i *ngIf=\"submitGoing\" class=\"fa fa-spinner fa-pulse\"></i>{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-main-container>\n    <app-app-alert></app-app-alert>\n    <app-header></app-header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <app-common-alert></app-common-alert>\n            <router-outlet></router-outlet>\n        </div>\n        <app-navigation></app-navigation>\n    </div>\n    <!--    <app-footer></app-footer>-->\n</clr-main-container>\n","import {NgModule} from '@angular/core';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {LayoutComponent} from './layout.component';\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {AppAlertComponent} from './app-alert/app-alert.component';\nimport {CoreModule} from '../core/core.module';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared.module';\nimport {CommonAlertComponent} from './common-alert/common-alert.component';\nimport {PasswordComponent} from './header/password/password.component';\n\n@NgModule({\n    declarations: [HeaderComponent, FooterComponent, LayoutComponent,\n        NavigationComponent, AppAlertComponent, CommonAlertComponent, PasswordComponent],\n    exports: [\n        LayoutComponent\n    ],\n    imports: [\n        CoreModule,\n        RouterModule,\n        SharedModule,\n    ]\n})\nexport class LayoutModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\">\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/clusters\">\n        <clr-icon shape=\"cluster\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_CLUSTER' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/hosts\">\n        <clr-icon shape=\"host\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_HOST' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/deploy\">\n        <clr-icon shape=\"clock\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_DEPLOY_PLAN' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/users\">\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_USER_MANAGEMENT' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/setting\">\n        <clr-icon shape=\"cog\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_SYSTEM_SETTING' | translate }}\n    </a>\n</clr-vertical-nav>\n","export class LoginCredential {\n    username: string;\n    password: string;\n    language: string;\n}","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginCredential} from './login-credential';\nimport {LoginService} from './login.service';\nimport {Router} from '@angular/router';\nimport {SessionService} from '../shared/auth/session.service';\nimport {CommonRoutes} from '../constant/route';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    @ViewChild('loginForm', {static: true}) loginForm: NgForm;\n    @Input() loginCredential: LoginCredential = new LoginCredential();\n    message: string;\n    isError = false;\n\n    constructor(private loginService: LoginService,\n                private router: Router,\n                private sessionService: SessionService,\n                private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n        const currentLanguage = localStorage.getItem('currentLanguage');\n        if (currentLanguage) {\n            this.loginCredential.language = currentLanguage;\n        }else {\n            this.loginCredential.language = 'zh-CN';\n        }\n    }\n\n    login() {\n        this.loginService.login(this.loginCredential).subscribe(res => {\n            this.isError = false;\n            this.sessionService.cacheProfile(res);\n            localStorage.setItem('currentLanguage', this.loginCredential.language);\n            this.translateService.use(this.loginCredential.language);\n            this.router.navigateByUrl(CommonRoutes.KO_ROOT).then(r => console.log('login success'));\n        }, error => this.handleError(error));\n    }\n\n    handleError(error: any) {\n        this.isError = true;\n        switch (error.status) {\n            case 500:\n                this.message = error.error.message;\n                break;\n            case 504:\n                this.message = this.translateService.instant('APP_LOGIN_CONNECT_ERROR');\n                break;\n            case 401:\n                this.message = error.error.message;\n                break;\n            default:\n                this.message = this.translateService.instant('APP_LOGIN_CONNECT_UNKNOWN_ERROR') + `${error.status}`;\n        }\n    }\n}\n","<div class=\"login-wrapper background\">\n    <form class=\"login\" #loginForm=\"ngForm\">\n        <section class=\"title\">\n            <h3 class=\"welcome\">{{'APP_LOGIN_TITLE_WELCOME'|translate}}</h3>\n            {{'APP_LOGIN_TITLE_KO'|translate}}\n        </section>\n        <div class=\"login-group\">\n            <clr-input-container>\n                <label class=\"clr-sr-only\">{{'APP_USERNAME'|translate}}</label>\n                <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\"\n                       [(ngModel)]=\"loginCredential.username\"\n                       required/>\n            </clr-input-container>\n            <clr-password-container>\n                <label class=\"clr-sr-only\">{{'APP_PASSWORD'|translate}}</label>\n                <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\"\n                       [(ngModel)]=\"loginCredential.password\" required/>\n            </clr-password-container>\n            <clr-select-container>\n                <label class=\"clr-sr-only\">{{'APP_SYSTEM_LANGUAGE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"loginCredential.language\" name=\"provider\" required>\n                    <option value='zh-CN' selected>{{'APP_SYSTEM_LANGUAGE_CN'|translate}}</option>\n                    <option value='en-US'>{{'APP_SYSTEM_LANGUAGE_US'|translate}}</option>\n                </select>\n            </clr-select-container>\n            <div *ngIf=\"isError\" class=\"error active\">\n                {{message}}\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\" [disabled]=\"loginForm.invalid\">登录</button>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport {CoreModule} from '../core/core.module';\nimport {SharedModule} from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class LoginModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginCredential} from './login-credential';\nimport {Observable} from 'rxjs';\nimport {Profile} from '../shared/auth/session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    loginUrl = '/api/auth/login';\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(item: LoginCredential): Observable<Profile> {\n        return this.http.post<Profile>(this.loginUrl, item);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CommonRoutes} from '../../constant/route';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    CanActivateChild,\n    Router,\n    RouterStateSnapshot,\n    UrlTree\n} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {SessionService} from './session.service';\nimport {Profile} from './session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthUserService implements CanActivate, CanActivateChild {\n\n    constructor(private sessionService: SessionService, private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return new Observable<boolean>((observer) => {\n            this.isLogin().subscribe(res => {\n                this.sessionService.cacheProfile(res);\n                observer.next(true);\n                observer.complete();\n            }, error => {\n                observer.next(false);\n                observer.complete();\n                this.router.navigateByUrl(CommonRoutes.LOGIN).then();\n            });\n        });\n    }\n\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.canActivate(childRoute, state);\n    }\n\n    isLogin(): Observable<Profile> {\n        return this.sessionService.getProfile();\n    }\n}\n","import {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SessionInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.url.startsWith('/api')) {\n            let token = '';\n            const profile = localStorage.getItem('profile');\n            if (profile !== null) {\n                token = JSON.parse(profile).token;\n            }\n            const currentLanguage = localStorage.getItem('currentLanguage');\n            const clonedRequest = req.clone({\n                headers: req.headers.set('Authorization', 'bearer ' + token),\n                params: req.params.set('l', currentLanguage)\n            });\n            return next.handle(clonedRequest);\n        }\n        return next.handle(req);\n    }\n}\n","export class SessionUser {\n    userId: string;\n    name: string;\n    token: string;\n    isActive: boolean;\n    email: string;\n    language: string;\n}\n\nexport class Profile {\n    user: SessionUser;\n    token: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Profile} from './session-user';\nimport {Observable} from 'rxjs';\n\nconst queryKey = 'profile';\nconst profileUrl = '/api/auth/profile/';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    cacheProfile(profile: Profile) {\n        localStorage.setItem(queryKey, JSON.stringify(profile));\n    }\n\n    getCacheProfile(): Profile {\n        const profile = localStorage.getItem(queryKey);\n        if (profile !== null) {\n            return JSON.parse(profile);\n        }\n        return null;\n    }\n\n    getProfile(): Observable<Profile> {\n        return this.http.get<Profile>(profileUrl);\n    }\n\n    clear() {\n        localStorage.removeItem(queryKey);\n    }\n}\n","export abstract class BaseModel {\n    createdAt: string;\n    updatedAt: string;\n}\n\n\nexport abstract class BaseRequest {\n    name: string;\n}\n","import {BaseModelService} from './BaseModelService';\nimport {EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModel} from './BaseModel';\n\nexport abstract class BaseModelComponent<T extends BaseModel> implements OnInit {\n\n    items: T[] = [];\n    page = 1;\n    size = 10;\n    total = 0;\n    loading = true;\n    selected: T[] = [];\n    @Output() createEvent = new EventEmitter();\n    @Output() deleteEvent = new EventEmitter<T[]>();\n    @Output() updateEvent = new EventEmitter<T>();\n\n    protected constructor(protected service: BaseModelService<T>) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n    }\n\n    reset() {\n        this.selected = [];\n    }\n\n    onUpdate(item: T) {\n        this.updateEvent.emit(item);\n    }\n\n    refresh() {\n        this.loading = true;\n        this.service.page(this.page, this.size).subscribe(data => {\n            this.items = data.items;\n            this.total = data.total;\n            this.loading = false;\n        });\n    }\n}\n","import {BaseModel, BaseRequest} from './BaseModel';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Page} from './Page';\nimport {Batch} from './Batch';\n\nexport abstract class BaseModelService<T extends BaseModel> {\n\n    baseUrl = '';\n    variable = new Map<string, string>();\n\n    protected constructor(protected http: HttpClient) {\n    }\n\n    list(): Observable<Page<T>> {\n        const url = this.urlHandler();\n        return this.http.get<Page<T>>(url);\n    }\n\n    page(page, size): Observable<Page<T>> {\n        const url = this.urlHandler();\n        const pageUrl = `${url}/?pageNum=${page}&pageSize=${size}`;\n        return this.http.get<Page<T>>(pageUrl);\n    }\n\n    get(name: string): Observable<T> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.get<T>(itemUrl);\n    }\n\n    create(item: BaseRequest): Observable<T> {\n        const url = this.urlHandler();\n        return this.http.post<T>(url, item);\n    }\n\n    update(name: string, item: BaseRequest): Observable<T> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.patch<T>(itemUrl, item);\n    }\n\n    delete(name: string): Observable<any> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.delete<any>(itemUrl);\n    }\n\n    batch(method: string, items: T[]): Observable<any> {\n        const url = this.urlHandler();\n        const batchUrl = `${url}/batch/`;\n        const b = new Batch<T>(method, items);\n        return this.http.post(batchUrl, b);\n    }\n\n    private urlHandler() {\n        let url = this.baseUrl;\n        this.variable.forEach(((k, v) => {\n            if (url.indexOf(`{${k}}`) !== -1) {\n                url = url.replace(`{${k}}`, v);\n            }\n        }));\n        return url;\n    }\n}\n\n","import {BaseModel} from './BaseModel';\n\nexport class Batch<T extends BaseModel> {\n    constructor(operation: string, items: T[]) {\n        this.operation = operation;\n        this.items = items;\n    }\n\n    operation: string;\n    items: T [] = [];\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-k8s-pagination',\n    templateUrl: './k8s-pagination.component.html',\n    styleUrls: ['./k8s-pagination.component.css']\n})\nexport class K8sPaginationComponent implements OnInit {\n\n    page = 1;\n    @Output() pageChange = new EventEmitter();\n    @Input() continueToken = '';\n    @Output() continueTokenChange = new EventEmitter();\n    @Input() previousToken = '';\n    @Input() nextToken = '';\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onNext() {\n        console.log(this.nextToken);\n        this.page++;\n        this.previousToken = this.continueToken;\n        this.continueToken = this.nextToken;\n        this.continueTokenChange.emit(this.continueToken);\n        this.pageChange.emit();\n    }\n\n    onPrevious() {\n        this.page--;\n        this.continueToken = this.previousToken;\n        this.continueTokenChange.emit(this.continueToken);\n        this.pageChange.emit();\n    }\n}\n","<span>\n    <button type=\"button\" class=\"btn btn-icon btn-sm\" aria-label=\"home\" (click)=\"onPrevious()\"\n            [disabled]=\"page ==1\">\n                <clr-icon shape=\"angle left\"></clr-icon>\n    </button>\n    {{this.page}}\n    <button type=\"button\" class=\"btn btn-icon btn-sm\" aria-label=\"home\" (click)=\"onNext()\"\n            [disabled]=\"!this.nextToken\">\n                <clr-icon shape=\"angle right\"></clr-icon>\n    </button>\n</span>","import {Component, OnInit} from '@angular/core';\nimport {Alert, AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from './modal-alert.service';\n\n@Component({\n    selector: 'app-modal-alert',\n    templateUrl: './modal-alert.component.html',\n    styleUrls: ['./modal-alert.component.css']\n})\nexport class ModalAlertComponent implements OnInit {\n\n    msg = '';\n    show = false;\n    currentAlert: Alert;\n    level = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n\n    constructor(private modalAlertService: ModalAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.modalAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'success';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.modalAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"false\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from '../../../layout/common-alert/alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ModalAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","import {ErrorHandler, Injectable} from '@angular/core';\nimport {CommonAlertService} from '../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../layout/common-alert/alert';\nimport {Router} from '@angular/router';\nimport {CommonRoutes} from '../../constant/route';\nimport {AppAlertService} from '../../layout/app-alert/app-alert.service';\n\n@Injectable()\nexport class AppGlobalErrorHandler implements ErrorHandler {\n\n    constructor(private appAlertService: AppAlertService,\n                private commonAlertService: CommonAlertService, private router: Router) {\n    }\n\n    handleError(error) {\n        switch (error.status) {\n            case  401:\n                this.appAlertService.showAlert(error.statusText, AlertLevels.ERROR);\n                this.router.navigateByUrl(CommonRoutes.LOGIN).then(r => console.log('logout success'));\n                break;\n            case 400:\n            case 500:\n                this.commonAlertService.showAlert(error.statusText, AlertLevels.ERROR);\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'zoneStatus'\n})\nexport class ZoneStatusPipe implements PipeTransform {\n\n    transform(value: unknown, ...args: unknown[]): unknown {\n        let result = '';\n        if (value) {\n            switch (value) {\n                case 'READY':\n                    result = '就绪';\n                    break;\n                case 'INITIALIZING':\n                    result = '初始化中';\n                    break;\n                case 'UPLOADIMAGEERROR':\n                    result = '上传镜像失败';\n                    break;\n            }\n        }\n        return result;\n    }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CoreModule} from '../core/core.module';\nimport {ModalAlertComponent} from './common-component/modal-alert/modal-alert.component';\nimport {K8sPaginationComponent} from './common-component/k8s-pagination/k8s-pagination.component';\nimport {ZoneStatusPipe} from './pipe/zone-status.pipe';\n\n\n@NgModule({\n    declarations: [ModalAlertComponent, K8sPaginationComponent, ZoneStatusPipe],\n    exports: [\n        ModalAlertComponent,\n        K8sPaginationComponent,\n        ZoneStatusPipe\n    ],\n    imports: [\n        CommonModule,\n        CoreModule\n    ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}