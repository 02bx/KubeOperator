{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/business/business.module.ts","webpack:///src/app/business/cluster/cluster-condition/cluster-condition.component.ts","webpack:///src/app/business/cluster/cluster-condition/cluster-condition.component.html","webpack:///src/app/business/cluster/cluster-create/cluster-create.component.ts","webpack:///src/app/business/cluster/cluster-create/cluster-create.component.html","webpack:///src/app/business/cluster/cluster-delete/cluster-delete.component.ts","webpack:///src/app/business/cluster/cluster-delete/cluster-delete.component.html","webpack:///src/app/business/cluster/cluster-detail/cluster-detail.component.ts","webpack:///src/app/business/cluster/cluster-detail/cluster-detail.component.html","webpack:///src/app/business/cluster/cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component.ts","webpack:///src/app/business/cluster/cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component.html","webpack:///src/app/business/cluster/cluster-detail/dashboard/dashboard.component.ts","webpack:///src/app/business/cluster/cluster-detail/dashboard/dashboard.component.html","webpack:///src/app/business/cluster/cluster-detail/logging/logging-query/logging-query.component.ts","webpack:///src/app/business/cluster/cluster-detail/logging/logging-query/logging-query.component.html","webpack:///src/app/business/cluster/cluster-detail/logging/logging.component.ts","webpack:///src/app/business/cluster/cluster-detail/logging/logging.component.html","webpack:///src/app/business/cluster/cluster-detail/logging/logging.service.ts","webpack:///src/app/business/cluster/cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component.ts","webpack:///src/app/business/cluster/cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component.html","webpack:///src/app/business/cluster/cluster-detail/monitor/monitor.component.ts","webpack:///src/app/business/cluster/cluster-detail/monitor/monitor.component.html","webpack:///src/app/business/cluster/cluster-detail/namespace/namespace-list/namespace-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/namespace/namespace-list/namespace-list.component.html","webpack:///src/app/business/cluster/cluster-detail/namespace/namespace.component.ts","webpack:///src/app/business/cluster/cluster-detail/namespace/namespace.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node-create/node-create.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node-create/node-create.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node-delete/node-delete.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node-delete/node-delete.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node-detail/node-detail.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node-detail/node-detail.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node-list/node-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node-list/node-list.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node-status/node-status.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node-status/node-status.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node.component.ts","webpack:///src/app/business/cluster/cluster-detail/node/node.component.html","webpack:///src/app/business/cluster/cluster-detail/node/node.service.ts","webpack:///src/app/business/cluster/cluster-detail/node/node.ts","webpack:///src/app/business/cluster/cluster-detail/not-ready/not-ready.component.ts","webpack:///src/app/business/cluster/cluster-detail/not-ready/not-ready.component.html","webpack:///src/app/business/cluster/cluster-detail/overview/overview.component.ts","webpack:///src/app/business/cluster/cluster-detail/overview/overview.component.html","webpack:///src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.component.ts","webpack:///src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.component.html","webpack:///src/app/business/cluster/cluster-detail/overview/webkubectl/webkubectl.service.ts","webpack:///src/app/business/cluster/cluster-detail/repository/chartmuseum/chart-list/chart-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/repository/chartmuseum/chart-list/chart-list.component.html","webpack:///src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component.ts","webpack:///src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component.html","webpack:///src/app/business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.service.ts","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry-list/registry-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry-list/registry-list.component.html","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry.component.ts","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry.component.html","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry.service.ts","webpack:///src/app/business/cluster/cluster-detail/repository/registry/registry.ts","webpack:///src/app/business/cluster/cluster-detail/repository/repository.component.ts","webpack:///src/app/business/cluster/cluster-detail/repository/repository.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-class/storage-class.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component.html","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.service.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage.component.ts","webpack:///src/app/business/cluster/cluster-detail/storage/storage.component.html","webpack:///src/app/business/cluster/cluster-detail/tools/tools-enable/tools-enable.component.ts","webpack:///src/app/business/cluster/cluster-detail/tools/tools-enable/tools-enable.component.html","webpack:///src/app/business/cluster/cluster-detail/tools/tools-failed/tools-failed.component.ts","webpack:///src/app/business/cluster/cluster-detail/tools/tools-failed/tools-failed.component.html","webpack:///src/app/business/cluster/cluster-detail/tools/tools-list/tools-list.component.ts","webpack:///src/app/business/cluster/cluster-detail/tools/tools-list/tools-list.component.html","webpack:///src/app/business/cluster/cluster-detail/tools/tools.component.ts","webpack:///src/app/business/cluster/cluster-detail/tools/tools.component.html","webpack:///src/app/business/cluster/cluster-detail/tools/tools.service.ts","webpack:///src/app/business/cluster/cluster-detail/tools/tools.ts","webpack:///src/app/business/cluster/cluster-import/cluster-import.component.ts","webpack:///src/app/business/cluster/cluster-import/cluster-import.component.html","webpack:///src/app/business/cluster/cluster-list/cluster-list.component.ts","webpack:///src/app/business/cluster/cluster-list/cluster-list.component.html","webpack:///src/app/business/cluster/cluster-routing-resolver.service.ts","webpack:///src/app/business/cluster/cluster.component.ts","webpack:///src/app/business/cluster/cluster.component.html","webpack:///src/app/business/cluster/cluster.module.ts","webpack:///src/app/business/cluster/cluster.service.ts","webpack:///src/app/business/cluster/cluster.ts","webpack:///src/app/business/cluster/kubernetes.service.ts","webpack:///src/app/business/cluster/logging.service.ts","webpack:///src/app/business/deploy-plan/deploy-plan.component.ts","webpack:///src/app/business/deploy-plan/deploy-plan.component.html","webpack:///src/app/business/deploy-plan/deploy-plan.module.ts","webpack:///src/app/business/deploy-plan/plan/plan-create/plan-create.component.ts","webpack:///src/app/business/deploy-plan/plan/plan-create/plan-create.component.html","webpack:///src/app/business/deploy-plan/plan/plan-delete/plan-delete.component.ts","webpack:///src/app/business/deploy-plan/plan/plan-delete/plan-delete.component.html","webpack:///src/app/business/deploy-plan/plan/plan-detail/plan-detail.component.ts","webpack:///src/app/business/deploy-plan/plan/plan-detail/plan-detail.component.html","webpack:///src/app/business/deploy-plan/plan/plan-list/plan-list.component.ts","webpack:///src/app/business/deploy-plan/plan/plan-list/plan-list.component.html","webpack:///src/app/business/deploy-plan/plan/plan.component.ts","webpack:///src/app/business/deploy-plan/plan/plan.component.html","webpack:///src/app/business/deploy-plan/plan/plan.module.ts","webpack:///src/app/business/deploy-plan/plan/plan.service.ts","webpack:///src/app/business/deploy-plan/plan/plan.ts","webpack:///src/app/business/deploy-plan/region/cloud-provider.service.ts","webpack:///src/app/business/deploy-plan/region/region-create/region-create.component.ts","webpack:///src/app/business/deploy-plan/region/region-create/region-create.component.html","webpack:///src/app/business/deploy-plan/region/region-delete/region-delete.component.ts","webpack:///src/app/business/deploy-plan/region/region-delete/region-delete.component.html","webpack:///src/app/business/deploy-plan/region/region-detail/region-detail.component.ts","webpack:///src/app/business/deploy-plan/region/region-detail/region-detail.component.html","webpack:///src/app/business/deploy-plan/region/region-list/region-list.component.ts","webpack:///src/app/business/deploy-plan/region/region-list/region-list.component.html","webpack:///src/app/business/deploy-plan/region/region.component.ts","webpack:///src/app/business/deploy-plan/region/region.component.html","webpack:///src/app/business/deploy-plan/region/region.module.ts","webpack:///src/app/business/deploy-plan/region/region.service.ts","webpack:///src/app/business/deploy-plan/region/region.ts","webpack:///src/app/business/deploy-plan/zone/zone-create/zone-create.component.ts","webpack:///src/app/business/deploy-plan/zone/zone-create/zone-create.component.html","webpack:///src/app/business/deploy-plan/zone/zone-delete/zone-delete.component.ts","webpack:///src/app/business/deploy-plan/zone/zone-delete/zone-delete.component.html","webpack:///src/app/business/deploy-plan/zone/zone-detail/zone-detail.component.ts","webpack:///src/app/business/deploy-plan/zone/zone-detail/zone-detail.component.html","webpack:///src/app/business/deploy-plan/zone/zone-list/zone-list.component.ts","webpack:///src/app/business/deploy-plan/zone/zone-list/zone-list.component.html","webpack:///src/app/business/deploy-plan/zone/zone-update/zone-update.component.ts","webpack:///src/app/business/deploy-plan/zone/zone-update/zone-update.component.html","webpack:///src/app/business/deploy-plan/zone/zone.component.ts","webpack:///src/app/business/deploy-plan/zone/zone.component.html","webpack:///src/app/business/deploy-plan/zone/zone.module.ts","webpack:///src/app/business/deploy-plan/zone/zone.service.ts","webpack:///src/app/business/deploy-plan/zone/zone.ts","webpack:///src/app/business/host/host-create/host-create.component.ts","webpack:///src/app/business/host/host-create/host-create.component.html","webpack:///src/app/business/host/host-delete/host-delete.component.ts","webpack:///src/app/business/host/host-delete/host-delete.component.html","webpack:///src/app/business/host/host-detail/host-detail.component.ts","webpack:///src/app/business/host/host-detail/host-detail.component.html","webpack:///src/app/business/host/host-list/host-list.component.ts","webpack:///src/app/business/host/host-list/host-list.component.html","webpack:///src/app/business/host/host.component.ts","webpack:///src/app/business/host/host.component.html","webpack:///src/app/business/host/host.module.ts","webpack:///src/app/business/host/host.service.ts","webpack:///src/app/business/host/host.ts","webpack:///src/app/business/setting/credential/credential-create/credential-create.component.ts","webpack:///src/app/business/setting/credential/credential-create/credential-create.component.html","webpack:///src/app/business/setting/credential/credential-delete/credential-delete.component.ts","webpack:///src/app/business/setting/credential/credential-delete/credential-delete.component.html","webpack:///src/app/business/setting/credential/credential-edit/credential-edit.component.ts","webpack:///src/app/business/setting/credential/credential-edit/credential-edit.component.html","webpack:///src/app/business/setting/credential/credential-list/credential-list.component.ts","webpack:///src/app/business/setting/credential/credential-list/credential-list.component.html","webpack:///src/app/business/setting/credential/credential.component.ts","webpack:///src/app/business/setting/credential/credential.component.html","webpack:///src/app/business/setting/credential/credential.module.ts","webpack:///src/app/business/setting/credential/credential.service.ts","webpack:///src/app/business/setting/credential/credential.ts","webpack:///src/app/business/setting/setting.component.ts","webpack:///src/app/business/setting/setting.component.html","webpack:///src/app/business/setting/setting.module.ts","webpack:///src/app/business/setting/system.service.ts","webpack:///src/app/business/setting/system/system.component.ts","webpack:///src/app/business/setting/system/system.component.html","webpack:///src/app/business/setting/system/system.ts","webpack:///src/app/business/user/user-create/user-create.component.ts","webpack:///src/app/business/user/user-create/user-create.component.html","webpack:///src/app/business/user/user-delete/user-delete.component.ts","webpack:///src/app/business/user/user-delete/user-delete.component.html","webpack:///src/app/business/user/user-list/user-list.component.ts","webpack:///src/app/business/user/user-list/user-list.component.html","webpack:///src/app/business/user/user-update/user-update.component.ts","webpack:///src/app/business/user/user-update/user-update.component.html","webpack:///src/app/business/user/user.component.ts","webpack:///src/app/business/user/user.component.html","webpack:///src/app/business/user/user.service.ts","webpack:///src/app/business/user/user.ts","webpack:///src/app/constant/pattern.ts","webpack:///src/app/constant/route.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/layout/app-alert/alert.ts","webpack:///src/app/layout/app-alert/app-alert.component.ts","webpack:///src/app/layout/app-alert/app-alert.component.html","webpack:///src/app/layout/app-alert/app-alert.service.ts","webpack:///src/app/layout/common-alert/alert.ts","webpack:///src/app/layout/common-alert/common-alert.component.ts","webpack:///src/app/layout/common-alert/common-alert.component.html","webpack:///src/app/layout/common-alert/common-alert.service.ts","webpack:///src/app/layout/footer/footer.component.ts","webpack:///src/app/layout/footer/footer.component.html","webpack:///src/app/layout/header/header.component.ts","webpack:///src/app/layout/header/header.component.html","webpack:///src/app/layout/header/password/password.component.ts","webpack:///src/app/layout/header/password/password.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/layout/layout.module.ts","webpack:///src/app/layout/navigation/navigation.component.ts","webpack:///src/app/layout/navigation/navigation.component.html","webpack:///src/app/login/login-credential.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.service.ts","webpack:///src/app/shared/auth/auth-user.service.ts","webpack:///src/app/shared/auth/session-interceptor.ts","webpack:///src/app/shared/auth/session-user.ts","webpack:///src/app/shared/auth/session.service.ts","webpack:///src/app/shared/class/BaseModel.ts","webpack:///src/app/shared/class/BaseModelComponent.ts","webpack:///src/app/shared/class/BaseModelService.ts","webpack:///src/app/shared/class/Batch.ts","webpack:///src/app/shared/common-component/k8s-pagination/k8s-pagination.component.ts","webpack:///src/app/shared/common-component/k8s-pagination/k8s-pagination.component.html","webpack:///src/app/shared/common-component/modal-alert/modal-alert.component.ts","webpack:///src/app/shared/common-component/modal-alert/modal-alert.component.html","webpack:///src/app/shared/common-component/modal-alert/modal-alert.service.ts","webpack:///src/app/shared/handler/app-global-error-handler.ts","webpack:///src/app/shared/pipe/zone-status.pipe.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","canActivateChild","children","redirectTo","pathMatch","cluster","AppRoutingModule","forRoot","imports","AppComponent","translate","title","currentLanguage","localStorage","getItem","getBrowserCultureLang","setDefaultLang","use","setItem","selector","templateUrl","styleUrls","HttpLoaderFactory","httpClient","AppModule","provide","useClass","multi","loader","useFactory","deps","radius","outerStrokeWidth","innerStrokeWidth","animationDuration","declarations","providers","bootstrap","BusinessModule","ClusterConditionComponent","service","opened","item","loading","clearInterval","timer","clusterName","getStatus","polling","status","subscribe","data","phase","conditions","init","setInterval","onCancel","ClusterCreateComponent","hostService","planService","options","multiple","hosts","masters","workers","plans","created","wizard","reset","seniorForm","basicForm","architectures","provider","networkType","runtimeType","dockerStorageDir","containerdStorageDir","flannelBackend","calicoIpv4poolIpip","kubePodSubnet","kubeServiceSubnet","kubeMaxPod","certsExpired","kubernetesAudit","kubeProxyMode","ingressControllerType","loadHosts","loadPlan","setDefaultValue","role","delw","forEach","m","w","push","cw","concat","d","splice","indexOf","delm","cm","list","items","h","name","text","disabled","nodes","node","hostName","create","emit","onSubmit","ClusterDeleteComponent","commonAlert","deleted","batch","error","showAlert","msg","ERROR","ClusterDetailComponent","router","route","toolsService","tools","ready","currentCluster","toolName","tool","navigate","backToCluster","DashboardDashboardComponent","sanitizer","refresh","url","bypassSecurityTrustResourceUrl","onFrameLoad","DashboardComponent","toolService","parent","LoggingQueryComponent","kubernetesService","date","Date","namespaces","pods","listNamespace","initTerminal","term","cursorBlink","disableStdin","cursorStyle","cols","rows","letterSpacing","fontSize","open","terminal","nativeElement","writeln","search","namespace","metadata","pod","container","clear","console","log","hits","hit","_source","message","listNamespaces","listPod","length","spec","containers","onPodChange","LoggingComponent","LoggingService","http","baseUrl","index","query","bool","must","match","sort","post","replace","providedIn","MonitorDashboardComponent","clusterService","vars","frame","contentWindow","Mousetrap","unbindGlobal","MonitorComponent","NamespaceListComponent","selected","page","NamespaceComponent","NodeCreateComponent","nodeService","isSubmitGoing","filter","clusterId","increase","fullNodes","operation","NodeDeleteComponent","map","NodeDetailComponent","NodeListComponent","alertService","openDetail","createEvent","statusEvent","deleteEvent","result","info","addresses","addr","type","address","nodeInfo","kubeletVersion","memory","endsWith","str","substring","parseFloat","toFixed","formatRAM","capacity","roles","key","labels","isNodeReady","n","condition","flag","needPolling","onCreate","onDelete","NodeStatusComponent","NodeComponent","detail","openCreate","openShowCreate","openDelete","NodeService","batchUrl","get","Node","NodeBatch","NotReadyComponent","OverviewComponent","loggingService","deployments","containerNumber","cpuTotal","cpuUsage","cpuUsagePercent","memTotal","memUsage","memUsagePercent","podLimit","podUsagePercent","listNameSpaces","listNodes","listDeployment","Number","cpu","mem","listNodesUsage","listPods","metrics","me","c","usage","window","WebkubectlComponent","getToken","token","WebkubectlService","ChartListComponent","chartService","ChartmuseumComponent","ChartmuseumService","RegistryListComponent","registryService","repositories","repository","listTags","tags","RegistryComponent","RegistryService","listUrl","tagsUrl","tagName","Registry","RegistryList","RepositoryComponent","PersistentVolumeClaimListComponent","nextToken","previousToken","continueToken","listPersistentVolumeClaims","continueTokenKey","PersistentVolumeClaimComponent","PersistentVolumeCreateHostPathComponent","newHostPathPv","accessMode","pvForm","resetForm","accessModes","createPersistentVolume","apiVersion","kind","hostPath","PersistentVolumeCreateNfsComponent","newNfsPv","nfs","server","PersistentVolumeCreateComponent","provisioner","PersistentVolumeListComponent","listPersistentVolumes","PersistentVolumeComponent","openSelected","StorageClassCreateComponent","provisionerService","provisioners","newV1StorageClass","createStorageClass","StorageClassListComponent","listStorageClass","StorageClassComponent","StorageProvisionerCreateNfsComponent","storageProvisionerService","nfsForm","StorageProvisionerCreateComponent","StorageProvisionerDeleteComponent","StorageProvisionerListComponent","StorageProvisionerComponent","StorageProvisionerService","StorageProvisioner","CreateStorageProvisionerRequest","StorageComponent","ToolsEnableComponent","storageClazz","enabled","enable","itemForm","setDefaultVars","ToolsFailedComponent","ToolsListComponent","enableEvent","failedEvent","ToolsComponent","failed","openEnable","openFailed","ToolsService","ClusterTool","ClusterImportComponent","imported","ClusterListComponent","statusDetailEvent","importEvent","size","ClusterRoutingResolverService","state","params","pipe","ClusterComponent","openStatusDetail","openImport","ClusterModule","ClusterService","Cluster","Spec","ClusterStatus","Condition","CreateNodeRequest","ClusterCreateRequest","CLusterImportRequest","InitClusterResponse","KubernetesService","client","proxyUrl","limit","namespaceUrl","serviceUrl","namespaceServiceUrl","persistentVolumesUrl","storageClassUrl","persistentVolumeClaimsUrl","namespacePersistentVolumeClaimsUrl","deploymentUrl","namespaceDeploymentUrl","daemonSetUrl","statefulSetUrl","namespaceStatefulSet","namespaceDaemonSetUrl","cornJobUrl","namespaceCornJobUrl","jobUrl","namespaceJobUrl","ingressUrl","namespaceIngressUrl","configMapUrl","namespaceConfigMapUrl","secretUrl","namespaceSecretUrl","podUrl","namespacePodUrl","nodesUrl","nodeStatsSummaryUrl","all","DeployPlanComponent","DeployPlanModule","PlanCreateComponent","modalAlertService","regionService","translateService","commonAlertService","zoneService","regions","zones","vmConfigs","res","planForm","deployTemplate","zone","listZones","listVmConfigs","region","regionId","regionName","listByRegionId","onBasicFormCommit","onRegionChange","onDeployChange","PlanDeleteComponent","instant","SUCCESS","PlanDetailComponent","cancel","PlanListComponent","detailEvent","PlanComponent","PlanModule","PlanService","itemUrl","Plan","planVars","PlanCreateRequest","PlanVmConfig","VmConfig","CloudProviderService","RegionCreateComponent","cloudProviderService","cloudProviders","isParamsCheckGoing","cloudRegions","resetWizard","isParamsValid","undefined","paramsForm","regionForm","dtFrom","forceFinish","regionVars","listDatacenter","valueChanges","doFinish","RegionDeleteComponent","RegionDetailComponent","RegionListComponent","RegionComponent","RegionModule","RegionService","Region","RegionCreateRequest","ZoneCreateComponent","credentialService","cloudZoneRequest","cloudZones","cloudTemplates","templateLoading","networkError","networkValid","subnetList","credentials","listRegions","listCredentials","cloudVars","JSON","parse","datacenter","regionID","cloudZone","networkList","network","listTemplates","listClusters","cidr","split","netmask","gateway","changeRegion","checkNetwork","ZoneDeleteComponent","ZoneDetailComponent","ZoneListComponent","ZoneUpdateComponent","updated","ipStart","ipEnd","start","toByteArray","end","i","update","ZoneComponent","openUpdate","ZoneModule","ZoneService","Zone","ZoneCreateRequest","ZoneUpdateRequest","CloudZoneRequest","CloudZone","networks","resourcePools","datastores","storages","securityGroups","floatingNetworkList","ipTypes","imageList","CloudTemplate","Storage","Network","Subnet","Image","HostCreateComponent","hostForm","HostDeleteComponent","HostDetailComponent","sync","onSync","HostListComponent","HostComponent","HostModule","HostService","Host","Volume","HostCreateRequest","CredentialCreateComponent","credentialForm","CredentialDeleteComponent","CredentialEditComponent","edit","CredentialListComponent","onUpdate","CredentialComponent","openEdit","CredentialModule","CredentialService","Credential","CredentialCreateRequest","SettingComponent","SettingModule","SystemService","SystemComponent","systemService","listSystemSettings","System","SystemCreateRequest","UserCreateComponent","userService","passwordPattern","userForm","UserDeleteComponent","UserListComponent","UserUpdateComponent","UserComponent","UserService","User","UserCreateRequest","ChangePasswordRequest","PasswordPattern","CommonRoutes","LOGIN","KO_ROOT","CoreModule","AlertLevels","Alert","level","AppAlertComponent","appAlertService","show","leftSeconds","defaultLeftTime","defaultInterval","showTip","$alertQueue","alert","currentAlert","AppAlertService","alertQueue","asObservable","next","CommonAlertComponent","CommonAlertService","FooterComponent","HeaderComponent","sessionService","user","getProfile","profile","getCacheProfile","password","navigateByUrl","changePassword","logOut","PasswordComponent","submitGoing","changePasswordRequest","passForm","original","confirmPassword","checkPassword","LayoutComponent","LayoutModule","NavigationComponent","LoginCredential","LoginComponent","loginService","loginCredential","isError","language","login","cacheProfile","r","handleError","LoginModule","LoginService","loginUrl","AuthUserService","observer","isLogin","complete","childRoute","SessionInterceptor","startsWith","clonedRequest","clone","headers","set","handle","SessionUser","Profile","queryKey","profileUrl","SessionService","stringify","removeItem","BaseModel","BaseRequest","BaseModelComponent","total","updateEvent","BaseModelService","variable","Map","urlHandler","pageUrl","patch","method","b","k","v","Batch","K8sPaginationComponent","pageChange","continueTokenChange","onPrevious","onNext","ModalAlertComponent","ModalAlertService","AppGlobalErrorHandler","statusText","ZoneStatusPipe","value","SharedModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {LayoutComponent} from './layout/layout.component';\nimport {ClusterComponent} from './business/cluster/cluster.component';\nimport {ClusterDetailComponent} from './business/cluster/cluster-detail/cluster-detail.component';\nimport {ClusterRoutingResolverService} from './business/cluster/cluster-routing-resolver.service';\nimport {OverviewComponent} from './business/cluster/cluster-detail/overview/overview.component';\nimport {SettingComponent} from './business/setting/setting.component';\nimport {CredentialComponent} from './business/setting/credential/credential.component';\nimport {HostComponent} from './business/host/host.component';\nimport {NodeComponent} from './business/cluster/cluster-detail/node/node.component';\nimport {NamespaceComponent} from './business/cluster/cluster-detail/namespace/namespace.component';\nimport {StorageComponent} from './business/cluster/cluster-detail/storage/storage.component';\nimport {PersistentVolumeComponent} from './business/cluster/cluster-detail/storage/persistent-volume/persistent-volume.component';\nimport {PersistentVolumeClaimComponent} from './business/cluster/cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component';\nimport {UserComponent} from './business/user/user.component';\nimport {AuthUserService} from './shared/auth/auth-user.service';\nimport {LoggingComponent} from './business/cluster/cluster-detail/logging/logging.component';\nimport {MonitorComponent} from './business/cluster/cluster-detail/monitor/monitor.component';\nimport {StorageClassComponent} from './business/cluster/cluster-detail/storage/storage-class/storage-class.component';\nimport {RegionComponent} from './business/deploy-plan/region/region.component';\nimport {DeployPlanComponent} from './business/deploy-plan/deploy-plan.component';\nimport {ZoneComponent} from './business/deploy-plan/zone/zone.component';\nimport {PlanComponent} from './business/deploy-plan/plan/plan.component';\nimport {StorageProvisionerComponent} from './business/cluster/cluster-detail/storage/storage-provisioner/storage-provisioner.component';\nimport {RepositoryComponent} from './business/cluster/cluster-detail/repository/repository.component';\nimport {ChartmuseumComponent} from './business/cluster/cluster-detail/repository/chartmuseum/chartmuseum.component';\nimport {RegistryComponent} from './business/cluster/cluster-detail/repository/registry/registry.component';\nimport {ToolsComponent} from './business/cluster/cluster-detail/tools/tools.component';\nimport {DashboardComponent} from './business/cluster/cluster-detail/dashboard/dashboard.component';\nimport {SystemComponent} from './business/setting/system/system.component';\n\nconst routes: Routes = [\n    {path: 'login', component: LoginComponent},\n    {\n        path: '',\n        component: LayoutComponent,\n        canActivate: [AuthUserService],\n        canActivateChild: [AuthUserService],\n        children: [\n            {path: '', redirectTo: 'clusters', pathMatch: 'full'},\n            {\n                path: 'clusters',\n                component: ClusterComponent,\n            },\n            {\n                path: 'clusters/:name',\n                component: ClusterDetailComponent,\n                resolve: {cluster: ClusterRoutingResolverService},\n                children: [\n                    {path: '', redirectTo: 'overview', pathMatch: 'full'},\n                    {path: 'overview', component: OverviewComponent},\n                    {path: 'nodes', component: NodeComponent},\n                    {path: 'namespaces', component: NamespaceComponent},\n                    {\n                        path: 'storages',\n                        component: StorageComponent,\n                        children: [\n                            {path: '', redirectTo: 'pv', pathMatch: 'full'},\n                            {path: 'pv', component: PersistentVolumeComponent},\n                            {path: 'pvc', component: PersistentVolumeClaimComponent},\n                            {path: 'sc', component: StorageClassComponent},\n                            {path: 'provisioner', component: StorageProvisionerComponent},\n                        ],\n                    },\n                    {path: 'logging', component: LoggingComponent},\n                    {path: 'monitor', component: MonitorComponent},\n                    {\n                        path: 'repository',\n                        component: RepositoryComponent,\n                        children: [\n                            {path: '', redirectTo: 'chartmuseum', pathMatch: 'full'},\n                            {path: 'chartmuseum', component: ChartmuseumComponent},\n                            {path: 'registry', component: RegistryComponent}\n                        ]\n                    },\n                    {path: 'tool', component: ToolsComponent},\n                    {path: 'dashboard', component: DashboardComponent},\n                ],\n            },\n            {\n                path: 'hosts',\n                component: HostComponent,\n            },\n            {\n                path: 'setting',\n                component: SettingComponent,\n                children: [\n                    {path: '', redirectTo: 'system', pathMatch: 'full'},\n                    {path: 'system', component: SystemComponent},\n                    {path: 'credential', component: CredentialComponent},\n                ]\n            },\n            {\n                path: 'deploy',\n                component: DeployPlanComponent,\n                children: [\n                    {path: '', redirectTo: 'region', pathMatch: 'full'},\n                    {path: 'region', component: RegionComponent},\n                    {path: 'zone', component: ZoneComponent},\n                    {path: 'plan', component: PlanComponent}\n                ]\n            },\n            {\n                path: 'users',\n                component: UserComponent,\n            }\n        ]\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n    title = 'app';\n\n    constructor(public translate: TranslateService) {\n    }\n\n     ngOnInit() {\n        const currentLanguage =  localStorage.getItem('currentLanguage') || this.translate.getBrowserCultureLang();\n        this.translate.setDefaultLang('zh-CN');\n        this.translate.use(currentLanguage);\n        localStorage.setItem('currentLanguage', currentLanguage);\n    }\n\n}\n","<router-outlet></router-outlet>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {ErrorHandler, NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {LoginModule} from './login/login.module';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LayoutModule} from './layout/layout.module';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {BusinessModule} from './business/business.module';\nimport {ClrCommonFormsModule, ClrDatagridModule, ClrIconModule, ClrModalModule} from '@clr/angular';\nimport {CoreModule} from './core/core.module';\nimport {SessionInterceptor} from './shared/auth/session-interceptor';\nimport {AppGlobalErrorHandler} from './shared/handler/app-global-error-handler';\nimport {NgCircleProgressModule} from 'ng-circle-progress';\n\n\nexport function HttpLoaderFactory(httpClient: HttpClient) {\n    return new TranslateHttpLoader(httpClient);\n}\n\n@NgModule({\n    declarations: [\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        AppRoutingModule,\n        LayoutModule,\n        BusinessModule,\n        LoginModule,\n        HttpClientModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        }),\n        ClrDatagridModule,\n        ClrIconModule,\n        ClrModalModule,\n        ClrCommonFormsModule,\n        CoreModule,\n        NgCircleProgressModule.forRoot({\n            radius: 100,\n            outerStrokeWidth: 16,\n            innerStrokeWidth: 8,\n            animationDuration: 300,\n        })\n    ],\n    providers: [\n        {\n            provide: HTTP_INTERCEPTORS,\n            useClass: SessionInterceptor,\n            multi: true,\n        },\n        {provide: ErrorHandler, useClass: AppGlobalErrorHandler}\n    ],\n    bootstrap: [AppComponent],\n\n})\nexport class AppModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CoreModule} from '../core/core.module';\nimport {ClusterModule} from './cluster/cluster.module';\nimport {SettingModule} from './setting/setting.module';\nimport {HostModule} from './host/host.module';\nimport { UserComponent } from './user/user.component';\nimport { UserCreateComponent } from './user/user-create/user-create.component';\nimport { UserListComponent } from './user/user-list/user-list.component';\nimport { UserUpdateComponent } from './user/user-update/user-update.component';\nimport { UserDeleteComponent } from './user/user-delete/user-delete.component';\nimport {SharedModule} from '../shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {DeployPlanModule} from './deploy-plan/deploy-plan.module';\n\n\n@NgModule({\n    declarations: [UserComponent, UserCreateComponent, UserListComponent, UserUpdateComponent, UserDeleteComponent],\n    imports: [\n        CoreModule,\n        ClusterModule,\n        SettingModule,\n        HostModule,\n        SharedModule,\n        RouterModule,\n        DeployPlanModule,\n    ],\n    exports: [\n        ClusterModule,\n        SettingModule,\n        HostModule,\n        DeployPlanModule,\n    ]\n})\nexport class BusinessModule {\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {ClusterStatus, Condition} from '../cluster';\n\n@Component({\n    selector: 'app-cluster-condition',\n    templateUrl: './cluster-condition.component.html',\n    styleUrls: ['./cluster-condition.component.css']\n})\nexport class ClusterConditionComponent implements OnInit {\n\n    opened = false;\n    clusterName: string;\n    item: ClusterStatus = new ClusterStatus();\n    loading = false;\n    timer;\n\n    constructor(private service: ClusterService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onCancel() {\n        clearInterval(this.timer);\n        this.opened = false;\n    }\n\n    open(clusterName: string) {\n        this.clusterName = clusterName;\n        this.getStatus();\n        this.polling();\n    }\n\n    getStatus() {\n        this.opened = true;\n        this.service.status(this.clusterName).subscribe(data => {\n            this.item = data;\n            this.loading = false;\n        });\n    }\n\n    getCurrentCondition(): Condition {\n        if (this.item.phase !== 'Running' && this.item.phase !== 'Failed') {\n            for (const item of this.item.conditions) {\n                if (item.status === 'Unknown') {\n                    return item;\n                }\n            }\n        }\n        return null;\n    }\n\n    onInit() {\n        this.service.init(this.clusterName).subscribe(data => {\n            this.polling();\n        });\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            this.service.status(this.clusterName).subscribe(data => {\n                if (this.item.phase !== data.phase) {\n                    this.item.phase = data.phase;\n                }\n                if (this.item.phase !== 'Running') {\n                    // data.status.conditions.forEach((n) => {\n                    //     this.item.conditions.forEach(condition => {\n                    //         if (condition.name === n.name) {\n                    //             if (condition.status !== n.status) {\n                    //                 condition.status = n.status;\n                    //             }\n                    //             if (condition.message !== n.message) {\n                    //                 condition.message = n.message;\n                    //             }\n                    //         }\n                    //     });\n                    // });\n                    this.item.conditions = data.conditions;\n                } else {\n                    clearInterval(this.timer);\n                }\n            });\n        }, 3000);\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"xl\">\n    <h3 class=\"modal-title\">{{\"APP_STATUS_DETAIL\"| translate}}</h3>\n    <div class=\"modal-body\">\n\n        <ul class=\"clr-timeline clr-timeline-vertical\">\n            <li class=\"clr-timeline-step\" *ngFor=\"let condition of item.conditions\" [ngSwitch]=\"condition.status\">\n                <clr-icon shape=\"success-standard\" aria-label=\"Completed\" *ngSwitchCase=\"'True'\"></clr-icon>\n                <clr-icon shape=\"error-standard\" aria-label=\"Error\" *ngSwitchCase=\"'False'\"></clr-icon>\n                <clr-spinner clrMedium aria-label=\"In progress\"\n                             *ngIf=\"getCurrentCondition()&&condition.name === getCurrentCondition().name\">\n                    Fetching data\n                </clr-spinner>\n                <span *ngIf=\"getCurrentCondition()&&condition.name !== getCurrentCondition().name\">\n                    <clr-icon shape=\"circle\" aria-label=\"Not started\" *ngSwitchCase=\"'Unknown'\"></clr-icon>\n                </span>\n                <div class=\"clr-timeline-step-body\">\n                    <span class=\"clr-timeline-step-title\">{{condition.name |translate}}</span>\n                    {{condition.message}}\n                </div>\n            </li>\n        </ul>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button *ngIf=\"item.phase ==='Failed'\" class=\"btn btn-primary\"\n                (click)=\"onInit()\">{{\"APP_RETRY\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {ClusterCreateRequest, CreateNodeRequest} from '../cluster';\nimport {NgForm} from '@angular/forms';\nimport {ClusterService} from '../cluster.service';\nimport {ClrWizard} from '@clr/angular';\nimport {HostService} from '../../host/host.service';\nimport {PlanService} from \"../../deploy-plan/plan/plan.service\";\nimport {Plan} from \"../../deploy-plan/plan/plan\";\n\n\n@Component({\n    selector: 'app-cluster-create',\n    templateUrl: './cluster-create.component.html',\n    styleUrls: ['./cluster-create.component.css']\n})\nexport class ClusterCreateComponent implements OnInit {\n\n    opened = false;\n    item: ClusterCreateRequest = new ClusterCreateRequest();\n    options: any = {\n        multiple: true,\n    };\n    hosts: any[] = [];\n    masters: any[] = [];\n    workers: any[] = [];\n    plans: Plan[] = [];\n\n    @ViewChild('wizard', {static: true}) wizard: ClrWizard;\n    @ViewChild('basicForm') basicForm: NgForm;\n    @ViewChild('seniorForm') seniorForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private service: ClusterService, private hostService: HostService, private planService: PlanService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    reset() {\n        this.wizard.reset();\n        this.seniorForm.reset();\n        this.basicForm.reset();\n        this.hosts = [];\n        this.masters = [];\n        this.workers = [];\n    }\n\n    setDefaultValue() {\n        this.item.architectures = 'amd64';\n        this.item.provider = 'bareMetal';\n        this.item.networkType = 'flannel';\n        this.item.runtimeType = 'docker';\n        this.item.dockerStorageDir = '/var/lib/docker';\n        this.item.containerdStorageDir = '/var/lib/containerd';\n        this.item.flannelBackend = 'vxlan';\n        this.item.calicoIpv4poolIpip = 'Always';\n        this.item.kubePodSubnet = '10.244.0.0/18';\n        this.item.kubeServiceSubnet = '10.244.64.0/18';\n        this.item.kubeMaxPod = 110;\n        this.item.certsExpired = 36500;\n        this.item.kubernetesAudit = false;\n        this.item.kubeProxyMode = 'iptables';\n        this.item.ingressControllerType = 'nginx';\n    }\n\n    open() {\n        this.reset();\n        this.loadHosts();\n        this.loadPlan();\n        this.opened = true;\n        this.setDefaultValue();\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.reset();\n    }\n\n\n    toggle(role: string) {\n        switch (role) {\n            case 'worker':\n                const delw = [];\n                this.masters.forEach(m => {\n                    this.workers.forEach(w => {\n                        if (m.id === w.id) {\n                            delw.push(w);\n                        }\n                    });\n                });\n                const cw = [].concat(this.workers);\n                delw.forEach(d => {\n                    cw.splice(cw.indexOf(d), 1);\n                    this.workers = cw;\n                });\n                break;\n            case 'master':\n                const delm = [];\n                this.workers.forEach(m => {\n                    this.masters.forEach(w => {\n                        if (m.id === w.id) {\n                            delm.push(w);\n                        }\n                    });\n                });\n                const cm = [].concat(this.masters);\n                delm.forEach(d => {\n                    cm.splice(cm.indexOf(d), 1);\n                    this.masters = cm;\n                });\n                break;\n        }\n    }\n\n    loadHosts() {\n        this.hostService.list().subscribe(data => {\n            const list = [];\n            data.items.forEach(h => {\n                list.push({id: h.name, text: h.name, disabled: false});\n            });\n            this.hosts = list;\n        });\n    }\n\n    loadPlan() {\n        this.planService.list().subscribe(data => {\n            this.plans = data.items;\n        });\n    }\n\n    fullNodes() {\n        this.item.nodes = [];\n        this.masters.forEach(m => {\n            const node = new CreateNodeRequest();\n            node.hostName = m.id;\n            node.role = 'master';\n            this.item.nodes.push(node);\n        });\n        this.workers.forEach(m => {\n            const node = new CreateNodeRequest();\n            node.hostName = m.id;\n            node.role = 'worker';\n            this.item.nodes.push(node);\n        });\n    }\n\n    onSubmit() {\n        this.service.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.created.emit();\n        });\n    }\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" clrWizardSize=\"xl\" (clrWizardOnFinish)=\"onSubmit()\"\n            (clrWizardOnCancel)=\"onCancel()\" [clrWizardClosable]=\"false\">\n    <clr-wizard-title>{{\"APP_CREATE_CLUSTER\"|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{\"APP_CANCEL\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{\"APP_BACK\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{\"APP_NEXT\"|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{\"APP_FINISH\"|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\">\n        <ng-template clrPageTitle>{{\"APP_CLUSTER_INFO\"|translate}}</ng-template>\n        <form clrForm #basicForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>{{\"APP_PROVIDER\"|translate}}</label>\n                <select clrSelect name=\"provider\" [(ngModel)]=\"item.provider\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"bareMetal\">Bare Metal</option>\n                    <option value=\"plan\">Plan</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>{{\"APP_VERSION\"|translate}}</label>\n                <select clrSelect name=\"version\" [(ngModel)]=\"item.version\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"v1.18.0\">v1.18.0</option>\n                    <option value=\"v1.18.3\">v1.18.2</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>架构</label>\n                <select clrSelect name=\"version\" [(ngModel)]=\"item.architectures\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"arm64\">ARM64</option>\n                    <option value=\"amd64\">AMD64</option>\n                </select>\n            </clr-select-container>\n\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"seniorForm.invalid\">\n        <ng-template clrPageTitle>高级选项</ng-template>\n\n        <form clrForm #seniorForm='ngForm'>\n            <clr-select-container>\n                <label>{{\"APP_CONTAINER_RUNTIME_TYPE\"|translate}}</label>\n                <select clrSelect name=\"runtime\" [(ngModel)]=\"item.runtimeType\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"docker\">docker</option>\n                    <option value=\"containerd\">containerd</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container *ngIf=\"item.runtimeType == 'docker'\">\n                <label>{{\"APP_DOCKER_STORAGE_DIR\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"storage_dir\" [(ngModel)]=\"item.dockerStorageDir\"/>\n            </clr-input-container>\n            <clr-input-container *ngIf=\"item.runtimeType == 'containerd'\">\n                <label>{{\"APP_CONTAINERD_STORAGE_DIR\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"storage_dir\" [(ngModel)]=\"item.containerdStorageDir\"/>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>{{\"APP_CONTAINER_NETWORK_TYPE\"|translate}}</label>\n                <select clrSelect name=\"network\" [(ngModel)]=\"item.networkType\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"flannel\">flannel</option>\n                    <option value=\"calico\">calico</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.networkType === 'flannel'\">\n                <label>{{\"APP_NETWORK_MODE\"|translate}}</label>\n                <select clrSelect name=\"flannel_backend\" [(ngModel)]=\"item.flannelBackend\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"host-gw\">host-gw</option>\n                    <option value=\"vxlan\">vxlan</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.networkType === 'calico'\">\n                <label>{{\"APP_NETWORK_MODE\"|translate}}</label>\n                <select clrSelect name=\"calico_ipv4pool_ipip\" [(ngModel)]=\"item.calicoIpv4poolIpip\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"Always\">always</option>\n                    <option value=\"off\">off</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>Pod {{\"APP_SUBNET\"|translate}}</label>\n                <input clrInput size=\"34\" name=\"pod_subnet\" [(ngModel)]=\"item.kubePodSubnet\"/>\n            </clr-input-container>\n\n            <clr-input-container>\n                <label>Service {{\"APP_SUBNET\"|translate}}</label>\n                <input clrInput size=\"34\" name=\"service_subnet\" [(ngModel)]=\"item.kubeServiceSubnet\"/>\n            </clr-input-container>\n\n\n            <clr-input-container>\n                <label>最大POD数量</label>\n                <input clrInput type=\"number\" size=\"34\" name=\"kube_max_pods\" [(ngModel)]=\"item.kubeMaxPod\">\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>kube-proxy 模式</label>\n                <select clrSelect name=\"kube_proxy_mode\" [(ngModel)]=\"item.kubeProxyMode\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"iptables\">Iptables</option>\n                    <option value=\"ipvs\">ipvs</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>ingress 类型</label>\n                <select clrSelect name=\"ingress_controller_type\" [(ngModel)]=\"item.ingressControllerType\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"nginx\">nginx</option>\n                    <option value=\"traefik\">traefik</option>\n                </select>\n            </clr-select-container>\n            <clr-toggle-container>\n                <label>Kubernetes 审计</label>\n                <clr-toggle-wrapper>\n                    <input type=\"checkbox\" clrToggle name=\"kubernetes_audit\" [(ngModel)]=\"item.kubernetesAudit\"/>\n                </clr-toggle-wrapper>\n            </clr-toggle-container>\n        </form>\n    </clr-wizard-page>\n\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"masters.length===0\"\n                     (clrWizardPageNext)=\"fullNodes()\" *ngIf=\"item.provider === 'bareMetal'\">\n        <ng-template clrPageTitle>{{\"APP_NODE_INFO\"|translate}}</ng-template>\n        <form>\n            <div>\n                <h3>masters</h3>\n                <hr/>\n                <l-select2 name=\"masters\" [(ngModel)]=\"masters\" [data]=\"hosts\" [options]=\"options\"\n                           (valueChange)=\"toggle('master')\"></l-select2>\n            </div>\n            <div>\n                <h3>workers</h3>\n                <hr/>\n                <l-select2 name=\"workers\" [(ngModel)]=\"workers\" [data]=\"hosts\" [options]=\"options\"\n                           (valueChange)=\"toggle('worker')\"></l-select2>\n            </div>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page *ngIf=\"item.provider === 'plan'\">\n        <ng-template clrPageTitle>{{\"APP_DEPLOY_PLAN\"|translate}}</ng-template>\n        <form clrForm>\n            <clr-select-container>\n                <label>{{\"APP_DEPLOY_PLAN\"|translate}}</label>\n                <select clrSelect name=\"plan\" [(ngModel)]=\"item.plan\">\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option *ngFor=\"let plan of plans\" [value]=\"plan.name\"> {{plan.name}}</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container>\n                <label>{{\"APP_WORKER_AMOUNT\"|translate}}</label>\n                <input clrInput type=\"number\" name=\"workerSize\" [(ngModel)]=\"item.workerAmount\">\n            </clr-input-container>\n        </form>\n    </clr-wizard-page>\n\n    <clr-wizard-page>\n        <ng-template clrPageTitle>{{\"APP_CONFIRM_INFO\"|translate}}</ng-template>\n        <form>\n            <div>\n                <table class=\"table table-vertical\">\n                    <tbody>\n                    <tr>\n                        <th>{{\"APP_NAME\"|translate}}</th>\n                        <td>{{item.name}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_VERSION\"|translate}}</th>\n                        <td>{{item.version}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_PROVIDER\"|translate}}</th>\n                        <td>{{item.provider}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_CONTAINER_NETWORK_TYPE\"|translate}}</th>\n                        <td>{{item.networkType}}</td>\n                    </tr>\n                    <tr>\n                        <th>{{\"APP_CONTAINER_RUNTIME_TYPE\"|translate}}</th>\n                        <td>{{item.runtimeType}}</td>\n                    </tr>\n                    </tbody>\n                </table>\n            </div>\n        </form>\n    </clr-wizard-page>\n\n</clr-wizard>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {Cluster} from '../cluster';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-cluster-delete',\n    templateUrl: './cluster-delete.component.html',\n    styleUrls: ['./cluster-delete.component.css']\n})\nexport class ClusterDeleteComponent implements OnInit {\n\n    opened = false;\n    items: Cluster[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private service: ClusterService, private commonAlert: CommonAlertService) {\n    }\n\n\n    ngOnInit(): void {\n    }\n\n    open(items: Cluster[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n        }, error => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlert.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CLUSTER\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Cluster} from \"../cluster\";\nimport {ToolsService} from \"./tools/tools.service\";\nimport {ClusterTool} from \"./tools/tools\";\n\n@Component({\n    selector: 'app-cluster-detail',\n    templateUrl: './cluster-detail.component.html',\n    styleUrls: ['./cluster-detail.component.css']\n})\nexport class ClusterDetailComponent implements OnInit {\n\n    constructor(private router: Router, private route: ActivatedRoute, private toolsService: ToolsService) {\n    }\n\n    currentCluster: Cluster;\n    tools: ClusterTool[] = [];\n    ready = false;\n\n    ngOnInit(): void {\n        this.route.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolsService.list(this.currentCluster.name).subscribe(d => {\n                if (d) {\n                    this.tools = d;\n                }\n                this.ready = true;\n            });\n        });\n    }\n\n    showApp(toolName: string) {\n        for (const tool of this.tools) {\n            if (tool.name === toolName && tool.status === 'Running') {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    backToCluster() {\n        this.router.navigate(['clusters']);\n    }\n\n}\n","<a class=\"backStyle\" (click)=\"backToCluster()\">&lt; 集群</a>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"overview\" routerLinkActive=\"active\">概览</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"nodes\" routerLinkActive=\"active\">节点</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"namespaces\" routerLinkActive=\"active\">\n                {{\"APP_NAMESPACE\"|translate}}\n            </a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"storages\" routerLinkActive=\"active\">\n                {{\"APP_STORAGE\"|translate}}\n            </a>\n        </li>\n        <!--        <li class=\"nav-item\">-->\n        <!--            <a class=\"nav-link\" href=\"javascript:void(0)\">事件</a>-->\n        <!--        </li>-->\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('dashboard')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"dashboard\" routerLinkActive=\"active\">控制台</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('registry') || showApp('chartmuseum')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"repository\" routerLinkActive=\"active\">仓库</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('efk')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"logging\" routerLinkActive=\"active\">日志</a>\n        </li>\n        <li class=\"nav-item\" *ngIf=\"ready&&showApp('prometheus')\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"monitor\" routerLinkActive=\"active\">监控</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" href=\"javascript:void(0)\" routerLink=\"tool\" routerLinkActive=\"active\">工具</a>\n        </li>\n        <!--        <li class=\"nav-item\">-->\n        <!--            <a class=\"nav-link\" href=\"javascript:void(0)\">安全合规</a>-->\n        <!--        </li>-->\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-dashboard-dashboard',\n    templateUrl: './dashboard-dashboard.component.html',\n    styleUrls: ['./dashboard-dashboard.component.css']\n})\nexport class DashboardDashboardComponent implements OnInit {\n\n    @ViewChild('frame') frame: ElementRef;\n    loading = true;\n    @Input() currentCluster: Cluster;\n    url: any;\n\n    constructor(private route: ActivatedRoute, private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(`/proxy/dashboard/${this.currentCluster.name}/root`);\n    }\n\n    onFrameLoad() {\n        this.loading = false;\n    }\n\n}\n","<div style=\"text-align: center\">\n    <clr-spinner *ngIf=\"loading\"></clr-spinner>\n    <div style=\"padding-top: 10px\" [hidden]=\"loading\">\n        <iframe #frame [src]=\"url\"\n                style=\"width: 100%;height: 1024px;\" (load)=\"onFrameLoad()\"></iframe>\n    </div>\n</div>\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster } from \"../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ClusterTool} from \"../tools/tools\";\nimport {ToolsService} from \"../tools/tools.service\";\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'dashboard';\n    item: ClusterTool;\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.item = tool;\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-dashboard-dashboard *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-dashboard-dashboard>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {Terminal} from 'xterm';\nimport {LoggingService} from '../logging.service';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {V1Container, V1Namespace, V1Pod} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-logging-query',\n    templateUrl: './logging-query.component.html',\n    styleUrls: ['./logging-query.component.css']\n})\nexport class LoggingQueryComponent implements OnInit {\n\n    @ViewChild('terminal', {static: true}) terminal: ElementRef;\n    term: Terminal;\n    namespace: V1Namespace;\n    pod: V1Pod;\n    container: V1Container;\n    date = new Date();\n    currentCluster: Cluster;\n    namespaces: V1Namespace[] = [];\n    pods: V1Pod[] = [];\n\n    constructor(private service: LoggingService, private kubernetesService: KubernetesService, private route: ActivatedRoute) {\n    }\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster =data.cluster;\n            this.listNamespace();\n        });\n        this.initTerminal();\n    }\n\n    initTerminal() {\n        this.term = new Terminal({\n            cursorBlink: false,\n            disableStdin: true,\n            cursorStyle: 'bar',\n            cols: 240,\n            rows: 30,\n            letterSpacing: 1,\n            fontSize: 12\n        });\n        this.term.open(this.terminal.nativeElement);\n        this.term.writeln('no log');\n    }\n\n    search() {\n        this.service.search(this.currentCluster.name, this.namespace.metadata.name,\n            this.pod.metadata.name, this.container.name).subscribe(data => {\n            this.term.clear();\n            console.log(data);\n            for (const hit of data.hits.hits) {\n                this.term.writeln(hit._source.message);\n            }\n        });\n    }\n\n    listNamespace() {\n        this.kubernetesService.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n            if (!this.namespace) {\n                this.namespace = this.namespaces[0];\n                this.listPod();\n            }\n        });\n    }\n\n    listPod() {\n        this.pod = null;\n        this.container = null;\n        this.kubernetesService.listPod(this.currentCluster.name, '', this.namespace.metadata.name).subscribe(data => {\n            this.pods = data.items;\n            if (!this.pod) {\n                if (this.pods.length > 0) {\n                    this.pod = this.pods[0];\n                    this.container = this.pod.spec.containers[0];\n                }\n            }\n        });\n    }\n\n    onPodChange() {\n        if (this.pod.spec.containers.length > 0) {\n            this.container = this.pod.spec.containers[0];\n        } else {\n            this.container = null;\n        }\n    }\n}\n","<div class=\"card\">\n    <div class=\"card-block\">\n        <form clrForm>\n            <clr-select-container>\n                <label>Namespace</label>\n                <select name=\"namespace\" [(ngModel)]=\"namespace\" (change)=\"listPod()\" clrSelect>\n                    <option *ngFor=\"let ns of namespaces\" [ngValue]=\"ns\">{{ns.metadata.name}}</option>\n                </select>\n            </clr-select-container>\n            <clr-select-container>\n                <label>Pod</label>\n                <select name=\"pod\" [(ngModel)]=\"pod\" (change)=\"onPodChange()\" clrSelect>\n                    <option *ngFor=\"let p of pods\" [ngValue]=\"p\">{{p.metadata.name}}</option>\n                </select>\n            </clr-select-container>\n            <clr-select-container *ngIf=\"pod\">\n                <label>Container</label>\n                <select name=\"container\" [(ngModel)]=\"container\" clrSelect>\n                    <option *ngFor=\"let c of pod.spec.containers\" [ngValue]=\"c\">{{c.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </div>\n    <div class=\"card-footer\">\n        <button class=\"btn btn-primary\" (click)=\"search()\" [disabled]=\"!pod||!namespace||!container\">Query</button>\n    </div>\n</div>\n\n\n<div class=\"card\">\n    <div class=\"card-block\">\n        <div #terminal></div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ToolsService} from \"../tools/tools.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Cluster} from \"../../cluster\";\n\n@Component({\n    selector: 'app-logging',\n    templateUrl: './logging.component.html',\n    styleUrls: ['./logging.component.css']\n})\nexport class LoggingComponent implements OnInit {\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'EFK';\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-logging-query *ngIf=\"ready\"></app-logging-query>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport format from 'date-fns/format';\n\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggingService {\n\n    baseUrl = '/proxy/logging/{cluster_name}/{index_name}/_search';\n\n    constructor(private http: HttpClient) {\n    }\n\n    search(clusterName: string, namespace: string, container: string, pod: string): Observable<any> {\n        const date = format(new Date(), 'yyyy.MM.dd');\n        const index = 'logstash-' + date;\n        const query = {\n            query: {\n                bool: {\n                    must: [\n                        {\n                            match: {\n                                'kubernetes.pod_name': {\n                                    query: pod,\n                                },\n                            },\n                        },\n                        {\n                            match: {\n                                'kubernetes.namespace_name': {\n                                    query: namespace,\n                                },\n                            },\n                        },\n                        {\n                            match: {\n                                'kubernetes.container_name': {\n                                    query: container,\n                                },\n                            },\n                        }\n                    ],\n                },\n            },\n            sort: [\n                {'@timestamp': 'desc'},\n            ]\n        };\n        return this.http.post<any>(this.baseUrl.replace('{cluster_name}', clusterName).replace('{index_name}', index), query);\n    }\n}\n","import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\nimport {Cluster} from '../../../cluster';\nimport {ActivatedRoute} from '@angular/router';\nimport {ClusterService} from '../../../cluster.service';\nimport {DomSanitizer} from '@angular/platform-browser';\nimport {ClusterTool} from \"../../tools/tools\";\n\n@Component({\n    selector: 'app-monitor-dashboard',\n    templateUrl: './monitor-dashboard.component.html',\n    styleUrls: ['./monitor-dashboard.component.css']\n})\nexport class MonitorDashboardComponent implements OnInit {\n\n\n    @ViewChild('frame') frame: ElementRef;\n    loading = true;\n    @Input() currentCluster: Cluster;\n    @Input() item: ClusterTool;\n    url: any;\n\n    constructor(private route: ActivatedRoute, private clusterService: ClusterService, private sanitizer: DomSanitizer) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        const url = this.item.vars['url'] + '?orgId=1&kiosk';\n        this.url = this.sanitizer.bypassSecurityTrustResourceUrl(url);\n    }\n\n    onFrameLoad() {\n        this.frame.nativeElement.contentWindow.Mousetrap.unbindGlobal('esc');\n        this.loading = false;\n    }\n\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12\" style=\"text-align: center\">\n        <clr-spinner *ngIf=\"loading\"></clr-spinner>\n        <div style=\"padding-top: 10px\" [hidden]=\"loading\">\n            <iframe #frame [src]=\"url\"\n                    style=\"width: 100%;height: 1024px;\" (load)=\"onFrameLoad()\"></iframe>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../cluster';\nimport {ToolsService} from \"../tools/tools.service\";\nimport {ClusterTool} from \"../tools/tools\";\n\n@Component({\n    selector: 'app-monitor',\n    templateUrl: './monitor.component.html',\n    styleUrls: ['./monitor.component.css']\n})\nexport class MonitorComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'prometheus';\n    item: ClusterTool;\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.item = tool;\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-monitor-dashboard *ngIf=\"ready\" [item]=\"item\" [currentCluster]=\"currentCluster\"></app-monitor-dashboard>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>\n\n","import {Component, OnInit} from '@angular/core';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {V1Namespace} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-namespace-list',\n    templateUrl: './namespace-list.component.html',\n    styleUrls: ['./namespace-list.component.css']\n})\nexport class NamespaceListComponent implements OnInit {\n\n    loading = true;\n    selected = [];\n    items: V1Namespace[] = [];\n    page = 1;\n    currentCluster: Cluster;\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.list();\n        });\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n        });\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-namespace',\n  templateUrl: './namespace.component.html',\n  styleUrls: ['./namespace.component.css']\n})\nexport class NamespaceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-namespace-list></app-namespace-list>","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NodeService} from \"../node.service\";\nimport {Cluster, CreateNodeRequest} from \"../../../cluster\";\nimport {HostService} from \"../../../../host/host.service\";\nimport {NodeBatch} from \"../node\";\n\n@Component({\n    selector: 'app-node-create',\n    templateUrl: './node-create.component.html',\n    styleUrls: ['./node-create.component.css']\n})\nexport class NodeCreateComponent implements OnInit {\n\n    constructor(private nodeService: NodeService, private hostService: HostService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: NodeBatch = new NodeBatch();\n    hosts: any[] = [];\n    workers: any[] = [];\n    options: any = {\n        multiple: true,\n    };\n    @Input() currentCluster: Cluster;\n    @Output() created = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n\n    loadHosts() {\n        this.hostService.list().subscribe(data => {\n            const list = [];\n            data.items.filter((item) => {\n                if (!item.clusterId) {\n                    return true;\n                }\n            }).forEach(h => {\n                list.push({id: h.name, text: h.name, disabled: false});\n            });\n            this.hosts = list;\n        });\n    }\n\n    fullNodes() {\n        this.item.hosts = [];\n        this.workers.forEach(m => {\n            this.item.hosts.push(m.id);\n        });\n    }\n\n    reset() {\n        this.item = new NodeBatch();\n        this.item.increase = 1;\n        this.hosts = [];\n        this.workers = [];\n    }\n\n    open() {\n        this.reset();\n        this.loadHosts();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n\n    onSubmit() {\n        this.fullNodes();\n        this.isSubmitGoing = true;\n        this.item.operation = 'create';\n        this.nodeService.batch(this.currentCluster.name, this.item).subscribe(data => {\n            this.created.emit();\n            this.isSubmitGoing = false;\n            this.opened = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"lg\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #itemForm='ngForm'>\n            <div *ngIf=\"currentCluster.provider==='bareMetal'\">\n                <h4>Select Host</h4>\n                <br>\n                <l-select2 name=\"workers\" [(ngModel)]=\"workers\" [data]=\"hosts\" [options]=\"options\" required></l-select2>\n            </div>\n\n            <div *ngIf=\"currentCluster.provider==='plan'\">\n                <clr-input-container>\n                    <label>增量</label>\n                    <input size=\"34\" clrInput type=\"number\" name=\"increase\" [(ngModel)]=\"item.increase\">\n                </clr-input-container>\n            </div>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||itemForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {NodeBatch} from \"../node\";\nimport {NodeService} from \"../node.service\";\nimport {Cluster} from \"../../../cluster\";\nimport {Node} from \"../node\";\n\n@Component({\n    selector: 'app-node-delete',\n    templateUrl: './node-delete.component.html',\n    styleUrls: ['./node-delete.component.css']\n})\nexport class NodeDeleteComponent implements OnInit {\n\n    constructor(private nodeService: NodeService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    items: Node[] = [];\n    @Input() currentCluster: Cluster;\n    @Output() deleted = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        const batch = new NodeBatch();\n        batch.operation = 'delete';\n        batch.nodes = this.items.map(item => {\n            return item.name;\n        });\n        this.isSubmitGoing = true;\n        this.nodeService.batch(this.currentCluster.name, batch).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.opened = false;\n            this.deleted.emit();\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" clrModalClosable=\"true\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n\n","import {Component, OnInit} from '@angular/core';\nimport {V1Node} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-node-detail',\n    templateUrl: './node-detail.component.html',\n    styleUrls: ['./node-detail.component.css']\n})\nexport class NodeDetailComponent implements OnInit {\n\n    opened = false;\n    item: V1Node;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item: V1Node) {\n        this.opened = true;\n        this.item = item;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">{{\"APP_NODE_DETAIL\"|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\" style=\"overflow:auto\">\n        <h5>基本信息</h5>\n        <hr/>\n        <table class=\"table table-vertical\">\n            <tbody>\n            <tr>\n                <th>Name</th>\n                <td>{{item.metadata.name}}</td>\n            </tr>\n            <tr>\n                <th>Kernel Version</th>\n                <td>{{item.status.nodeInfo.kernelVersion}}</td>\n            </tr>\n            <tr>\n                <th>OS Image</th>\n                <td>{{item.status.nodeInfo.osImage}}</td>\n            </tr>\n            <tr>\n                <th>Container Runtime Version</th>\n                <td>{{item.status.nodeInfo.containerRuntimeVersion}}</td>\n            </tr>\n            <tr>\n                <th>Kubelet Version</th>\n                <td>{{item.status.nodeInfo.kubeletVersion}}</td>\n            </tr>\n            <tr>\n                <th>KubeProxy Version</th>\n                <td>{{item.status.nodeInfo.kubeProxyVersion}}</td>\n            </tr>\n            <tr>\n                <th>Operating System</th>\n                <td>{{item.status.nodeInfo.operatingSystem}}</td>\n            </tr>\n            <tr>\n                <th>Architecture</th>\n                <td>{{item.status.nodeInfo.architecture}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n        <h5>标签</h5>\n        <hr/>\n        <table class=\"table table-vertical\">\n            <tbody>\n            <tr *ngFor=\"let lable of item.metadata.labels | keyvalue\">\n                <th>{{lable.key}}</th>\n                <td>{{lable.value}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n        <h5>状态</h5>\n        <hr/>\n        <table class=\"table\">\n            <thead>\n            <tr>\n                <th>Type</th>\n                <th>Status</th>\n                <th>Time</th>\n                <th>Reason</th>\n                <th>Message</th>\n            </tr>\n            </thead>\n            <tbody>\n            <tr *ngFor=\"let condition of item.status.conditions\">\n                <td class=\"left\">{{condition.type}}</td>\n                <td class=\"left\">{{condition.status}}</td>\n                <td class=\"left\">{{condition.lastTransitionTime | date:'hh:mm:ss'}}</td>\n                <td class=\"left\">{{condition.reason}}</td>\n                <td class=\"left\">{{condition.message}}</td>\n            </tr>\n            </tbody>\n        </table>\n        <br/>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnDestroy, OnInit, Output} from '@angular/core';\nimport {KubernetesService} from '../../../kubernetes.service';\nimport {V1Node} from '@kubernetes/client-node';\nimport {Cluster} from '../../../cluster';\nimport {ActivatedRoute} from '@angular/router';\nimport {NodeService} from \"../node.service\";\nimport {Node} from \"../node\";\nimport {CommonAlertService} from \"../../../../../layout/common-alert/common-alert.service\";\nimport {AlertLevels} from \"../../../../../layout/common-alert/alert\";\n\n@Component({\n    selector: 'app-node-list',\n    templateUrl: './node-list.component.html',\n    styleUrls: ['./node-list.component.css']\n})\nexport class NodeListComponent implements OnInit, OnDestroy {\n\n    loading = true;\n    selected = [];\n    items: Node[] = [];\n    page = 1;\n    timer;\n    @Input() currentCluster: Cluster;\n    @Output() openDetail = new EventEmitter<V1Node>();\n    @Output() createEvent = new EventEmitter();\n    @Output() statusEvent = new EventEmitter<Node>();\n    @Output() deleteEvent = new EventEmitter<Node[]>();\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute,\n                private nodeService: NodeService, private alertService: CommonAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n        this.polling();\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n    }\n\n    refresh() {\n        this.nodeService.list(this.currentCluster.name).subscribe(d => {\n            this.items = d;\n            this.selected = [];\n            this.loading = false;\n        });\n    }\n\n    getInternalIp(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            for (const addr of item.info.status.addresses) {\n                if (addr.type === 'InternalIP') {\n                    result = addr.address;\n                }\n            }\n        }\n        return result;\n    }\n\n    getVersion(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = item.info.status.nodeInfo.kubeletVersion;\n        }\n        return result;\n    }\n\n    formatRAM(memory: string): string {\n        let result = 0.0;\n        if (memory.endsWith('Ki')) {\n            const str = memory.substring(0, memory.indexOf('Ki'));\n            result = parseFloat(str);\n            result = result / (1024 * 1024);\n        }\n        return result.toFixed(2) + 'GB';\n    }\n\n    getRAM(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = this.formatRAM(item.info.status.capacity['memory']);\n        }\n        return result;\n    }\n\n    getCpuCore(item: Node) {\n        let result = 'N/A';\n        if (item.status === 'Running') {\n            result = item.info.status.capacity['cpu'];\n        }\n        return result;\n    }\n\n    getNodeRoles(item: Node): string[] {\n        const roles: string[] = [];\n        if (item.status === 'Running') {\n            for (const key in item.info.metadata.labels) {\n                if (key) {\n                    switch (key) {\n                        case 'node-role.kubernetes.io/master':\n                            roles.push('master');\n                            break;\n                        case 'node-role.kubernetes.io/etcd':\n                            roles.push('etcd');\n                            break;\n                        case 'node-role.kubernetes.io/worker':\n                            roles.push('worker');\n                            break;\n                    }\n                }\n            }\n        }\n        return roles;\n    }\n\n    getStatus(item: Node) {\n        if (item.status === 'Running') {\n            return this.isNodeReady(item.info);\n        }\n        return item.status;\n    }\n\n    isNodeReady(n: V1Node): string {\n        let result = 'NotReady';\n        for (const condition of n.status.conditions) {\n            if (condition.type === 'Ready') {\n                if (condition.status === 'True') {\n                    result = 'Ready';\n                }\n            }\n        }\n        return result;\n    }\n\n    onDetail(item: Node) {\n        if (item.status === 'Running') {\n            this.openDetail.emit(item.info);\n        } else {\n            this.alertService.showAlert('node is not ready', AlertLevels.ERROR);\n        }\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n        this.selected = [];\n    }\n\n    onShowStatus(item: Node) {\n        this.statusEvent.emit(item);\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            let flag = false;\n            const needPolling = ['Waiting', 'Initializing', 'Terminating'];\n            for (const item of this.items) {\n                if (needPolling.indexOf(item.status) !== -1) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (flag) {\n                this.nodeService.list(this.currentCluster.name).subscribe(data => {\n                    data.forEach(n => {\n                        this.items.forEach(item => {\n                            if (item.name === n.name) {\n                                if (item.status !== n.status) {\n                                    item.status = n.status;\n                                }\n                            }\n                        });\n                    });\n                });\n            }\n        }, 1000);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n            <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n            {{\"APP_ADD\"|translate}}\n        </button>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n            <clr-icon shape=\"close\"></clr-icon>\n            {{\"APP_DELETE\"|translate}}\n        </button>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_IP\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>Roles</clr-dg-column>\n    <clr-dg-column>CPU</clr-dg-column>\n    <clr-dg-column>RAM</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\"\n                [clrDgSelectable]=\"getNodeRoles(item).indexOf('master')===-1\">\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onDetail(item)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{getInternalIp(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getVersion(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getNodeRoles(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getCpuCore(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{getRAM(item)}}</clr-dg-cell>\n        <clr-dg-cell *ngIf=\"getStatus(item) !== 'Failed'\">{{getStatus(item)}}\n            <clr-spinner clrAssertive clrInline *ngIf=\"item.status === 'Initializing' || item.status === 'Terminating'\">\n                Loading...\n            </clr-spinner>\n        </clr-dg-cell>\n        <clr-dg-cell *ngIf=\"getStatus(item) === 'Failed'\"><a href=\"javascript:void(0)\"\n                                                             (click)=\"onShowStatus(item)\">{{getStatus(item)}}</a>\n        </clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n</clr-datagrid>\n\n","import {Component, OnInit} from '@angular/core';\nimport {Node} from \"../node\";\n\n@Component({\n    selector: 'app-node-status',\n    templateUrl: './node-status.component.html',\n    styleUrls: ['./node-status.component.css']\n})\nexport class NodeStatusComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item: Node = new Node();\n\n    ngOnInit(): void {\n    }\n\n    open(item: Node) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" clrModalClosable=\"true\">\n    <h3 class=\"modal-title\">{{\"APP_NODE_DETAIL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{item.message}}</p>\n    </div>\n    <div class=\"modal-footer\">\n\n    </div>\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {NodeListComponent} from './node-list/node-list.component';\nimport {NodeDetailComponent} from './node-detail/node-detail.component';\nimport {V1Node} from '@kubernetes/client-node';\nimport {NodeCreateComponent} from \"./node-create/node-create.component\";\nimport {Cluster} from \"../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {NodeStatusComponent} from \"./node-status/node-status.component\";\nimport {Node} from \"./node\";\nimport {NodeDeleteComponent} from \"./node-delete/node-delete.component\";\n\n@Component({\n    selector: 'app-node',\n    templateUrl: './node.component.html',\n    styleUrls: ['./node.component.css']\n})\nexport class NodeComponent implements OnInit {\n\n    @ViewChild(NodeListComponent, {static: true})\n    list: NodeListComponent;\n\n    @ViewChild(NodeDetailComponent, {static: true})\n    detail: NodeDetailComponent;\n\n    @ViewChild(NodeCreateComponent, {static: true})\n    create: NodeCreateComponent;\n\n    @ViewChild(NodeStatusComponent, {static: true})\n    status: NodeStatusComponent;\n    @ViewChild(NodeDeleteComponent, {static: true})\n    delete: NodeDeleteComponent;\n\n    currentCluster: Cluster;\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openDetail(item: V1Node) {\n        this.detail.open(item);\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openShowCreate(item: Node) {\n        this.status.open(item);\n    }\n\n    openDelete(items: Node[]) {\n        this.delete.open(items);\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-node-detail></app-node-detail>\n<app-node-list [currentCluster]=\"currentCluster\" (createEvent)=\"openCreate()\"\n               (openDetail)=\"openDetail($event)\" (statusEvent)=\"openShowCreate($event)\"\n               (deleteEvent)=\"openDelete($event)\"></app-node-list>\n<app-node-create [currentCluster]=\"currentCluster\" (created)=\"refresh()\"></app-node-create>\n<app-node-delete [currentCluster]=\"currentCluster\" (deleted)=\"refresh()\"></app-node-delete>\n<app-node-status></app-node-status>","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {Node, NodeBatch} from \"./node\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class NodeService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/node/{clusterName}/';\n    batchUrl = '/api/v1/clusters/node/batch/{clusterName}/';\n\n    list(clusterName: string): Observable<Node[]> {\n        return this.http.get<Node[]>(this.baseUrl.replace('{clusterName}', clusterName));\n    }\n\n    batch(clusterName: string, item: NodeBatch): Observable<Node[]> {\n        return this.http.post<Node[]>(this.batchUrl.replace('{clusterName}', clusterName), item);\n    }\n}\n","import {V1Node} from \"@kubernetes/client-node\";\nimport {BaseModel} from \"../../../../shared/class/BaseModel\";\n\nexport class Node extends BaseModel {\n    name: string;\n    status: string;\n    message: string;\n    info: V1Node;\n}\n\n\nexport class NodeBatch {\n    hosts: string[] = [];\n    nodes: string[] = [];\n    increase: number;\n    operation: string;\n}\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n    selector: 'app-not-ready',\n    templateUrl: './not-ready.component.html',\n    styleUrls: ['./not-ready.component.css']\n})\nexport class NotReadyComponent implements OnInit {\n\n    constructor() {\n    }\n\n    @Input() toolName: string;\n\n    ngOnInit(): void {\n    }\n\n}\n","<div style=\"text-align: center\">\n    <span>service {{toolName}} is not ready!</span>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {ClusterService} from '../../cluster.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../cluster';\nimport {KubernetesService} from '../../kubernetes.service';\nimport {LoggingService} from '../../logging.service';\nimport {V1Deployment, V1Namespace, V1Node, V1Pod} from '@kubernetes/client-node';\n\n@Component({\n    selector: 'app-overview',\n    templateUrl: './overview.component.html',\n    styleUrls: ['./webkubectl/overview.component.css']\n})\nexport class OverviewComponent implements OnInit {\n\n    constructor(private service: ClusterService,\n                private route: ActivatedRoute,\n                private kubernetesService: KubernetesService,\n                private loggingService: LoggingService) {\n    }\n\n    currentCluster: Cluster;\n    namespaces: V1Namespace[] = [];\n    pods: V1Pod[] = [];\n    nodes: V1Node[] = [];\n    deployments: V1Deployment[] = [];\n    containerNumber = 0;\n    cpuTotal = 0;\n    cpuUsage = 0;\n    cpuUsagePercent = 0.0;\n    memTotal = 0;\n    memUsage = 0;\n    memUsagePercent = 0.0;\n    podLimit = 0;\n    podUsagePercent = 0.0;\n\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.listNameSpaces();\n            this.listNodes();\n            this.listDeployment();\n        });\n    }\n\n    listNameSpaces() {\n        this.kubernetesService.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n        });\n    }\n\n    listPods() {\n        this.kubernetesService.listPod(this.currentCluster.name).subscribe(data => {\n            this.pods = data.items;\n            for (const pod of this.pods) {\n                this.containerNumber = this.containerNumber + pod.spec.containers.length;\n            }\n            this.podUsagePercent = (this.pods.length / this.podLimit) * 100;\n        });\n    }\n\n    listNodes() {\n        this.kubernetesService.listNodes(this.currentCluster.name).subscribe(data => {\n            this.nodes = data.items;\n            for (const node of this.nodes) {\n                this.cpuTotal = this.cpuTotal + Number(node.status.capacity.cpu);\n                const mem = node.status.capacity.memory.replace('Ki', '');\n                this.memTotal = this.memTotal + Number(mem);\n                this.podLimit = this.podLimit + Number(node.status.capacity.pods);\n            }\n            this.listNodesUsage();\n            this.listPods();\n        });\n    }\n\n    listDeployment() {\n        this.kubernetesService.listDeployment(this.currentCluster.name).subscribe(data => {\n            this.deployments = data.items;\n        });\n    }\n\n    listNodesUsage() {\n        this.kubernetesService.listNodesUsage(this.currentCluster.name).subscribe(data => {\n            const metrics = data.items;\n            for (const me of metrics) {\n                const c = me.usage.cpu.replace('n', '');\n                this.cpuUsage = this.cpuUsage + Number(c);\n                const m = me.usage.memory.replace('Ki', '');\n                this.memUsage = this.memUsage + Number(m);\n            }\n            this.cpuUsage = this.cpuUsage / (1000 * 1000 * 1000);\n            this.memUsagePercent = (this.memUsage / this.memTotal) * 100;\n            this.cpuUsagePercent = (this.cpuUsage / this.cpuTotal) * 100;\n        });\n    }\n\n    onOpenDashboard() {\n        window.open('/proxy/dashboard/' + this.currentCluster.name + '/root', '_blank');\n    }\n}\n\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12 \">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"clr-row\">\n                    <div class=\"clr-col-3\">\n                        <div class=\"clr-row\">\n                            <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                                <h4>{{'APP_BASIC_INFORMATION'|translate}}</h4> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6  clr-col-12 count\">\n                                <span><b>{{'APP_NAME'|translate}}</b></span> <br>\n                                <span><b>{{'APP_VERSION'|translate}}</b></span> <br>\n                                <span><b>{{'APP_NETWORK_TYPE'|translate}}</b></span> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 type-face\">\n                                <span>{{currentCluster.name}}</span> <br>\n                                <span>{{currentCluster.spec.version}}</span> <br>\n                                <span>{{currentCluster.spec.networkType}}</span> <br>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"clr-col-6 solid\">\n                        <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                            <h4>{{'APP_CAPACITY_INFORMATION'|translate}}</h4> <br>\n                        </div>\n                        <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                            <circle-progress\n                                    [percent]=\"cpuUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'CPU 使用率'\"\n                            ></circle-progress>\n                            <circle-progress\n                                    [percent]=\"memUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'内存 使用率'\"\n                            ></circle-progress>\n                            <circle-progress\n                                    [percent]=\"podUsagePercent\"\n                                    [radius]=\"80\"\n                                    [outerStrokeWidth]=\"15\"\n                                    [innerStrokeWidth]=\"15\"\n                                    [space]=\"-15\"\n                                    [outerStrokeColor]=\"'#00af00'\"\n                                    [innerStrokeColor]=\"'#e5e9f2'\"\n                                    [titleFontSize]=20\n                                    [unitsFontSize]=20\n                                    [subtitleFontSize]=\"15\"\n                                    [subtitle]=\"'容器组'\"\n                            ></circle-progress>\n                        </div>\n                    </div>\n                    <div class=\"clr-col-3 solid\">\n                        <div class=\"clr-row\">\n                            <div class=\"clr-col-md-12\" style=\"text-align: center\">\n                                <h4>{{'APP_STATISTICS'|translate}}</h4> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 count\">\n                                <span><b>{{nodes.length}}</b></span> <br>\n                                <span><b>{{namespaces.length}}</b></span> <br>\n                                <span><b>{{deployments.length}}</b></span> <br>\n                                <span><b>{{pods.length}}</b></span> <br>\n                                <span><b>{{containerNumber}}</b></span> <br>\n                            </div>\n                            <div class=\"clr-col-lg-6 clr-col-12 type-face\">\n                                <span>Nodes</span> <br>\n                                <span>Namespaces</span> <br>\n                                <span>Deployments</span> <br>\n                                <span>Pods</span> <br>\n                                <span>Containers</span> <br>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<app-webkubectl [currentCluster]=\"currentCluster\"></app-webkubectl>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {WebkubectlService} from \"./webkubectl.service\";\nimport {WebkubectlToken} from \"./webkubectl\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-webkubectl',\n    templateUrl: './webkubectl.component.html',\n    styleUrls: ['./webkubectl.component.css']\n})\nexport class WebkubectlComponent implements OnInit {\n\n    constructor(private service: WebkubectlService, private sanitizer: DomSanitizer) {\n    }\n\n    @Input() currentCluster: Cluster;\n    url: any;\n    loading = false;\n    opened = false;\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.loading = true;\n        this.service.getToken(this.currentCluster.name).subscribe(data => {\n            this.url = this.sanitizer.bypassSecurityTrustResourceUrl('/webkubectl/terminal?token=' + data.token);\n            this.loading = false;\n        });\n    }\n\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-12 \">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                WebKubeCtl\n\n                <div *ngIf=\"!opened\" style=\"float: right\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"open()\">连接</button>\n                </div>\n\n            </div>\n            <div class=\"card-block\">\n                <div class=\"card-text\" style=\"text-align: center\">\n                    <div *ngIf=\"opened\">\n                        <clr-spinner *ngIf=\"loading\"></clr-spinner>\n                        <div *ngIf=\"url&&!loading\">\n                            <iframe #frame [src]=\"url\"\n                                    style=\"width: 100%;height: 512px;\"></iframe>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {WebkubectlToken} from \"./webkubectl\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class WebkubectlService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/webkubectl/{cluster_name}/';\n\n    getToken(clusterName: string): Observable<WebkubectlToken> {\n        return this.http.get<WebkubectlToken>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {ChartmuseumService} from \"../chartmuseum.service\";\nimport {Chart} from \"../chart\";\nimport {Cluster} from \"../../../../cluster\";\n\n@Component({\n    selector: 'app-chart-list',\n    templateUrl: './chart-list.component.html',\n    styleUrls: ['./chart-list.component.css']\n})\nexport class ChartListComponent implements OnInit {\n\n    loading = false;\n    items: Chart[] = [];\n    @Input() currentCluster: Cluster;\n\n    constructor(private chartService: ChartmuseumService) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.chartService.list(this.currentCluster.name).subscribe(data => {\n            this.items = [];\n            for (const key in data) {\n                if (key) {\n                    this.items = this.items.concat(data[key]);\n                }\n            }\n            this.loading = false;\n        });\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_DESCRIPTION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.version}}</clr-dg-cell>\n        <clr-dg-cell>{{item.appVersion}}</clr-dg-cell>\n        <clr-dg-cell>{{item.description}}</clr-dg-cell>\n        <clr-dg-cell>{{item.created|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n    </clr-dg-footer>\n</clr-datagrid>\n\n\n","import {Component, OnInit} from '@angular/core';\nimport {Cluster} from \"../../../cluster\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ToolsService} from \"../../tools/tools.service\";\n\n@Component({\n    selector: 'app-chartmuseum',\n    templateUrl: './chartmuseum.component.html',\n    styleUrls: ['./chartmuseum.component.css']\n})\nexport class ChartmuseumComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'chartmuseum';\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-chart-list *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-chart-list>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {ChartMap} from \"./chart\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ChartmuseumService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/proxy/chartmuseum/{cluster_name}/api/charts/';\n\n    list(clusterName: string): Observable<ChartMap> {\n        return this.http.get<ChartMap>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Registry} from \"../registry\";\nimport {RegistryService} from \"../registry.service\";\nimport {Cluster} from \"../../../../cluster\";\n\n@Component({\n    selector: 'app-registry-list',\n    templateUrl: './registry-list.component.html',\n    styleUrls: ['./registry-list.component.css']\n})\nexport class RegistryListComponent implements OnInit {\n\n    constructor(private registryService: RegistryService) {\n    }\n\n    loading = false;\n    items: Registry[] = [];\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    refresh() {\n        this.loading = true;\n        this.registryService.list(this.currentCluster.name).subscribe(data => {\n            this.loading = false;\n            this.items = [];\n            for (const repository of data.repositories) {\n                const item = new Registry();\n                item.name = repository;\n                this.items.push(item);\n                this.loading = false;\n            }\n        });\n    }\n\n    loadChild(item: Registry) {\n        item.loading = true;\n        this.registryService.listTags(this.currentCluster.name, item.name).subscribe(data => {\n            item.tags = data.tags;\n            item.loading = false;\n        });\n    }\n\n\n}\n","<clr-stack-view>\n    <clr-stack-header></clr-stack-header>\n    <clr-stack-block *ngFor=\"let item of items\"\n                     [clrStackViewLevel]=\"1\"\n                     [clrStackViewSetsize]=\"items.length\"\n                     [clrStackViewPosinset]=\"1\"\n                     [clrSbExpandable]=\"true\"\n                     (clrSbExpandedChange)=\"loadChild(item)\">\n        <clr-stack-label>{{'APP_NAME'|translate}}</clr-stack-label>\n        <clr-stack-content>{{item.name}}</clr-stack-content>\n\n        <clr-stack-block *ngIf=\"item.loading\" [clrStackViewLevel]=\"2\" [clrStackViewSetsize]=\"0\"\n                         [clrStackViewPosinset]=\"1\">\n            <clr-spinner clrAssertive clrInline>\n                Loading...\n            </clr-spinner>\n        </clr-stack-block>\n        <clr-stack-block\n                *ngFor=\"let tag of item.tags; let i = index\"\n                [clrStackViewLevel]=\"2\"\n                [clrStackViewSetsize]=\"item.tags.length\"\n                [clrStackViewPosinset]=\"i + 1\">\n            <clr-stack-label>tag</clr-stack-label>\n            <clr-stack-content>{{tag}}</clr-stack-content>\n        </clr-stack-block>\n    </clr-stack-block>\n</clr-stack-view>\n\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Cluster} from \"../../../cluster\";\nimport {ToolsService} from \"../../tools/tools.service\";\n\n@Component({\n    selector: 'app-registry',\n    templateUrl: './registry.component.html',\n    styleUrls: ['./registry.component.css']\n})\nexport class RegistryComponent implements OnInit {\n\n    currentCluster: Cluster;\n    ready = false;\n    toolName = 'registry';\n\n    constructor(private toolService: ToolsService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.toolService.list(this.currentCluster.name).subscribe(d => {\n                for (const tool of d) {\n                    if (tool.name === this.toolName) {\n                        this.ready = tool.status === 'Running';\n                    }\n                }\n            });\n        });\n    }\n\n}\n","<app-registry-list *ngIf=\"ready\" [currentCluster]=\"currentCluster\"></app-registry-list>\n<app-not-ready *ngIf=\"!ready\" [toolName]=\"toolName\"></app-not-ready>","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {ChartMap} from \"../chartmuseum/chart\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {Registry, RegistryList} from \"./registry\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegistryService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    listUrl = '/proxy/registry/{cluster_name}/v2/_catalog';\n    tagsUrl = '/proxy/registry/{cluster_name}/v2/{registry_name}/tags/list/';\n\n    list(clusterName: string): Observable<RegistryList> {\n        return this.http.get<RegistryList>(this.listUrl.replace('{cluster_name}', clusterName));\n    }\n\n    listTags(clusterName: string, tagName: string): Observable<Registry> {\n        return this.http.get<Registry>(this.tagsUrl.replace('{cluster_name}', clusterName).replace('{registry_name}', tagName));\n    }\n\n}\n","export class Registry {\n    name: string;\n    tags: string[] = [];\n    loading = false;\n}\n\nexport class RegistryList {\n    repositories: string[] = [];\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-repository',\n  templateUrl: './repository.component.html',\n  styleUrls: ['./repository.component.css']\n})\nexport class RepositoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-container\" style=\"height: 100%;\">\n    <nav class=\"sidenav\">\n        <section class=\"sidenav-content\">\n            <section class=\"nav-group\">\n                <ul class=\"nav-list\">\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"chartmuseum\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                Chart 仓库\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"registry\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                镜像仓库\n                            </div>\n                        </a>\n                    </li>\n                </ul>\n            </section>\n        </section>\n    </nav>\n    <div class=\"content-area\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {Cluster} from '../../../../cluster';\nimport {V1Namespace, V1PersistentVolume} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'app-persistent-volume-claim-list',\n    templateUrl: './persistent-volume-claim-list.component.html',\n    styleUrls: ['./persistent-volume-claim-list.component.css']\n})\nexport class PersistentVolumeClaimListComponent implements OnInit {\n\n    currentCluster: Cluster;\n    items: V1PersistentVolume[] = [];\n    namespaces: V1Namespace[] = [];\n    namespace = '';\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster =data.cluster;\n            this.listNamespace();\n        });\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listPersistentVolumeClaims(this.currentCluster.name, this.namespace, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n    listNamespace() {\n        this.loading = true;\n        this.service.listNamespaces(this.currentCluster.name).subscribe(data => {\n            this.namespaces = data.items;\n            if (this.namespace === '') {\n                this.namespace = this.items[0].metadata.name;\n            }\n        });\n        this.list();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-persistent-volume-claim',\n  templateUrl: './persistent-volume-claim.component.html',\n  styleUrls: ['./persistent-volume-claim.component.css']\n})\nexport class PersistentVolumeClaimComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-persistent-volume-claim-list></app-persistent-volume-claim-list>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {KubernetesService} from '../../../../../kubernetes.service';\nimport {V1HostPathVolumeSource, V1PersistentVolume} from '@kubernetes/client-node';\nimport {Cluster} from '../../../../../cluster';\nimport {NgForm} from '@angular/forms';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\n\n@Component({\n    selector: 'app-persistent-volume-create-host-path',\n    templateUrl: './persistent-volume-create-host-path.component.html',\n    styleUrls: ['./persistent-volume-create-host-path.component.css']\n})\nexport class PersistentVolumeCreateHostPathComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    item: V1PersistentVolume = this.newHostPathPv();\n    accessMode = 'ReadWriteOnce';\n    isSubmitGoing = false;\n\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('pvForm') pvForm: NgForm;\n\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.reset();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.item = this.newHostPathPv();\n        this.pvForm.resetForm();\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.item.spec.accessModes.push(this.accessMode);\n        this.kubernetesService.createPersistentVolume(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    newHostPathPv(): V1PersistentVolume {\n        return {\n            apiVersion: 'v1',\n            kind: 'PersistentVolume',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            spec: {\n                capacity: {},\n                accessModes: [],\n                hostPath: {\n                    path: '',\n                } as V1HostPathVolumeSource,\n            } as V1PersistentVolumeSpec,\n        } as V1PersistentVolume;\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.metadata.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Size (Gib)</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"size\" [(ngModel)]=\"item.spec.capacity['storage']\"\n                       required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>Access Mode</label>\n                <select clrSelect name=\"accessMode\" [(ngModel)]=\"accessMode\">\n                    <option value=\"ReadWriteOnce\">ReadWriteOnce</option>\n                    <option value=\"ReadWriteMany\">ReadWriteMany</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>Host Path</label>\n                <input clrInput [size]=\"32\" name=\"path\" [(ngModel)]=\"item.spec.hostPath.path\" required/>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||pvForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {V1PersistentVolume} from '@kubernetes/client-node';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {NgForm} from '@angular/forms';\nimport {KubernetesService} from '../../../../../kubernetes.service';\nimport {Cluster} from '../../../../../cluster';\n\n@Component({\n    selector: 'app-persistent-volume-create-nfs',\n    templateUrl: './persistent-volume-create-nfs.component.html',\n    styleUrls: ['./persistent-volume-create-nfs.component.css']\n})\nexport class PersistentVolumeCreateNfsComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    item: V1PersistentVolume = this.newNfsPv();\n    accessMode = 'ReadWriteOnce';\n    isSubmitGoing = false;\n\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('pvForm') pvForm: NgForm;\n\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.reset();\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.item = this.newNfsPv();\n        this.pvForm.resetForm();\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.item.spec.accessModes.push(this.accessMode);\n        this.kubernetesService.createPersistentVolume(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    newNfsPv(): V1PersistentVolume {\n        return {\n            apiVersion: 'v1',\n            kind: 'PersistentVolume',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            spec: {\n                capacity: {},\n                accessModes: [],\n                nfs: {\n                    path: '',\n                    server: '',\n                } as V1NFSVolumeSource,\n            } as V1PersistentVolumeSpec,\n        } as V1PersistentVolume;\n    }\n}\n\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.metadata.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Size (Gib)</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"size\" [(ngModel)]=\"item.spec.capacity['storage']\"\n                       required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>Access Mode</label>\n                <select clrSelect name=\"accessMode\" [(ngModel)]=\"accessMode\">\n                    <option value=\"ReadWriteOnce\">ReadWriteOnce</option>\n                    <option value=\"ReadWriteMany\">ReadWriteMany</option>\n                </select>\n            </clr-select-container>\n            <clr-input-container>\n                <label>NFS Server</label>\n                <input clrInput [size]=\"32\" name=\"server\" [(ngModel)]=\"item.spec.nfs.server\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>NFS Path</label>\n                <input clrInput [size]=\"32\" name=\"path\" [(ngModel)]=\"item.spec.nfs.path\" required/>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||pvForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-persistent-volume-create',\n    templateUrl: './persistent-volume-create.component.html',\n    styleUrls: ['./persistent-volume-create.component.css']\n})\nexport class PersistentVolumeCreateComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    provisioner = 'nfs';\n\n    @Output() selected = new EventEmitter();\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.selected.emit(this.provisioner);\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #pvForm='ngForm'>\n            <clr-radio-container>\n                <label>Provisioner</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"provisioner\" value=\"nfs\" [(ngModel)]=\"provisioner\"\n                           required/>\n                    <label>NFS</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"provisioner\" value=\"hostPath\" [(ngModel)]=\"provisioner\"\n                           required/>\n                    <label>Host Path</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../../cluster';\nimport {V1Namespace, V1PersistentVolume} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\n\n@Component({\n    selector: 'app-persistent-volume-list',\n    templateUrl: './persistent-volume-list.component.html',\n    styleUrls: ['./persistent-volume-list.component.css']\n})\nexport class PersistentVolumeListComponent implements OnInit {\n\n    items: V1PersistentVolume[] = [];\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n    @Output() createEvent = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    constructor(private service: KubernetesService,) {\n    }\n\n    ngOnInit(): void {\n        this.list();\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listPersistentVolumes(this.currentCluster.name, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n\n    getSource(item: V1PersistentVolume) {\n        for (const key in item.spec) {\n            if (key === 'nfs') {\n                return 'NFS';\n            }\n            if (key === 'hostPath') {\n                return 'Host Path';\n            }\n        }\n        return 'unknown';\n    }\n\n    refresh() {\n        this.list();\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n            <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n            {{\"APP_ADD\"|translate}}\n        </button>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CAPACITY\"|translate}}</clr-dg-column>\n    <clr-dg-column>Access Modes</clr-dg-column>\n    <clr-dg-column>{{\"APP_SOURCE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.spec.capacity[\"storage\"]}}Gib</clr-dg-cell>\n        <clr-dg-cell>{{item.spec.accessModes}}</clr-dg-cell>\n        <clr-dg-cell>{{getSource(item)}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status.phase}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PersistentVolumeListComponent} from './persistent-volume-list/persistent-volume-list.component';\nimport {PersistentVolumeCreateComponent} from './persistent-volume-create/persistent-volume-create.component';\nimport {PersistentVolumeCreateNfsComponent} from './persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {PersistentVolumeCreateHostPathComponent} from './persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component';\n\n@Component({\n    selector: 'app-persistent-volume',\n    templateUrl: './persistent-volume.component.html',\n    styleUrls: ['./persistent-volume.component.css']\n})\nexport class PersistentVolumeComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    @ViewChild(PersistentVolumeListComponent, {static: true})\n    list: PersistentVolumeListComponent;\n\n    @ViewChild(PersistentVolumeCreateComponent, {static: true})\n    create: PersistentVolumeCreateComponent;\n\n    @ViewChild(PersistentVolumeCreateNfsComponent, {static: true})\n    nfs: PersistentVolumeCreateNfsComponent;\n\n    @ViewChild(PersistentVolumeCreateHostPathComponent, {static: true})\n    hostPath: PersistentVolumeCreateHostPathComponent;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openSelected(provisioner: string) {\n        switch (provisioner) {\n            case 'nfs':\n                this.nfs.open();\n                break;\n            case 'hostPath':\n                this.hostPath.open();\n                break;\n        }\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-persistent-volume-list [currentCluster]=\"currentCluster\" (createEvent)=\"openCreate()\"></app-persistent-volume-list>\n<app-persistent-volume-create (selected)=\"openSelected($event)\"></app-persistent-volume-create>\n<app-persistent-volume-create-nfs [currentCluster]=\"currentCluster\"\n                                  (created)=\"refresh()\"></app-persistent-volume-create-nfs>\n<app-persistent-volume-create-host-path [currentCluster]=\"currentCluster\"\n                                        (created)=\"refresh()\"></app-persistent-volume-create-host-path>\n\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CreateStorageClassRequest} from '../../storage';\nimport {NgForm} from '@angular/forms';\nimport {V1PersistentVolume, V1StorageClass} from '@kubernetes/client-node';\nimport {V1ObjectMeta} from '@kubernetes/client-node/dist/gen/model/v1ObjectMeta';\nimport {V1NFSVolumeSource} from '@kubernetes/client-node/dist/gen/model/v1NFSVolumeSource';\nimport {V1PersistentVolumeSpec} from '@kubernetes/client-node/dist/gen/model/v1PersistentVolumeSpec';\nimport {StorageProvisionerService} from '../../storage-provisioner/storage-provisioner.service';\nimport {StorageProvisioner} from '../../storage-provisioner/storage-provisioner';\nimport {Cluster} from '../../../../cluster';\nimport {KubernetesService} from '../../../../kubernetes.service';\n\n@Component({\n    selector: 'app-storage-class-create',\n    templateUrl: './storage-class-create.component.html',\n    styleUrls: ['./storage-class-create.component.css']\n})\nexport class StorageClassCreateComponent implements OnInit {\n\n    constructor(private provisionerService: StorageProvisionerService, private kubernetesService: KubernetesService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: V1StorageClass;\n    provisioner: StorageProvisioner = new StorageProvisioner();\n    @Input() currentCluster: Cluster;\n    @Output() created = new EventEmitter();\n    provisioners: StorageProvisioner[] = [];\n\n    @Output() selected = new EventEmitter<CreateStorageClassRequest>();\n\n\n    ngOnInit(): void {\n\n    }\n\n    reset() {\n        this.item = this.newV1StorageClass();\n        this.provisionerService.list(this.currentCluster.name).subscribe(data => {\n            this.provisioners = data;\n        });\n    }\n\n    open() {\n        this.opened = true;\n        this.reset();\n    }\n\n    onProvisionerChange() {\n        this.item.provisioner = '';\n        if (this.provisioner) {\n            this.item.provisioner = this.provisioner.name;\n        }\n    }\n\n    onSubmit() {\n        if (this.isSubmitGoing) {\n            return;\n        }\n        this.isSubmitGoing = true;\n        this.kubernetesService.createStorageClass(this.currentCluster.name, this.item).subscribe(data => {\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.opened = false;\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    newV1StorageClass(): V1StorageClass {\n        return {\n            apiVersion: 'storage.k8s.io/v1',\n            kind: 'StorageClass',\n            metadata: {\n                name: ''\n            } as V1ObjectMeta,\n            provisioner: '',\n        } as V1StorageClass;\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\" clrModalSize=\"lg\">\n    <h3 class=\"modal-title\">创建存储类</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <form clrForm>\n            <clr-input-container>\n                <label>名称</label>\n                <input clrInput [size]=\"34\" name=\"name\" [(ngModel)]=\"item.metadata.name\">\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>存储类型</label>\n                <select clrSelect>\n                    <option value=\"\">NFS</option>\n                    <option value=\"\">Ceph-RBD</option>\n                </select>\n            </clr-select-container>\n\n            <clr-select-container>\n                <label>提供商</label>\n                <select name=\"provisioner\" [(ngModel)]=\"provisioner\" (change)=\"onProvisionerChange()\" clrSelect>\n                    <option [ngValue]=\"null\">自定义</option>\n                    <option [ngValue]=\"p\" *ngFor=\"let p of provisioners\">{{p.name}}</option>\n                </select>\n            </clr-select-container>\n\n            <table class=\"table table-vertical\" *ngIf=\"provisioner ===null\">\n                <tbody>\n                <tr>\n                    <th>provisioner_name</th>\n                    <td>\n                        <input clrInput [size]=\"34\" name=\"provisioner_name\" [(ngModel)]=\"item.provisioner\">\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <table class=\"table table-vertical\" *ngIf=\"provisioner&&provisioner.type==='nfs'\">\n                <tbody>\n                <tr>\n                    <th>provisioner_name</th>\n                    <td>\n                        <input [size]=\"34\" class=\"clr-input\" name=\"provisioner_name\" [(ngModel)]=\"item.provisioner\"\n                               disabled>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Cluster} from '../../../../cluster';\nimport {V1StorageClass} from '@kubernetes/client-node';\nimport {KubernetesService} from '../../../../kubernetes.service';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n    selector: 'app-storage-class-list',\n    templateUrl: './storage-class-list.component.html',\n    styleUrls: ['./storage-class-list.component.css']\n})\nexport class StorageClassListComponent implements OnInit {\n\n    currentCluster: Cluster;\n    items: V1StorageClass[] = [];\n    loading = true;\n    selected = [];\n    nextToken = '';\n    previousToken = '';\n    continueToken = '';\n    @Output() createEvent = new EventEmitter();\n\n    constructor(private service: KubernetesService, private route: ActivatedRoute) {\n    }\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n            this.list();\n        });\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    list() {\n        this.loading = true;\n        this.service.listStorageClass(this.currentCluster.name, this.continueToken).subscribe(data => {\n            this.loading = false;\n            this.items = data.items;\n            this.nextToken = data.metadata[this.service.continueTokenKey] ? data.metadata[this.service.continueTokenKey] : '';\n        });\n    }\n\n    refresh() {\n        this.list();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_PROVISIONER\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_RECLAIM_POLICY\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VOLUME_BINDING_MODE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.metadata.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.provisioner}}</clr-dg-cell>\n        <clr-dg-cell>{{item.reclaimPolicy}}</clr-dg-cell>\n        <clr-dg-cell>{{item.volumeBindingMode}}</clr-dg-cell>\n        <clr-dg-cell>{{item.metadata.creationTimestamp|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <app-k8s-pagination [(continueToken)]=\"continueToken\"\n                            [nextToken]=\"nextToken\"\n                            [previousToken]=\"previousToken\"\n                            (pageChange)=\"list()\"></app-k8s-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {StorageClassCreateComponent} from './storage-class-create/storage-class-create.component';\nimport {StorageClassListComponent} from './storage-class-list/storage-class-list.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\n\n@Component({\n    selector: 'app-storage-class',\n    templateUrl: './storage-class.component.html',\n    styleUrls: ['./storage-class.component.css']\n})\nexport class StorageClassComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    @ViewChild(StorageClassCreateComponent, {static: true})\n    create: StorageClassCreateComponent;\n\n    @ViewChild(StorageClassListComponent, {static: true})\n    list: StorageClassListComponent;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n}\n","<app-storage-class-list (createEvent)=\"openCreate()\"></app-storage-class-list>\n<app-storage-class-create [currentCluster]=\"currentCluster\" (created)=\"refresh()\"></app-storage-class-create>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {CreateStorageProvisionerRequest} from '../../storage-provisioner';\nimport {StorageProvisionerService} from '../../storage-provisioner.service';\nimport {Cluster} from '../../../../../cluster';\nimport {NgForm} from '@angular/forms';\n\n@Component({\n    selector: 'app-storage-provisioner-create-nfs',\n    templateUrl: './storage-provisioner-create-nfs.component.html',\n    styleUrls: ['./storage-provisioner-create-nfs.component.css']\n})\nexport class StorageProvisionerCreateNfsComponent implements OnInit {\n\n    constructor(private storageProvisionerService: StorageProvisionerService) {\n    }\n\n    opened = false;\n    item: CreateStorageProvisionerRequest = new CreateStorageProvisionerRequest();\n    @Output() created = new EventEmitter();\n    @Input() currentCluster: Cluster;\n    @ViewChild('nfsForm') nfsForm: NgForm;\n\n    ngOnInit(): void {\n    }\n\n    open(item: CreateStorageProvisionerRequest) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    reset() {\n        this.item = new CreateStorageProvisionerRequest();\n        this.nfsForm.resetForm();\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.storageProvisionerService.create(this.currentCluster.name, this.item).subscribe(data => {\n            this.opened = false;\n            this.created.emit();\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ADD\" |translate}}</h3>\n    <div class=\"modal-body\">\n        <form clrForm #nfsForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [(ngModel)]=\"item.name\" name=\"name\" size=\"34\" required>\n            </clr-input-container>\n\n            <clr-select-container>\n                <label>Version</label>\n                <select name=\"version\" clrSelect [(ngModel)]=\"item.vars['storage_nfs_server_version']\" required>\n                    <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </clr-select-container>\n\n            <clr-input-container>\n                <label>Server</label>\n                <input clrInput [(ngModel)]=\"item.vars['storage_nfs_server']\" name=\"server\" size=\"34\" required>\n            </clr-input-container>\n\n\n            <clr-input-container>\n                <label>Path</label>\n                <input clrInput [(ngModel)]=\"item.vars['storage_nfs_server_path']\" name=\"path\" size=\"34\" required>\n            </clr-input-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"nfsForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {CreateStorageProvisionerRequest} from '../storage-provisioner';\n\n@Component({\n    selector: 'app-storage-provisioner-create',\n    templateUrl: './storage-provisioner-create.component.html',\n    styleUrls: ['./storage-provisioner-create.component.css']\n})\nexport class StorageProvisionerCreateComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item = new CreateStorageProvisionerRequest();\n    @Output() selected = new EventEmitter<CreateStorageProvisionerRequest>();\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.opened = false;\n        this.selected.emit(this.item);\n    }\n\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ADD\" |translate}}</h3>\n    <div class=\"modal-body\">\n        <form clrForm #selectForm='ngForm'>\n            <clr-select-container>\n                <label>类型</label>\n                <select clrSelect [(ngModel)]=\"item.type\" name=\"type\" required>\n                    <option value=\"\">请选择</option>\n                    <option value=\"nfs\">NFS</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"selectForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Cluster} from \"../../../../cluster\";\nimport {StorageProvisionerService} from \"../storage-provisioner.service\";\nimport {StorageProvisioner} from \"../storage-provisioner\";\n\n@Component({\n    selector: 'app-storage-provisioner-delete',\n    templateUrl: './storage-provisioner-delete.component.html',\n    styleUrls: ['./storage-provisioner-delete.component.css']\n})\nexport class StorageProvisionerDeleteComponent implements OnInit {\n\n    constructor(private service: StorageProvisionerService) {\n    }\n\n    opened = false;\n    items: StorageProvisioner[] = [];\n    @Output() deleted = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n    }\n\n    open(items: StorageProvisioner[]) {\n        this.opened = true;\n        this.items = items;\n    }\n\n    onSubmit() {\n        this.service.batch(this.currentCluster.name, this.items).subscribe(data => {\n            this.opened = false;\n            this.deleted.emit();\n            console.log(data);\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {StorageProvisionerService} from '../storage-provisioner.service';\nimport {Cluster} from '../../../../cluster';\nimport {StorageProvisioner} from '../storage-provisioner';\n\n@Component({\n    selector: 'app-storage-provisioner-list',\n    templateUrl: './storage-provisioner-list.component.html',\n    styleUrls: ['./storage-provisioner-list.component.css']\n})\nexport class StorageProvisionerListComponent implements OnInit {\n\n    constructor(private service: StorageProvisionerService) {\n    }\n\n    loading = false;\n    items: StorageProvisioner[] = [];\n    selected: StorageProvisioner[] = [];\n    @Output() createEvent = new EventEmitter();\n    @Output() deleteEvent = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    list() {\n        this.service.list(this.currentCluster.name).subscribe(data => {\n            this.items = data;\n        });\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n    }\n\n    refresh() {\n        this.list();\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>Type</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.type}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {Cluster} from '../../../cluster';\nimport {StorageProvisionerListComponent} from './storage-provisioner-list/storage-provisioner-list.component';\nimport {StorageProvisionerCreateComponent} from './storage-provisioner-create/storage-provisioner-create.component';\nimport {StorageProvisionerCreateNfsComponent} from './storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component';\nimport {CreateStorageProvisionerRequest, StorageProvisioner} from './storage-provisioner';\nimport {StorageProvisionerDeleteComponent} from \"./storage-provisioner-delete/storage-provisioner-delete.component\";\n\n@Component({\n    selector: 'app-storage-provisioner',\n    templateUrl: './storage-provisioner.component.html',\n    styleUrls: ['./storage-provisioner.component.css']\n})\nexport class StorageProvisionerComponent implements OnInit {\n\n    constructor(private route: ActivatedRoute) {\n    }\n\n    @ViewChild(StorageProvisionerListComponent, {static: true})\n    list: StorageProvisionerListComponent;\n\n    @ViewChild(StorageProvisionerCreateComponent, {static: true})\n    create: StorageProvisionerCreateComponent;\n\n    @ViewChild(StorageProvisionerDeleteComponent, {static: true})\n    delete: StorageProvisionerDeleteComponent;\n\n    @ViewChild(StorageProvisionerCreateNfsComponent, {static: true})\n    nfs: StorageProvisionerCreateNfsComponent;\n    currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.route.parent.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: StorageProvisioner[]) {\n        this.delete.open(items);\n    }\n\n\n    openSelected(item: CreateStorageProvisionerRequest) {\n        console.log(item.name);\n        switch (item.type) {\n            case 'nfs':\n                this.nfs.open(item);\n                break;\n        }\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-storage-provisioner-list [currentCluster]=\"currentCluster\"\n                              (createEvent)=\"openCreate()\"\n                              (deleteEvent)=\"openDelete($event)\"></app-storage-provisioner-list>\n<app-storage-provisioner-create (selected)=\"openSelected($event)\"></app-storage-provisioner-create>\n<app-storage-provisioner-delete [currentCluster]=\"currentCluster\"\n                                (deleted)=\"refresh()\"></app-storage-provisioner-delete>\n<app-storage-provisioner-create-nfs [currentCluster]=\"currentCluster\"\n                                    (created)=\"refresh()\"></app-storage-provisioner-create-nfs>\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {CreateStorageProvisionerRequest, StorageProvisioner} from './storage-provisioner';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StorageProvisionerService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/provisioner/{cluster_name}/';\n\n    list(clusterName: string): Observable<StorageProvisioner[]> {\n        return this.http.get<StorageProvisioner[]>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n    create(clusterName: string, item: CreateStorageProvisionerRequest): Observable<StorageProvisioner> {\n        return this.http.post<StorageProvisioner>(this.baseUrl.replace('{cluster_name}', clusterName), item);\n    }\n\n    delete(clusterName: string, name: string): Observable<any> {\n        const url = this.baseUrl.replace('{cluster_name}', clusterName) + name + '/';\n        return this.http.delete<any>(url);\n    }\n\n    batch(clusterName: string, items: StorageProvisioner[]): Observable<any> {\n        const url = this.baseUrl.replace('{cluster_name}', 'batch/' + clusterName);\n        return this.http.post<any>(url, {items, operation: 'delete'});\n    }\n}\n\n\n","import {BaseModel} from '../../../../../shared/class/BaseModel';\n\nexport class StorageProvisioner extends BaseModel {\n    name: string;\n    type: string;\n    status: string;\n    vars: string;\n}\n\nexport class CreateStorageProvisionerRequest {\n    name: string;\n    type: string;\n    vars: {} = {};\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-storage',\n  templateUrl: './storage.component.html',\n  styleUrls: ['./storage.component.css']\n})\nexport class StorageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content-container\" style=\"height: 100%;\">\n    <nav class=\"sidenav\">\n        <section class=\"sidenav-content\">\n            <section class=\"nav-group\">\n                <ul class=\"nav-list\">\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"pv\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_PERSISTENT_VOLUME\" |translate}}\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"sc\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_STORAGE_CLASS\" |translate}}\n                            </div>\n                        </a>\n                    </li>\n                    <li>\n                        <a class=\"nav-link\" routerLink=\"provisioner\" routerLinkActive=\"active\">\n                            <div class=\"nav-slide-item\">\n                                {{\"APP_STORAGE_PROVISIONER\"|translate}}\n                            </div>\n                        </a>\n                    </li>\n                </ul>\n            </section>\n        </section>\n    </nav>\n    <div class=\"content-area\">\n        <router-outlet></router-outlet>\n    </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {KubernetesService} from \"../../../kubernetes.service\";\nimport {ClusterTool} from \"../tools\";\nimport {V1StorageClass} from \"@kubernetes/client-node\";\nimport {NgForm} from \"@angular/forms\";\nimport {Cluster} from \"../../../cluster\";\nimport {ToolsService} from \"../tools.service\";\n\n@Component({\n    selector: 'app-tools-enable',\n    templateUrl: './tools-enable.component.html',\n    styleUrls: ['./tools-enable.component.css']\n})\nexport class ToolsEnableComponent implements OnInit {\n\n    constructor(private kubernetesService: KubernetesService, private toolsService: ToolsService) {\n    }\n\n    opened = false;\n    isSubmitGoing = false;\n    item: ClusterTool = new ClusterTool();\n    storageClazz: V1StorageClass[] = [];\n    @ViewChild('itemForm') itemForm: NgForm;\n    @Output() enabled = new EventEmitter();\n    @Input() currentCluster: Cluster;\n\n\n    ngOnInit(): void {\n    }\n\n    onSubmit() {\n        this.toolsService.enable(this.currentCluster.name, this.item).subscribe(data => {\n            this.opened = false;\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    reset() {\n        this.itemForm.resetForm();\n        this.listStorageClass();\n    }\n\n    open(item: ClusterTool) {\n        this.reset();\n        this.opened = true;\n        this.setDefaultVars(item);\n        this.item = item;\n        console.log(this.item);\n    }\n\n    listStorageClass() {\n        this.kubernetesService.listStorageClass(this.currentCluster.name, '', true).subscribe(data => {\n            this.storageClazz = data.items;\n        });\n    }\n\n    setDefaultVars(item: ClusterTool) {\n        switch (item.name) {\n            case 'prometheus':\n                item.vars = {\n                    'server.retention': '10d',\n                    'server.persistentVolume.enabled': false,\n                    'server.persistentVolume.size': '10Gi',\n                    'server.persistentVolume.storageClass': '',\n                };\n                break;\n            case 'chartmuseum':\n                item.vars = {\n                    'persistence.enabled': false,\n                    'env.open.DISABLE_API': false,\n                    'persistence.storageClass': '',\n                };\n                break;\n            case 'registry':\n                item.vars = {\n                    'persistence.enabled': false,\n                    'persistence.storageClass': '',\n                    'service.type': 'NodePort',\n                };\n                break;\n            case 'efk':\n                item.vars = {\n                    'elasticsearch.persistence.enabled': false,\n                    'elasticsearch.volumeClaimTemplate.resources.requests.storage': '10Gi',\n                    'elasticsearch.volumeClaimTemplate.storageClassName': '',\n                };\n                break;\n            case 'dashboard':\n                item.vars = {};\n                break;\n        }\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #itemForm='ngForm'>\n            <div *ngIf=\"item.name === 'chartmuseum'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\" [(ngModel)]=\"item.vars['persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n\n                <clr-select-container *ngIf=\"item.vars['persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\" [(ngModel)]=\"item.vars['persistence.storageClass']\" required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n            <div *ngIf=\"item.name === 'prometheus'\">\n                <clr-input-container>\n                    <label>数据保留</label>\n                    <input clrInput name=\"retention\"\n                           [(ngModel)]=\"item.vars['server.retention']\" size=\"34\"/>\n                </clr-input-container>\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['server.persistentVolume.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-input-container *ngIf=\"item.vars['server.persistentVolume.enabled']\">\n                    <label>容量</label>\n                    <input clrInput name=\"size\"\n                           [(ngModel)]=\"item.vars['server.persistentVolume.size']\" size=\"34\"/>\n                </clr-input-container>\n                <clr-select-container *ngIf=\"item.vars['server.persistentVolume.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\" [(ngModel)]=\"item.vars['server.persistentVolume.storageClass']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n            <div *ngIf=\"item.name === 'efk'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['elasticsearch.persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-input-container *ngIf=\"item.vars['elasticsearch.persistence.enabled']\">\n                    <label>容量</label>\n                    <input clrInput name=\"size\"\n                           [(ngModel)]=\"item.vars['elasticsearch.volumeClaimTemplate.resources.requests.storage']\"\n                           size=\"34\"/>\n                </clr-input-container>\n                <clr-select-container *ngIf=\"item.vars['elasticsearch.persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\"\n                            [(ngModel)]=\"item.vars['elasticsearch.volumeClaimTemplate.storageClassName']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n\n            <div *ngIf=\"item.name === 'registry'\">\n                <clr-toggle-container>\n                    <clr-toggle-wrapper>\n                        <input type=\"checkbox\" clrToggle name=\"pv\"\n                               [(ngModel)]=\"item.vars['persistence.enabled']\"/>\n                        <label>开启存储</label>\n                    </clr-toggle-wrapper>\n                </clr-toggle-container>\n                <clr-select-container *ngIf=\"item.vars['persistence.enabled']\">\n                    <label>{{\"APP_STORAGE_CLASS\"|translate}}</label>\n                    <select clrSelect name=\"sc\"\n                            [(ngModel)]=\"item.vars['persistence.storageClass']\"\n                            required>\n                        <option value=\"\">{{\"APP_DEFAULT_OPTION\"|translate}}</option>\n                        <option *ngFor=\"let sc of storageClazz\" [value]=\"sc.metadata.name\">{{sc.metadata.name}}</option>\n                    </select>\n                </clr-select-container>\n            </div>\n\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"isSubmitGoing||itemForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {ClusterTool} from \"../tools\";\n\n@Component({\n    selector: 'app-tools-failed',\n    templateUrl: './tools-failed.component.html',\n    styleUrls: ['./tools-failed.component.css']\n})\nexport class ToolsFailedComponent implements OnInit {\n\n    constructor() {\n    }\n\n    opened = false;\n    item: ClusterTool = new ClusterTool();\n\n    ngOnInit(): void {\n    }\n\n    open(item: ClusterTool) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        {{item.message}}\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {ClusterTool} from \"../tools\";\nimport {ToolsService} from \"../tools.service\";\nimport {Cluster} from \"../../../cluster\";\n\n@Component({\n    selector: 'app-tools-list',\n    templateUrl: './tools-list.component.html',\n    styleUrls: ['./tools-list.component.css']\n})\nexport class ToolsListComponent implements OnInit {\n\n    constructor(private service: ToolsService) {\n    }\n\n    items: ClusterTool[] = [];\n    @Input() currentCluster: Cluster;\n    @Output() enableEvent = new EventEmitter<ClusterTool>();\n    @Output() failedEvent = new EventEmitter<ClusterTool>();\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n\n    refresh() {\n        this.service.list(this.currentCluster.name).subscribe(data => {\n            this.items = data;\n        });\n    }\n\n    onEnable(item: ClusterTool) {\n        this.enableEvent.emit(item);\n    }\n\n    onFailed(item: ClusterTool) {\n        this.failedEvent.emit(item);\n    }\n\n}\n","<div class=\"clr-row\">\n    <div class=\"clr-col-3\" *ngFor=\"let item of items\">\n        <div class=\"card\">\n            <div class=\"card-block\">\n                <div class=\"card-media-block\">\n                    <img [src]=\"'assets/images/tool/'+item.logo\" class=\"card-media-image\">\n                    <div class=\"card-media-description\">\n                        <span class=\"card-media-title\">\n                            {{item.name}}-{{item.version}}\n                        </span>\n                        <span class=\"card-media-text\">\n                            {{item.describe}}\n                        </span>\n                    </div>\n                </div>\n                <div class=\"card-text\">\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div style=\"text-align: right\">\n                    <button *ngIf=\"item.status === 'Waiting' || item.status === 'Failed'\" class=\"btn btn-sm btn-primary\"\n                            (click)=\"onEnable(item)\">\n                        Enable\n                    </button>\n\n                    <button *ngIf=\"item.status === 'Failed'\" class=\"btn btn-sm btn-danger\" (click)=\"onFailed(item)\">\n                        Failed\n                    </button>\n\n                    <button *ngIf=\"item.status === 'Running'\" class=\"btn btn-sm btn-primary\" (click)=\"onFailed(item)\">\n                        Disable\n                    </button>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, EventEmitter, OnInit, ViewChild} from '@angular/core';\nimport {ToolsService} from \"./tools.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {ClusterTool} from \"./tools\";\nimport {Cluster} from \"../../cluster\";\nimport {ToolsListComponent} from \"./tools-list/tools-list.component\";\nimport {ToolsEnableComponent} from \"./tools-enable/tools-enable.component\";\nimport {ToolsFailedComponent} from \"./tools-failed/tools-failed.component\";\n\n@Component({\n    selector: 'app-tools',\n    templateUrl: './tools.component.html',\n    styleUrls: ['./tools.component.css']\n})\nexport class ToolsComponent implements OnInit {\n\n\n    @ViewChild(ToolsListComponent, {static: true})\n    list: ToolsListComponent;\n\n    @ViewChild(ToolsEnableComponent, {static: true})\n    enable: ToolsEnableComponent;\n\n    @ViewChild(ToolsFailedComponent, {static: true})\n    failed: ToolsFailedComponent;\n\n    constructor(private service: ToolsService, private route: ActivatedRoute) {\n    }\n\n    currentCluster: Cluster;\n\n    ngOnInit(): void {\n        this.route.parent.data.subscribe(data => {\n            this.currentCluster = data.cluster;\n        });\n    }\n\n    openEnable(item: ClusterTool) {\n        this.enable.open(item);\n    }\n\n    openFailed(item: ClusterTool) {\n        this.failed.open(item);\n    }\n\n    refresh() {\n        this.list.refresh();\n    }\n\n}\n","<app-tools-list [currentCluster]=\"currentCluster\" (enableEvent)=\"openEnable($event)\"\n                (failedEvent)=\"openFailed($event)\"></app-tools-list>\n<app-tools-enable [currentCluster]=\"currentCluster\"></app-tools-enable>\n<app-tools-failed></app-tools-failed>","import {Injectable} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {ClusterTool} from \"./tools\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ToolsService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    baseUrl = '/api/v1/clusters/tool/{cluster_name}/';\n\n    list(clusterName: string): Observable<ClusterTool[]> {\n        return this.http.get<ClusterTool[]>(this.baseUrl.replace('{cluster_name}', clusterName));\n    }\n\n    enable(clusterName: string, item: ClusterTool): Observable<ClusterTool> {\n        return this.http.post<ClusterTool>(this.baseUrl.replace('{cluster_name}', clusterName), item);\n    }\n\n}\n","import {BaseModel} from \"../../../../shared/class/BaseModel\";\n\nexport class ClusterTool extends BaseModel {\n    name: string;\n    version: string;\n    describe: string;\n    status: string;\n    message: string;\n    logo: string;\n    vars: {} = {};\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CLusterImportRequest} from '../cluster';\nimport {NgForm} from '@angular/forms';\nimport {ClusterService} from '../cluster.service';\n\n@Component({\n    selector: 'app-cluster-import',\n    templateUrl: './cluster-import.component.html',\n    styleUrls: ['./cluster-import.component.css']\n})\nexport class ClusterImportComponent implements OnInit {\n\n    constructor(private clusterService: ClusterService) {\n    }\n\n    opened = false;\n    item = new CLusterImportRequest();\n    @Output() imported = new EventEmitter();\n    @ViewChild('importForm') importForm: NgForm;\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.clusterService.import(this.item).subscribe(() => {\n            this.imported.emit();\n            this.opened = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">导入集群</h3>\n    <div class=\"modal-body\">\n        <form clrForm #importForm=\"ngForm\">\n            <clr-input-container>\n                <label>Name</label>\n                <input clrInput size=\"50\" name=\"name\" [(ngModel)]=\"item.name\" required>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Api Server</label>\n                <input clrInput size=\"50\" name=\"api-server\" [(ngModel)]=\"item.apiServer\" required>\n            </clr-input-container>\n            <clr-input-container>\n                <label>Router</label>\n                <input clrInput size=\"50\" name=\"api-server\" [(ngModel)]=\"item.router\" required>\n            </clr-input-container>\n            <clr-textarea-container>\n                <label>Token</label>\n                <textarea clrTextarea [cols]=\"48\" name=\"token\" [(ngModel)]=\"item.token\" required></textarea>\n            </clr-textarea-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"onCancel()\">\n            {{\"APP_CANCEL\" |translate}}\n        </button>\n        <button type=\"button\" class=\"btn btn-primary\" [disabled]=\"importForm.invalid\" (click)=\"onSubmit()\">\n            {{\"APP_COMMIT\" |translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ClusterService} from '../cluster.service';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Cluster} from '../cluster';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {Router} from '@angular/router';\n\n@Component({\n    selector: 'app-cluster-list',\n    templateUrl: './cluster-list.component.html',\n    styleUrls: ['./cluster-list.component.css']\n})\nexport class ClusterListComponent extends BaseModelComponent<Cluster> implements OnInit, OnDestroy {\n\n    constructor(clusterService: ClusterService, private commonAlert: CommonAlertService, private router: Router) {\n        super(clusterService);\n    }\n\n    @Output() statusDetailEvent = new EventEmitter<string>();\n    @Output() importEvent = new EventEmitter();\n    timer;\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        this.polling();\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n    }\n\n    onDetail(item: Cluster) {\n        if (item.status !== 'Running') {\n            this.commonAlert.showAlert('cluster is not ready', AlertLevels.ERROR);\n        } else {\n            this.router.navigate(['clusters', item.name]).then();\n        }\n    }\n\n    onImport() {\n        this.importEvent.emit();\n    }\n\n    onNodeDetail(item: Cluster) {\n        if (item.status !== 'Running') {\n            this.commonAlert.showAlert('cluster is not ready', AlertLevels.ERROR);\n        } else {\n            this.router.navigate(['clusters', item.name, 'nodes']).then();\n        }\n    }\n\n\n    onStatusDetail(name: string) {\n        this.statusDetailEvent.emit(name);\n    }\n\n    polling() {\n        this.timer = setInterval(() => {\n            let flag = false;\n            const needPolling = ['Waiting', 'Initializing', 'Terminating', 'Creating'];\n            for (const item of this.items) {\n                if (needPolling.indexOf(item.status) !== -1) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (flag) {\n                this.service.page(this.page, this.size).subscribe(data => {\n                    data.items.forEach(n => {\n                        this.items.forEach(item => {\n                            if (item.name === n.name) {\n                                if (item.status !== n.status) {\n                                    item.status = n.status;\n                                }\n                            }\n                        });\n                    });\n                });\n            }\n        }, 1000);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [clrDgSelected]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n\n<!--            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onImport()\">-->\n<!--                <clr-icon shape=\"import\" size=\"16\"></clr-icon>-->\n<!--                {{\"APP_IMPORT\"|translate}}-->\n<!--            </button>-->\n\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{\"APP_NAME\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_VERSION\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_NODE_SIZE\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_STATUS\"|translate}}</clr-dg-column>\n    <clr-dg-column>{{\"APP_CREATED_DATE\"|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onDetail(item)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.spec.version}}</clr-dg-cell>\n        <clr-dg-cell><a href=\"javascript:void(0)\" (click)=\"onNodeDetail(item)\">{{item.nodeSize}}</a></clr-dg-cell>\n        <clr-dg-cell><a (click)=\"onStatusDetail(item.name)\" href=\"javascript:void(0)\">{{item.status}}</a>\n        </clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_CLUSTER\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\nimport {Cluster} from './cluster';\nimport {Observable} from 'rxjs';\nimport {ClusterService} from './cluster.service';\nimport {map, take} from 'rxjs/operators';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClusterRoutingResolverService implements Resolve<Cluster> {\n\n    constructor(private service: ClusterService) {\n    }\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Cluster> | Promise<Cluster> | Cluster {\n        const clusterName = route.params.name;\n        return this.service.get(clusterName).pipe(\n            take(1),\n            map(cluster => {\n                if (cluster) {\n                    return cluster;\n                } else {\n                    return null;\n                }\n            })\n        );\n    }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ClusterCreateComponent} from './cluster-create/cluster-create.component';\nimport {ClusterListComponent} from './cluster-list/cluster-list.component';\nimport {ClusterDeleteComponent} from './cluster-delete/cluster-delete.component';\nimport {Cluster} from './cluster';\nimport {ClusterConditionComponent} from './cluster-condition/cluster-condition.component';\nimport {ClusterImportComponent} from './cluster-import/cluster-import.component';\n\n@Component({\n    selector: 'app-cluster',\n    templateUrl: './cluster.component.html',\n    styleUrls: ['./cluster.component.css']\n})\nexport class ClusterComponent implements OnInit {\n\n    constructor() {\n    }\n\n    @ViewChild(ClusterCreateComponent, {static: true})\n    create: ClusterCreateComponent;\n\n    @ViewChild(ClusterDeleteComponent, {static: true})\n    delete: ClusterDeleteComponent;\n\n    @ViewChild(ClusterConditionComponent, {static: true})\n    condition: ClusterConditionComponent;\n\n    @ViewChild(ClusterListComponent, {static: true})\n    list: ClusterListComponent;\n\n    @ViewChild(ClusterImportComponent, {static: true})\n    import: ClusterImportComponent;\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openImport() {\n        this.import.open();\n    }\n\n    openDelete(items: Cluster[]) {\n        this.delete.open(items);\n    }\n\n    openStatusDetail(name: string) {\n        this.condition.open(name);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_CLUSTER' | translate }}</h2>\n    </div>\n    <app-cluster-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                      (statusDetailEvent)=\"openStatusDetail($event)\" (importEvent)=\"openImport()\"></app-cluster-list>\n    <app-cluster-create (created)=\"refresh()\"></app-cluster-create>\n    <app-cluster-delete (deleted)=\"refresh()\"></app-cluster-delete>\n    <app-cluster-import (imported)=\"refresh()\"></app-cluster-import>\n    <app-cluster-condition></app-cluster-condition>\n</div>\n","import {NgModule} from '@angular/core';\nimport {ClusterComponent} from './cluster.component';\nimport {CoreModule} from '../../core/core.module';\nimport {ClusterListComponent} from './cluster-list/cluster-list.component';\nimport {ClusterCreateComponent} from './cluster-create/cluster-create.component';\nimport {ClusterDeleteComponent} from './cluster-delete/cluster-delete.component';\nimport {ClusterDetailComponent} from './cluster-detail/cluster-detail.component';\nimport {OverviewComponent} from './cluster-detail/overview/overview.component';\nimport {RouterModule} from '@angular/router';\nimport {ClusterConditionComponent} from './cluster-condition/cluster-condition.component';\nimport {NodeComponent} from './cluster-detail/node/node.component';\nimport {NamespaceComponent} from './cluster-detail/namespace/namespace.component';\nimport {NamespaceListComponent} from './cluster-detail/namespace/namespace-list/namespace-list.component';\nimport {SharedModule} from '../../shared/shared.module';\nimport {StorageComponent} from './cluster-detail/storage/storage.component';\nimport {PersistentVolumeComponent} from './cluster-detail/storage/persistent-volume/persistent-volume.component';\nimport {PersistentVolumeClaimComponent} from './cluster-detail/storage/persistent-volume-claim/persistent-volume-claim.component';\nimport {StorageClassComponent} from './cluster-detail/storage/storage-class/storage-class.component';\nimport {PersistentVolumeListComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-list/persistent-volume-list.component';\nimport {NodeListComponent} from './cluster-detail/node/node-list/node-list.component';\nimport {NodeDetailComponent} from './cluster-detail/node/node-detail/node-detail.component';\nimport {PersistentVolumeClaimListComponent} from './cluster-detail/storage/persistent-volume-claim/persistent-volume-claim-list/persistent-volume-claim-list.component';\nimport {StorageClassListComponent} from './cluster-detail/storage/storage-class/storage-class-list/storage-class-list.component';\nimport {LoggingComponent} from './cluster-detail/logging/logging.component';\nimport {LoggingQueryComponent} from './cluster-detail/logging/logging-query/logging-query.component';\n\nimport {NgCircleProgressModule} from 'ng-circle-progress';\nimport {MonitorComponent} from './cluster-detail/monitor/monitor.component';\nimport {MonitorDashboardComponent} from './cluster-detail/monitor/monitor-dashboard/monitor-dashboard.component';\nimport {ClusterImportComponent} from './cluster-import/cluster-import.component';\nimport {StorageClassCreateComponent} from './cluster-detail/storage/storage-class/storage-class-create/storage-class-create.component';\nimport {PersistentVolumeCreateComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create.component';\nimport {PersistentVolumeCreateNfsComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-nfs/persistent-volume-create-nfs.component';\nimport {PersistentVolumeCreateHostPathComponent} from './cluster-detail/storage/persistent-volume/persistent-volume-create/persistent-volume-create-host-path/persistent-volume-create-host-path.component';\nimport {StorageProvisionerComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner.component';\nimport {StorageProvisionerListComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-list/storage-provisioner-list.component';\nimport {StorageProvisionerCreateComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create.component';\nimport {StorageProvisionerCreateNfsComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-create/storage-provisioner-create-nfs/storage-provisioner-create-nfs.component';\nimport {StorageProvisionerDeleteComponent} from './cluster-detail/storage/storage-provisioner/storage-provisioner-delete/storage-provisioner-delete.component';\nimport {ToolsComponent} from './cluster-detail/tools/tools.component';\nimport {ToolsListComponent} from './cluster-detail/tools/tools-list/tools-list.component';\nimport {RepositoryComponent} from './cluster-detail/repository/repository.component';\nimport {RegistryComponent} from './cluster-detail/repository/registry/registry.component';\nimport {ChartmuseumComponent} from './cluster-detail/repository/chartmuseum/chartmuseum.component';\nimport {ChartListComponent} from './cluster-detail/repository/chartmuseum/chart-list/chart-list.component';\nimport {RegistryListComponent} from './cluster-detail/repository/registry/registry-list/registry-list.component';\nimport {ToolsEnableComponent} from './cluster-detail/tools/tools-enable/tools-enable.component';\nimport {NotReadyComponent} from './cluster-detail/not-ready/not-ready.component';\nimport { DashboardComponent } from './cluster-detail/dashboard/dashboard.component';\nimport { ToolsFailedComponent } from './cluster-detail/tools/tools-failed/tools-failed.component';\nimport { DashboardDashboardComponent } from './cluster-detail/dashboard/dashboard-dashboard/dashboard-dashboard.component';\nimport { NodeCreateComponent } from './cluster-detail/node/node-create/node-create.component';\nimport { NodeDeleteComponent } from './cluster-detail/node/node-delete/node-delete.component';\nimport { NodeStatusComponent } from './cluster-detail/node/node-status/node-status.component';\nimport { WebkubectlComponent } from './cluster-detail/overview/webkubectl/webkubectl.component';\n\n\n@NgModule({\n    declarations: [ClusterComponent, ClusterListComponent, ClusterCreateComponent, ClusterDeleteComponent, ClusterDetailComponent,\n        OverviewComponent, ClusterConditionComponent, NodeComponent, NamespaceComponent, NamespaceListComponent,\n        StorageComponent, PersistentVolumeComponent, PersistentVolumeClaimComponent, StorageClassComponent, PersistentVolumeListComponent,\n        NodeListComponent, NodeDetailComponent, PersistentVolumeClaimListComponent,\n        StorageClassListComponent, LoggingComponent, LoggingQueryComponent,\n        MonitorComponent, MonitorDashboardComponent,\n        ClusterImportComponent,\n        StorageClassCreateComponent,\n        PersistentVolumeCreateComponent,\n        PersistentVolumeCreateNfsComponent,\n        PersistentVolumeCreateHostPathComponent,\n        StorageProvisionerComponent,\n        StorageProvisionerListComponent,\n        StorageProvisionerCreateComponent,\n        StorageProvisionerCreateNfsComponent,\n        StorageProvisionerDeleteComponent,\n        ToolsComponent,\n        ToolsListComponent,\n        RepositoryComponent,\n        RegistryComponent,\n        ChartmuseumComponent,\n        ChartListComponent,\n        RegistryListComponent,\n        ToolsEnableComponent,\n        NotReadyComponent,\n        DashboardComponent,\n        ToolsFailedComponent,\n        DashboardDashboardComponent,\n        NodeCreateComponent,\n        NodeDeleteComponent,\n        NodeStatusComponent,\n        WebkubectlComponent],\n    imports: [\n        CoreModule,\n        RouterModule,\n        SharedModule,\n        NgCircleProgressModule,\n    ]\n})\nexport class ClusterModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Cluster, CLusterImportRequest, ClusterStatus, InitClusterResponse} from './cluster';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ClusterService extends BaseModelService<Cluster> {\n\n    baseUrl = '/api/v1/clusters';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    status(clusterName: string): Observable<ClusterStatus> {\n        return this.http.get<ClusterStatus>(`${this.baseUrl}/status/${clusterName}`);\n    }\n\n    init(clusterName: string): Observable<InitClusterResponse> {\n        return this.http.post<InitClusterResponse>(`${this.baseUrl}/init/${clusterName}/`, {});\n    }\n\n    import(item: CLusterImportRequest): Observable<any> {\n        return this.http.post<any>(`${this.baseUrl}/import/`, item);\n    }\n}\n","import {BaseModel} from '../../shared/class/BaseModel';\n\nexport class Cluster extends BaseModel {\n    name: string;\n    spec: Spec;\n    nodeSize: string;\n    status: string;\n    provider: string;\n}\n\nexport class Spec {\n    version: string;\n    networkType: string;\n}\n\nexport class ClusterStatus {\n    phase: string;\n    conditions: Condition[] = [];\n}\n\nexport class Condition {\n    status: string;\n    message: string;\n    name: string;\n}\n\nexport class CreateNodeRequest {\n    role: string;\n    hostName: string;\n}\n\n\nexport class ClusterCreateRequest extends BaseModel {\n    name: string;\n    version: string;\n    provider: string;\n    architectures: string;\n    networkType: string;\n    runtimeType: string;\n    dockerStorageDir: string;\n    containerdStorageDir: string;\n    flannelBackend: string;\n    calicoIpv4poolIpip: string;\n    kubePodSubnet: string;\n    kubeServiceSubnet: string;\n    kubeProxyMode: string;\n    kubeMaxPod: number;\n    certsExpired: number;\n    kubernetesAudit: boolean;\n    ingressControllerType: string;\n    plan: string;\n    nodes: CreateNodeRequest[] = [];\n    workerAmount: number;\n}\n\nexport class CLusterImportRequest {\n    name: string;\n    apiServer: string;\n    token: string;\n    router: string;\n}\n\nexport class InitClusterResponse {\n    message: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {V1NamespaceList} from '@kubernetes/client-node/dist/gen/model/v1NamespaceList';\nimport {Observable} from 'rxjs';\nimport {\n    NetworkingV1beta1IngressList,\n    V1beta1CronJobList,\n    V1beta1CSINodeList,\n    V1ConfigMapList,\n    V1CSINodeList,\n    V1DaemonSetList,\n    V1DeploymentList,\n    V1JobList,\n    V1NodeList,\n    V1PersistentVolume,\n    V1PersistentVolumeClaimList,\n    V1PersistentVolumeList,\n    V1PodList,\n    V1SecretList,\n    V1ServiceList,\n    V1StatefulSetList,\n    V1StorageClass,\n    V1StorageClassList\n} from '@kubernetes/client-node';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class KubernetesService {\n\n    proxyUrl = '/proxy/kubernetes/{cluster_name}/{resource_url}';\n    limit = 10;\n    continueTokenKey = 'continue';\n\n    constructor(private client: HttpClient) {\n    }\n\n    namespaceUrl = '/api/v1/namespaces';\n    serviceUrl = 'api/v1/services';\n    namespaceServiceUrl = 'api/v1/namespaces/{namespace}/services';\n    persistentVolumesUrl = '/api/v1/persistentvolumes';\n    storageClassUrl = '/apis/storage.k8s.io/v1/storageclasses';\n    persistentVolumeClaimsUrl = '/api/v1/persistentvolumeclaims';\n    namespacePersistentVolumeClaimsUrl = '/api/v1/namespaces/{namespace}/deployments';\n    deploymentUrl = 'apis/apps/v1/deployments';\n    namespaceDeploymentUrl = 'apis/apps/v1/namespaces/{namespace}/deployments';\n    daemonSetUrl = '/apis/apps/v1/daemonsets/';\n    statefulSetUrl = '/apis/apps/v1/statefulsets/';\n    namespaceStatefulSet = '/apis/apps/v1/namespaces/{namespace}/statefulsets/';\n    namespaceDaemonSetUrl = '/apis/apps/v1/namespaces/{namespace}/daemonsets/';\n    cornJobUrl = 'apis/batch/v1beta1/cronjobs';\n    namespaceCornJobUrl = 'apis/batch/v1beta1/namespaces/{namespace}/cronjobs';\n    jobUrl = '/apis/batch/v1/jobs';\n    namespaceJobUrl = '/apis/batch/v1/namespaces/{namespace}/jobs';\n    ingressUrl = '/apis/networking.k8s.io/v1beta1/ingresses';\n    namespaceIngressUrl = '/apis/networking.k8s.io/v1beta1/namespaces/{namespace}/ingresses';\n    configMapUrl = '/api/v1/configmaps';\n    namespaceConfigMapUrl = '/api/v1/namespaces/{namespace}/configmaps';\n    secretUrl = '/api/v1/secrets';\n    namespaceSecretUrl = '/api/v1/secrets';\n    podUrl = '/api/v1/pods';\n    namespacePodUrl = '/api/v1/namespaces/{namespace}/pods/';\n    nodesUrl = 'api/v1/nodes';\n    nodeStatsSummaryUrl = 'apis/metrics.k8s.io/v1beta1/nodes';\n\n    listNodesUsage(clusterName: string, continueToken?: string): Observable<any> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.nodeStatsSummaryUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<any>(url);\n    }\n\n\n    listNodes(clusterName: string, continueToken?: string): Observable<V1NodeList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.nodesUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1NodeList>(url);\n    }\n\n    listNamespaces(clusterName: string): Observable<V1NamespaceList> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.namespaceUrl);\n        return this.client.get<V1NamespaceList>(url);\n    }\n\n    createPersistentVolume(clusterName: string, item: V1PersistentVolume): Observable<V1PersistentVolume> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.persistentVolumesUrl);\n        return this.client.post<V1PersistentVolume>(url, item);\n    }\n\n    listPersistentVolumes(clusterName: string, continueToken?: string): Observable<V1PersistentVolumeList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.persistentVolumesUrl);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1PersistentVolumeList>(url);\n    }\n\n    listStorageClass(clusterName: string, continueToken?: string, all?: boolean): Observable<V1StorageClassList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.storageClassUrl);\n        if (!all) {\n            url += '?limit=' + this.limit;\n        }\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        return this.client.get<V1StorageClassList>(url);\n    }\n\n\n    createStorageClass(clusterName: string, item: V1StorageClass): Observable<V1StorageClass> {\n        const url = this.proxyUrl.replace('{cluster_name}', clusterName).replace('{resource_url}', this.storageClassUrl);\n        return this.client.post<V1StorageClass>(url, item);\n    }\n\n\n    listPersistentVolumeClaims(clusterName: string, continueToken?: string, namespace?: string): Observable<V1PersistentVolumeClaimList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespacePersistentVolumeClaimsUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.persistentVolumeClaimsUrl);\n        }\n        return this.client.get<V1PersistentVolumeClaimList>(url);\n    }\n\n    listDeployment(clusterName: string, continueToken?: string, namespace?: string): Observable<V1DeploymentList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceDeploymentUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.deploymentUrl);\n        }\n\n        return this.client.get<V1DeploymentList>(url);\n    }\n\n    listDaemonSet(clusterName: string, continueToken?: string, namespace?: string): Observable<V1DaemonSetList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceDaemonSetUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.daemonSetUrl);\n        }\n\n        return this.client.get<V1DaemonSetList>(url);\n    }\n\n    listStatefulSet(clusterName: string, continueToken?: string, namespace?: string): Observable<V1StatefulSetList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceStatefulSet).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.statefulSetUrl);\n        }\n\n        return this.client.get<V1StatefulSetList>(url);\n    }\n\n    listJob(clusterName: string, continueToken?: string, namespace?: string): Observable<V1JobList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceJobUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.jobUrl);\n        }\n        return this.client.get<V1JobList>(url);\n    }\n\n\n    listCornJob(clusterName: string, continueToken?: string, namespace?: string): Observable<V1beta1CronJobList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceCornJobUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.cornJobUrl);\n        }\n        return this.client.get<V1beta1CronJobList>(url);\n    }\n\n    listService(clusterName: string, continueToken?: string, namespace?: string): Observable<V1ServiceList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceServiceUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.serviceUrl);\n        }\n        return this.client.get<V1ServiceList>(url);\n    }\n\n    listIngress(clusterName: string, continueToken?: string, namespace?: string): Observable<NetworkingV1beta1IngressList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceIngressUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.ingressUrl);\n        }\n        return this.client.get<NetworkingV1beta1IngressList>(url);\n    }\n\n    listConfigMap(clusterName: string, continueToken?: string, namespace?: string): Observable<V1ConfigMapList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceConfigMapUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.configMapUrl);\n        }\n        return this.client.get<V1ConfigMapList>(url);\n    }\n\n    listSecret(clusterName: string, continueToken?: string, namespace?: string): Observable<V1SecretList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        url += '?limit=' + this.limit;\n        if (continueToken) {\n            url += '&continue=' + continueToken;\n        }\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespaceSecretUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.secretUrl);\n        }\n        return this.client.get<V1SecretList>(url);\n    }\n\n    listPod(clusterName: string, continueToken?: string, namespace?: string): Observable<V1PodList> {\n        let url = this.proxyUrl.replace('{cluster_name}', clusterName);\n        if (namespace) {\n            url = url.replace('{resource_url}', this.namespacePodUrl).replace('{namespace}', namespace);\n        } else {\n            url = url.replace('{resource_url}', this.podUrl);\n        }\n        return this.client.get<V1PodList>(url);\n    }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoggingService {\n\n    constructor() {\n    }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-deploy-plan',\n  templateUrl: './deploy-plan.component.html',\n  styleUrls: ['./deploy-plan.component.css']\n})\nexport class DeployPlanComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <h2> {{ 'APP_DEPLOY_PLAN' | translate }}</h2>\n</div>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"region\"\n               routerLinkActive=\"active\">{{ 'APP_REGION' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"zone\"\n               routerLinkActive=\"active\">{{ 'APP_ZONE' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"plan\"\n               routerLinkActive=\"active\">{{ 'APP_PLAN' | translate}}</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {RegionModule} from './region/region.module';\nimport {RouterModule} from '@angular/router';\nimport {DeployPlanComponent} from './deploy-plan.component';\nimport {CoreModule} from '../../core/core.module';\nimport {ZoneModule} from './zone/zone.module';\nimport {PlanModule} from './plan/plan.module';\n\n\n@NgModule({\n    declarations: [DeployPlanComponent],\n    imports: [\n        ZoneModule,\n        RegionModule,\n        RouterModule,\n        CoreModule,\n        PlanModule,\n    ]\n})\nexport class DeployPlanModule {\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan, PlanCreateRequest, PlanVmConfig, VmConfig} from '../plan';\nimport {PlanService} from '../plan.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {RegionService} from '../../region/region.service';\nimport {Region} from '../../region/region';\nimport {Zone} from '../../zone/zone';\nimport {NgForm} from '@angular/forms';\nimport {ClrWizard} from '@clr/angular';\nimport {ZoneService} from '../../zone/zone.service';\n\n@Component({\n    selector: 'app-plan-create',\n    templateUrl: './plan-create.component.html',\n    styleUrls: ['./plan-create.component.css']\n})\nexport class PlanCreateComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    regions: Region[] = [];\n    zones: Zone[] = [];\n    item: PlanCreateRequest = new PlanCreateRequest();\n    vmConfigs: PlanVmConfig[] = [];\n    regionName: string;\n    @Output() created = new EventEmitter();\n    @ViewChild('basicForm', {static: true}) basicForm: NgForm;\n    @ViewChild('planForm', {static: true}) planForm: NgForm;\n    @ViewChild('wizard') wizard: ClrWizard;\n\n\n    constructor(private planService: PlanService, private modalAlertService: ModalAlertService, private regionService: RegionService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService,\n                private zoneService: ZoneService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.regionService.list().subscribe(res => {\n            this.regions = res.items;\n        }, error => {\n\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.created.emit();\n        this.wizard.reset();\n        this.item = new PlanCreateRequest();\n        this.basicForm.resetForm(this.item);\n        this.planForm.resetForm(this.item);\n    }\n\n    onSubmit() {\n        if (this.item.deployTemplate === 'SINGLE') {\n            this.item.zones = [];\n            this.item.zones.push(this.item.zone);\n            this.onCancel();\n        }\n        this.planService.create(this.item).subscribe(res => {\n            this.onCancel();\n        });\n    }\n\n    onBasicFormCommit() {\n        this.listZones();\n        this.listVmConfigs();\n    }\n\n    onRegionChange() {\n        this.regions.forEach(region => {\n            if (region.id === this.item.regionId) {\n                this.regionName = region.name;\n            }\n        });\n    }\n\n    onDeployChange() {\n\n    }\n\n    listVmConfigs() {\n        this.planService.listVmConfigs(this.regionName).subscribe(res => {\n            this.vmConfigs = res;\n        });\n    }\n\n    listZones() {\n        this.zoneService.listByRegionId(this.item.regionId).subscribe(res => {\n            this.zones = res;\n        });\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_PLAN_ADD'|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\"\n                     (clrWizardPageOnCommit)=\"onBasicFormCommit()\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #basicForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 type=\"text\" maxlength=\"15\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_REGION'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.regionId\" name=\"provider\" (change)=\"onRegionChange()\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let re of regions\" [value]=\"re.id\">{{re.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_TEMPLATE'|translate}}</label>\n                <select [(ngModel)]=\"item.deployTemplate\" name=\"template\" (change)=\"onDeployChange()\" required\n                        clrSelect>\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option value=\"SINGLE\">{{'APP_PLAN_DEPLOY_TEMPLATE_SINGLE'|translate}}</option>\n                    <option value=\"MULTIPLE\">{{'APP_PLAN_DEPLOY_TEMPLATE_MULTIPLE'|translate}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <!--&lt;!&ndash;            <clr-select-container>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <label>项目</label>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <select clrSelect [(ngModel)]=\"item.item_id\" name=\"item\" multiple>&ndash;&gt;-->\n            <!--&lt;!&ndash;                    <option [value]=\"\" disabled>请选择</option>&ndash;&gt;-->\n            <!--&lt;!&ndash;                    <option *ngFor=\"let item of items\" [value]=\"item.id\">{{item.name}}</option>&ndash;&gt;-->\n            <!--&lt;!&ndash;                </select>&ndash;&gt;-->\n            <!--&lt;!&ndash;                <clr-control-helper>部署计划需要授权到项目才可用（非必填）</clr-control-helper>&ndash;&gt;-->\n            <!--&lt;!&ndash;            </clr-select-container>&ndash;&gt;-->\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"planForm.invalid\" (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_PLAN_DEPLOY_CONFIG'|translate}}</ng-template>\n        <form clrForm #planForm=\"ngForm\">\n            <clr-select-container *ngIf=\"item.deployTemplate === 'SINGLE'\">\n                <label>{{'APP_ZONE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.zone\" name=\"cloud-region\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let zone of zones\" [value]=\"zone.id\">{{zone.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n\n            <clr-select-container *ngIf=\"item.deployTemplate === 'MULTIPLE'\">\n                <label>{{'APP_ZONE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.zones\" name=\"cloud-region\" multiple required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let zone of zones\" [value]=\"zone.id\">{{zone.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_MASTER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.planVars['masterModel']\" name=\"master\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let model of vmConfigs\" [value]=\"model.name\">{{model.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n            <clr-select-container>\n                <label>{{'APP_PLAN_DEPLOY_WORKER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.planVars['workerModel']\" name=\"worker\" required>\n                    <option [value]=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let model of vmConfigs\" [value]=\"model.name\">{{model.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n        </form>\n        <div *ngIf=\"vmConfigs\">\n            <h3>{{'APP_PLAN_DEPLOY_CONFIG_REFERENCE'|translate}}</h3>\n            <table class=\"table\">\n                <thead>\n                <tr>\n                    <th>{{'APP_CONFIG'|translate}}</th>\n                    <th>{{'APP_CPU'|translate}}</th>\n                    <th>{{'APP_HOST_MEMORY_GB'|translate}}</th>\n                    <th>{{'APP_HOST_DISK'|translate}}</th>\n                </tr>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let model of vmConfigs\">\n                    <td>{{model.name}}</td>\n                    <td>{{model.config.cpu}}</td>\n                    <td>{{model.config.memory}}</td>\n                    <td>{{model.config.disk}}</td>\n                </tr>\n                </tbody>\n            </table>\n        </div>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {PlanService} from '../plan.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-plan-delete',\n    templateUrl: './plan-delete.component.html',\n    styleUrls: ['./plan-delete.component.css']\n})\nexport class PlanDeleteComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    items: Plan[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private planService: PlanService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.planService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_REGION_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {PlanService} from '../plan.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-plan-detail',\n    templateUrl: './plan-detail.component.html',\n    styleUrls: ['./plan-detail.component.css']\n})\nexport class PlanDetailComponent extends BaseModelComponent<Plan> implements OnInit {\n\n    opened = false;\n    item: Plan = new Plan();\n    @Output() detail = new EventEmitter();\n\n    constructor(private planService: PlanService,private translateService: TranslateService) {\n        super(planService)\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n\n    getDeployName(name: string) {\n        switch (name) {\n            case 'SINGLE':\n                return this.translateService.instant(\"APP_PLAN_DEPLOY_TEMPLATE_SINGLE\");\n            case 'MULTIPLE':\n                return this.translateService.instant(\"APP_PLAN_DEPLOY_TEMPLATE_MULTIPLE\");\n            default:\n                return 'None';\n        }\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_PLAN_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION'|translate}}:</b>\n                    {{item.region.name}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>\n                    <span *ngFor=\"let zone of item.zones\">{{zone.name}},</span>\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_PLAN_DEPLOY_TEMPLATE'|translate}}:</b>{{getDeployName(item.deployTemplate)}}</li>\n                <li><b style=\"margin-right: 16px\">Master {{'APP_PLAN_NODE_SPEC'|translate}}:</b>{{item.planVars['masterModel']}}</li>\n                <li><b style=\"margin-right: 16px\">Worker {{'APP_PLAN_NODE_SPEC'|translate}}:</b>{{item.planVars['workerModel']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Plan} from '../plan';\nimport {PlanService} from '../plan.service';\n\n@Component({\n    selector: 'app-plan-list',\n    templateUrl: './plan-list.component.html',\n    styleUrls: ['./plan-list.component.css']\n})\nexport class PlanListComponent extends BaseModelComponent<Plan> implements OnInit {\n\n\n    @Output() detailEvent = new EventEmitter<Plan>();\n\n\n    constructor(private planService: PlanService) {\n        super(planService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_PLAN\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PlanListComponent} from './plan-list/plan-list.component';\nimport {PlanCreateComponent} from './plan-create/plan-create.component';\nimport {PlanDeleteComponent} from './plan-delete/plan-delete.component';\nimport {PlanDetailComponent} from './plan-detail/plan-detail.component';\n\n@Component({\n    selector: 'app-plan',\n    templateUrl: './plan.component.html',\n    styleUrls: ['./plan.component.css']\n})\nexport class PlanComponent implements OnInit {\n\n    @ViewChild(PlanListComponent, {static: true})\n    list: PlanListComponent;\n\n    @ViewChild(PlanCreateComponent, {static: true})\n    create: PlanCreateComponent;\n\n    @ViewChild(PlanDeleteComponent, {static: true})\n    delete: PlanDeleteComponent;\n\n    @ViewChild(PlanDetailComponent, {static: true})\n    detail: PlanDetailComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_PLAN_PROMPT'|translate}}</p>\n<app-plan-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (detailEvent)=\"openDetail($event)\"></app-plan-list>\n<app-plan-create (created)=\"refresh()\"></app-plan-create>\n<app-plan-delete (deleted)=\"refresh()\"></app-plan-delete>\n<app-plan-detail (detail)=\"refresh()\"></app-plan-detail>","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PlanCreateComponent} from './plan-create/plan-create.component';\nimport {PlanDeleteComponent} from './plan-delete/plan-delete.component';\nimport {PlanListComponent} from './plan-list/plan-list.component';\nimport {PlanComponent} from './plan.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport { PlanDetailComponent } from './plan-detail/plan-detail.component';\n\n\n@NgModule({\n    declarations: [PlanCreateComponent, PlanDeleteComponent, PlanListComponent, PlanComponent, PlanDetailComponent],\n    exports: [\n        PlanListComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class PlanModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Plan} from './plan';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlanService extends BaseModelService<Plan> {\n\n    baseUrl = '/api/v1/plans';\n\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listVmConfigs(regionName:string): Observable<any> {\n        const itemUrl = `${this.baseUrl}/configs/`+regionName+'/';\n        return this.http.get<any>(itemUrl);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\nimport {Region} from '../region/region';\nimport {Zone} from '../zone/zone';\n\nexport class Plan extends BaseModel {\n    name: string;\n    zoneId: string;\n    deployTemplate: string;\n    vars: string;\n    regionId: string;\n    region: Region = new Region();\n    zones: Zone[] = [];\n    planVars: {} = {};\n}\n\nexport class PlanCreateRequest extends BaseRequest {\n    deployTemplate: string;\n    vars: string;\n    planVars: {} = {};\n    regionId: string;\n    zone: string;\n    zones: string [] = [];\n    region: string;\n}\n\nexport class PlanVmConfig {\n    name: string;\n    config: VmConfig;\n}\n\nexport class VmConfig {\n    cpu: number;\n    memory: number;\n    disk: number;\n}\n\n\n","import { Injectable } from '@angular/core';\nimport {BaseModelService} from \"../../../shared/class/BaseModelService\";\nimport {CloudProvider} from \"./cloud-provider\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CloudProviderService extends BaseModelService<CloudProvider>{\n\n  baseUrl = '/api/v1/cloud/providers/'\n\n  constructor(http: HttpClient) {\n    super(http);\n  }\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region, RegionCreateRequest} from '../region';\nimport {RegionService} from '../region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {NgForm} from '@angular/forms';\nimport {CloudProviderService} from '../cloud-provider.service';\nimport {CloudProvider} from '../cloud-provider';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ClrWizard, ClrWizardPage} from '@clr/angular';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-region-create',\n    templateUrl: './region-create.component.html',\n    styleUrls: ['./region-create.component.css']\n})\nexport class RegionCreateComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: RegionCreateRequest = new RegionCreateRequest();\n    cloudProviders: CloudProvider[] = [];\n    isParamsValid;\n    isParamsCheckGoing = false;\n    cloudRegions: [] = [];\n    @Output() created = new EventEmitter();\n    @ViewChild('regionForm', {static: true}) regionForm: NgForm;\n    @ViewChild('paramsForm', {static: true}) paramsForm: NgForm;\n    @ViewChild('dtFrom', {static: true}) dtFrom: NgForm;\n    @ViewChild('wizard') wizard: ClrWizard;\n    @ViewChild('finishPage') finishPage: ClrWizardPage;\n\n\n    constructor(private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService,\n                private commonAlertService: CommonAlertService, private cloudProviderService: CloudProviderService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.cloudProviderService.list().subscribe(res => {\n            this.cloudProviders = res.items;\n            this.opened = true;\n            this.item = new RegionCreateRequest();\n        }, error => {\n            this.modalAlertService.showAlert('', AlertLevels.ERROR);\n        });\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.item = new RegionCreateRequest();\n        this.isParamsValid = undefined;\n        this.isParamsCheckGoing = false;\n        this.paramsForm.resetForm(this.item);\n        this.regionForm.resetForm(this.item);\n        this.dtFrom.resetForm(this.item);\n    }\n\n    doFinish(): void {\n        this.wizard.forceFinish();\n    }\n\n    onCheckParams() {\n        if (this.isParamsCheckGoing) {\n            return;\n        }\n        this.isParamsValid = false;\n        this.isParamsCheckGoing = true;\n        this.item.regionVars['provider'] = this.item.provider;\n        this.regionService.listDatacenter(this.item).subscribe(data => {\n            this.isParamsValid = true;\n            this.isParamsCheckGoing = false;\n            this.cloudRegions = data.result;\n            this.paramsForm.valueChanges.subscribe(() => {\n                this.isParamsValid = undefined;\n            });\n        }, error => {\n            this.isParamsValid = false;\n            this.isParamsCheckGoing = false;\n        });\n    }\n\n\n    onSubmit() {\n        this.regionService.create(this.item).subscribe(res => {\n            this.opened = false;\n            this.created.emit();\n            this.doFinish();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_CREATE_REGION'|translate}}</clr-wizard-title>\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"regionForm.invalid\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #regionForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 type=\"text\" maxlength=\"15\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_PROVIDER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.provider\" name=\"provider\" required>\n                    <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let template of cloudProviders\" [value]=\"template.name\">{{template.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"paramsForm.invalid || !isParamsValid\">\n        <ng-template clrPageTitle>{{'APP_REGION_PARAM_CONFIG'|translate}}</ng-template>\n        <form clrForm #paramsForm='ngForm'>\n            <div *ngIf=\"item.provider === 'vSphere'\">\n                <clr-input-container>\n                    <label>{{'APP_REGION_VCENTER_HOST'|translate}}</label>\n                    <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.regionVars['host']\" name=\"vcHost\" required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_API'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_REGION_VCENTER_PORT'|translate}}</label>\n                    <input clrInput size=45 type=\"number\" [(ngModel)]=\"item.regionVars['port']\" name=\"vcPort\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_PORT_HELP'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_USERNAME'|translate}}</label>\n                    <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.regionVars['username']\" name=\"vcUsername\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_USER_HELP'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-password-container>\n                    <label>{{'APP_PASSWORD'|translate}}</label>\n                    <input clrPassword size=45 type=\"password\" [(ngModel)]=\"item.regionVars['password']\"\n                           name=\"vcPassword\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_REGION_VCENTER_PASSWORD_HELP'|translate}}</clr-control-helper>\n                </clr-password-container>\n                <button class=\"btn\" [disabled]=\"paramsForm.invalid || isParamsCheckGoing\" (click)=\"onCheckParams()\">\n                    <i *ngIf=\"isParamsCheckGoing\" class=\"fa fa-spinner fa-pulse\"></i>\n                    {{'APP_REGION_VCENTER_CHECK'|translate}}\n                </button>\n                <br>\n                <span *ngIf=\"isParamsValid&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #859900;\"> {{'APP_REGION_VCENTER_PARAM_VALID'|translate}}</span>\n                <span *ngIf=\"isParamsValid==false&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #e02200;\"> {{'APP_REGION_VCENTER_PARAM_INVALID'|translate}}</span>\n            </div>\n            <div *ngIf=\"item.provider === 'OpenStack'\">\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_ID'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['identity']\" name=\"identity\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_KEYSTONE'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_USERNAME'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['username']\" name=\"openstack_username\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_USERNAME'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-password-container>\n                    <label>{{'APP_PASSWORD'|translate}}</label>\n                    <input clrPassword type=\"text\" [(ngModel)]=\"item.regionVars['password']\" name=\"openstack_password\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_PASSWORD'|translate}}</clr-control-helper>\n                </clr-password-container>\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_PROJECT'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['projectId']\" name=\"projectId\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_PROJECT_HELPER'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_OPENSTACK_DOMAIN'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.regionVars['domainName']\" name=\"domainName\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                    <clr-control-helper>{{'APP_OPENSTACK_DOMAIN_HELPER'|translate}}</clr-control-helper>\n                </clr-input-container>\n                <button class=\"btn\" [disabled]=\"isParamsCheckGoing || paramsForm.invalid\" (click)=\"onCheckParams()\">\n                    <i *ngIf=\"isParamsCheckGoing\" class=\"fa fa-spinner fa-pulse\"></i>\n                    {{'APP_REGION_VCENTER_CHECK'|translate}}\n                </button>\n                <span *ngIf=\"isParamsValid&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #859900;\"> {{'APP_REGION_VCENTER_PARAM_VALID'|translate}}</span>\n                <span *ngIf=\"isParamsValid==false&&!isParamsCheckGoing&&paramsForm.valid\"\n                      style=\"color: #e02200;\"> {{'APP_REGION_VCENTER_PARAM_INVALID'|translate}}</span>\n            </div>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"dtFrom.invalid\" #finishPage (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</ng-template>\n        <form clrForm #dtFrom='ngForm'>\n            <clr-select-container>\n                <label>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.datacenter\" name=\"cloud-region\" required>\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option [value]=\"cRegion\" *ngFor=\"let cRegion of cloudRegions\">{{cRegion}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-region-delete',\n    templateUrl: './region-delete.component.html',\n    styleUrls: ['./region-delete.component.css']\n})\nexport class RegionDeleteComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    items: Region[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items: Region[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.regionService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n            this.opened = false;\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_REGION_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\n\n@Component({\n    selector: 'app-region-detail',\n    templateUrl: './region-detail.component.html',\n    styleUrls: ['./region-detail.component.css']\n})\nexport class RegionDetailComponent extends BaseModelComponent<Region> implements OnInit {\n\n    opened = false;\n    @Output() detail = new EventEmitter();\n    item: Region = new Region();\n\n    constructor(private regionService: RegionService) {\n        super(regionService)\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_REGION_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item && item.regionVars['provider'] === 'vSphere'\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_PROVIDER'|translate}}\n                    :</b>{{item.regionVars['provider']}}</li>\n                <!--                <li><b style=\"margin-right: 16px\">集群数量:</b>{{item.cluster_size}}</li>-->\n                <!--                <li><b style=\"margin-right: 16px\">可用区数量:</b>{{item.zone_size}}</li>-->\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VCENTER_DATACENTER'|translate}}:</b>\n                    {{item.datacenter}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VC_HOST'|translate}}:</b>{{item.regionVars['host']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VC_USER'|translate}}:</b>{{item.regionVars['username']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}\n                    :</b>{{item.createdAt |  date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-body\" *ngIf=\"item && item.regionVars['provider'] === 'OpenStack'\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_PROVIDER'|translate}}:</b>{{item.regionVars['provider']}}</li>\n<!--                <li><b style=\"margin-right: 16px\">集群数量:</b>{{currentRegion.cluster_size}}</li>-->\n<!--                <li><b style=\"margin-right: 16px\">可用区数量:</b>{{currentRegion.zone_size}}</li>-->\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION_VCENTER_DATACENTER'|translate}}:</b>{{item.datacenter}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_ID'|translate}}:</b>{{item.regionVars['identity']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_USERNAME'|translate}}:</b>{{item.regionVars['username']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_PROJECT'|translate}}:</b>{{item.regionVars['projectId']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_DOMAIN'|translate}}:</b>{{item.regionVars['domainName']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}:</b>{{item.createdAt |  date: 'yyyy-MM-dd HH:mm:ss'}}\n                </li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Region} from '../region';\nimport {RegionService} from '../region.service';\n\n@Component({\n    selector: 'app-region-list',\n    templateUrl: './region-list.component.html',\n    styleUrls: ['./region-list.component.css']\n})\nexport class RegionListComponent extends BaseModelComponent<Region> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Region>();\n\n    constructor(private regionService: RegionService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION_PROVIDER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION_VCENTER_DATACENTER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.regionVars['provider']}}</clr-dg-cell>\n        <clr-dg-cell>{{item.datacenter}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_REGION\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RegionListComponent} from './region-list/region-list.component';\nimport {RegionCreateComponent} from './region-create/region-create.component';\nimport {RegionDeleteComponent} from './region-delete/region-delete.component';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Region} from './region';\nimport {RegionService} from './region.service';\nimport {RegionDetailComponent} from './region-detail/region-detail.component';\n\n@Component({\n    selector: 'app-region',\n    templateUrl: './region.component.html',\n    styleUrls: ['./region.component.css']\n})\nexport class RegionComponent extends BaseModelComponent<Region> implements OnInit {\n\n    @ViewChild(RegionListComponent, {static: true})\n    list: RegionListComponent;\n\n    @ViewChild(RegionCreateComponent, {static: true})\n    create: RegionCreateComponent;\n\n    @ViewChild(RegionDeleteComponent, {static: true})\n    delete: RegionDeleteComponent;\n\n    @ViewChild(RegionDetailComponent, {static: true})\n    detail: RegionDetailComponent;\n\n    constructor(private regionService: RegionService) {\n        super(regionService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_REGION_PROMPT'|translate}}</p>\n<app-region-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (detailEvent)=\"openDetail($event)\"></app-region-list>\n<app-region-create (created)=\"refresh()\"></app-region-create>\n<app-region-delete (deleted)=\"refresh()\"></app-region-delete>\n<app-region-detail (detail)=\"refresh()\"></app-region-detail>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RegionComponent} from './region.component';\nimport {RegionCreateComponent} from './region-create/region-create.component';\nimport {RegionListComponent} from './region-list/region-list.component';\nimport {RegionDeleteComponent} from './region-delete/region-delete.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport { RegionDetailComponent } from './region-detail/region-detail.component';\n\n\n@NgModule({\n    declarations: [RegionComponent, RegionCreateComponent, RegionListComponent, RegionDeleteComponent, RegionDetailComponent],\n    exports: [\n        RegionListComponent\n    ],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class RegionModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {Region, RegionCreateRequest} from './region';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RegionService extends BaseModelService<Region> {\n\n    baseUrl = '/api/v1/regions';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listDatacenter(item: RegionCreateRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/datacenter/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class Region extends BaseModel {\n    id: string;\n    name: string;\n    vars: string;\n    datacenter: string;\n    regionVars: {} = {};\n}\n\nexport class RegionCreateRequest extends BaseRequest {\n    id: string;\n    regionVars: {} = {};\n    provider: string;\n    datacenter: string;\n    vars: string;\n}\n\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {CloudTemplate, CloudZone, CloudZoneRequest, Subnet, Zone, ZoneCreateRequest} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {RegionService} from '../../region/region.service';\nimport {Region, RegionCreateRequest} from '../../region/region';\nimport {ClrWizard, ClrWizardPage} from '@clr/angular';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport * as ipaddr from 'ipaddr.js';\nimport {CredentialService} from '../../../setting/credential/credential.service';\nimport {Credential} from '../../../setting/credential/credential';\nimport {NgForm} from '@angular/forms';\n\n\n@Component({\n    selector: 'app-zone-create',\n    templateUrl: './zone-create.component.html',\n    styleUrls: ['./zone-create.component.css']\n})\nexport class ZoneCreateComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: ZoneCreateRequest = new ZoneCreateRequest();\n    cloudZoneRequest: CloudZoneRequest = new CloudZoneRequest();\n    regions: Region[] = [];\n    cloudZones: CloudZone[] = [];\n    cloudTemplates: CloudTemplate[] = [];\n    region: Region = new Region();\n    cloudZone: CloudZone;\n    templateLoading = false;\n    networkError = [];\n    networkValid = false;\n    subnetList: Subnet[] = [];\n    credentials: Credential[] = [];\n    @Output() created = new EventEmitter();\n    @ViewChild('wizard') wizard: ClrWizard;\n    @ViewChild('finishPage') finishPage: ClrWizardPage;\n    @ViewChild('basicForm', {static: true}) basicForm: NgForm;\n    @ViewChild('paramsForm', {static: true}) paramsForm: NgForm;\n\n\n    constructor(private zoneService: ZoneService, private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService,\n                private credentialService: CredentialService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    open() {\n        this.item = new ZoneCreateRequest();\n        this.opened = true;\n        this.listRegions();\n        this.listCredentials();\n        this.item.cloudVars['templateType'] = 'default';\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.resetWizard();\n    }\n\n    resetWizard(): void {\n        this.wizard.reset();\n        this.item = new ZoneCreateRequest();\n        this.basicForm.resetForm(this.item);\n        this.paramsForm.resetForm(this.item);\n    }\n\n    doFinish(): void {\n        this.wizard.forceFinish();\n    }\n\n    onSubmit(): void {\n        this.zoneService.create(this.item).subscribe(res => {\n            this.doFinish();\n            this.onCancel();\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n\n    changeRegion() {\n        this.regions.forEach(region => {\n            if (region.name === this.item.regionName) {\n                this.region = region;\n                this.region.regionVars = JSON.parse(this.region.vars);\n                this.cloudZoneRequest.cloudVars = JSON.parse(this.region.vars);\n                this.cloudZoneRequest.cloudVars['datacenter'] = this.region.datacenter;\n                this.item.regionID = region.id;\n            }\n        });\n    }\n\n    changeCloudZone() {\n        this.cloudZones.forEach(cloudZone => {\n            if (cloudZone.cluster === this.item.cloudVars['cluster']) {\n                this.cloudZone = cloudZone;\n            }\n        });\n    }\n\n\n    changeNetwork() {\n        this.cloudZone.networkList.forEach(network => {\n            if (network.id === this.item.cloudVars['network']) {\n                this.subnetList = network.subnetList;\n            }\n        });\n    }\n\n    listCredentials() {\n        this.credentialService.list().subscribe(res => {\n            this.credentials = res.items;\n        });\n    }\n\n    listRegions() {\n        this.regionService.list().subscribe(res => {\n            this.regions = res.items;\n        }, error => {\n\n        });\n    }\n\n    listTemplates() {\n        this.templateLoading = true;\n        this.zoneService.listTemplates(this.cloudZoneRequest).subscribe(res => {\n            this.cloudTemplates = res.result;\n            this.templateLoading = false;\n        }, error => {\n            this.templateLoading = false;\n        });\n    }\n\n    listClusters() {\n        this.loading = true;\n        this.zoneService.listClusters(this.cloudZoneRequest).subscribe(res => {\n            this.cloudZones = res.result;\n            this.loading = false;\n        });\n    }\n\n    checkNetwork() {\n        this.networkError = [];\n        let result = true;\n\n        const cidr = this.item.cloudVars['networkCidr'].split('/', 2);\n        if (cidr.length !== 2) {\n            result = false;\n            this.networkValid = result;\n            this.networkError.push(this.translateService.instant('APP_IP_INVALID'));\n            return;\n        }\n        const address = cidr[0];\n        if (!ipaddr.isValid(address)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_INVALID'));\n        }\n        const netmask = Number(cidr[1]);\n        if (netmask < 0 || netmask > 32) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_NETMASK_INVALID'));\n        }\n\n        if (this.region.vars['provider'] === 'vSphere') {\n            const gateway = this.item.cloudVars['gateway'];\n            if (!ipaddr.isValid(gateway)) {\n                result = false;\n                this.networkError.push(this.translateService.instant('APP_GATEWAY_INVALID'));\n            }\n        }\n        this.networkValid = result;\n    }\n\n}\n","<clr-wizard #wizard [(clrWizardOpen)]=\"opened\" [clrWizardClosable]=\"false\" (clrWizardOnCancel)=\"onCancel()\">\n    <clr-wizard-title>{{'APP_ZONE_CREATE'|translate}}</clr-wizard-title>\n\n    <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'next'\">{{'APP_NEXT'|translate}}</clr-wizard-button>\n    <clr-wizard-button [type]=\"'finish'\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"basicForm.invalid\" (clrWizardPageOnCommit)=\"listClusters()\">\n        <ng-template clrPageTitle>{{'APP_BASIC_INFORMATION'|translate}}</ng-template>\n        <form clrForm #basicForm=\"ngForm\">\n            <clr-input-container>\n                <label>{{'APP_NAME'|translate}}</label>\n                <input clrInput size=45 maxlength=\"15\" type=\"text\" [(ngModel)]=\"item.name\"\n                       name=\"name\" required>\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.required\">此字段为必填项</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.errors.repeat\">名称重复</clr-control-error>-->\n                <!--                <clr-control-error *ngIf=\"nameCtrl&&nameCtrl.errors&&nameCtrl.invalid\">{{name_pattern_tip}}</clr-control-error>-->\n                <!--                <clr-control-helper>{{name_pattern_tip}}</clr-control-helper>-->\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{'APP_REGION'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.regionName\" name=\"provider\" required (ngModelChange)=\"changeRegion()\">\n                    <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                    <option *ngFor=\"let region of regions\" [value]=\"region.name\">{{region.name}}</option>\n                </select>\n                <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n            </clr-select-container>\n        </form>\n    </clr-wizard-page>\n    <clr-wizard-page [clrWizardPageNextDisabled]=\"paramsForm.invalid\" #finishPage\n                     (clrWizardPageCustomButton)=\"onSubmit()\">\n        <ng-template clrPageTitle>{{'APP_REGION_PARAM_CONFIG'|translate}}</ng-template>\n        <clr-spinner *ngIf=\"loading\">loading</clr-spinner>\n        <form clrForm #paramsForm=\"ngForm\">\n            <div *ngIf=\"cloudZones.length>0\">\n\n                <div *ngIf=\"region.regionVars['provider'] === 'vSphere'\">\n                    <h3>{{'APP_COPMUTE'|translate}}</h3>\n                    <hr/>\n                    <clr-select-container>\n                        <label>{{'APP_CLUSTER'|translate}}</label>\n                        <select [(ngModel)]=\"item.cloudVars['cluster']\" name=\"compute\"\n                                (ngModelChange)=\"changeCloudZone()\" required clrSelect>\n                            <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                            <option *ngFor=\"let zone of cloudZones\" [value]=\"zone.cluster\">{{zone.cluster}}</option>\n                        </select>\n                        <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                        <clr-control-helper>{{'APP_RESOURCE_POOL_HELPER'|translate}}</clr-control-helper>\n                    </clr-select-container>\n                    <div *ngIf=\"cloudZone\">\n                        <clr-select-container>\n                            <label>{{'APP_RESOURCE_POOL'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['resourcePool']\" name=\"resourcePool\" required clrSelect>\n                                <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let rp of cloudZone.resourcePools\" [value]='rp'>{{rp}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_RESOURCE_POOL_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                    </div>\n                    <div *ngIf=\"item.cloudVars['resourcePool']\">\n                        <h3>{{'APP_DATASTORE'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_DATASTORE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['datastore']\" name=\"datastore\" required clrSelect>\n                                <option value=\"\">{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let datastore of cloudZone.datastores\"\n                                        [value]=\"datastore\">{{datastore}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_DATASTORE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                    </div>\n                    <div *ngIf=\"item.cloudVars['datastore']\">\n                        <h3>{{'APP_TEMPLATE'|translate}}</h3>\n                        <hr/>\n                        <clr-radio-container clrInline>\n                            <label>{{'APP_TEMPLATE_TYPE'|translate}}</label>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"default\"\n                                       checked=\"checked\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"/>\n                                <label>{{'APP_DEFAULT'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"customize\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"\n                                       (ngModelChange)=\"listTemplates()\"/>\n                                <label>{{'APP_CUSTOMIZE'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-control-helper >\n                                <span *ngIf=\"item.cloudVars['templateType'] === 'customize'\"> {{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</span>\n                                <span *ngIf=\"item.cloudVars['templateType'] === 'default'\">{{'APP_TEMPLATE_DEFAULT_HELPER'|translate}}</span>\n                            </clr-control-helper>\n                        </clr-radio-container>\n                        <div *ngIf=\"item.cloudVars['templateType'] === 'customize'\">\n                            <clr-spinner *ngIf=\"templateLoading\">loading</clr-spinner>\n                            <div *ngIf=\"!templateLoading\">\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE'|translate}}</label>\n                                    <select [(ngModel)]=\"item.cloudVars['imageName']\" name=\"template\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let temp of cloudTemplates\"\n                                                [value]=temp.imageName>{{temp.imageName}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                </clr-select-container>\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE_PASSWORD'|translate}}</label>\n                                    <select [(ngModel)]=\"item.credentialId\" name=\"credential\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let credential of credentials\"\n                                                [value]=credential.id>{{credential.name}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                    <clr-control-helper>{{'APP_TEMPLATE_PASSWORD_HELPER'|translate}}</clr-control-helper>\n                                </clr-select-container>\n                            </div>\n                        </div>\n\n                        <h3>{{'APP_NETWORK'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_NETWORK_ADAPTER'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['network']\" name=\"network\" required clrSelect>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.networks\"\n                                        [value]=\"network\">{{network}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_CIDR'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['networkCidr']\" name=\"networkCidr\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_CIDR_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_GATEWAY'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['gateway']\" name=\"gateway\"\n                                   required>\n                        </clr-input-container>\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_DNS1'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['dns1']\" name=\"dns1\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_DNS_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_DNS2'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['dns2']\" name=\"dns2\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_DNS_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                    </div>\n                </div>\n\n                <div *ngIf=\"region.regionVars['provider'] === 'OpenStack'\">\n                    <h3>{{'APP_COPMUTE'|translate}}</h3>\n                    <hr/>\n                    <clr-select-container>\n                        <label>{{'APP_ZONE'|translate}}</label>\n                        <select [(ngModel)]=\"item.cloudVars['cluster']\" name=\"compute\"\n                                (ngModelChange)=\"changeCloudZone()\"\n                                clrSelect required>\n                            <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                            <option *ngFor=\"let zone of cloudZones\"\n                                    [value]=\"zone.cluster\">{{zone.cluster}}</option>\n                        </select>\n                        <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                        <clr-control-helper>{{'APP_OPENSTACK_ZONE_HELPER'|translate}}</clr-control-helper>\n                    </clr-select-container>\n                    <div *ngIf=\"cloudZone\">\n                        <h3>{{'APP_DATASTORE'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_STORAGE_TYPE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['storageType']\" name=\"storage\"\n                                    clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let storage of cloudZone.storages\"\n                                        [value]=\"storage.id\">{{storage.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_STORAGE_TYPE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <h3>{{'APP_TEMPLATE'|translate}}</h3>\n                        <hr/>\n                        <clr-radio-container clrInline>\n                            <label>{{'APP_TEMPLATE_TYPE'|translate}}</label>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"default\"\n                                       checked=\"checked\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"/>\n                                <label>{{'APP_DEFAULT'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-radio-wrapper>\n                                <input type=\"radio\" clrRadio name=\"templateType\" required value=\"customize\"\n                                       [(ngModel)]=\"item.cloudVars['templateType']\"\n                                       (ngModelChange)=\"listTemplates()\"/>\n                                <label>{{'APP_CUSTOMIZE'|translate}}</label>\n                            </clr-radio-wrapper>\n                            <clr-control-helper\n                                    *ngIf=\"item.cloudVars['templateType'] === 'customize'\">{{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</clr-control-helper>\n                            <clr-control-helper\n                                    *ngIf=\"item.cloudVars['templateType'] === 'default'\">{{'APP_TEMPLATE_CUSTOMIZE_HELPER'|translate}}</clr-control-helper>\n                        </clr-radio-container>\n                        <div *ngIf=\"item.cloudVars['templateType'] === 'customize'\">\n                            <clr-spinner *ngIf=\"templateLoading\">loading</clr-spinner>\n                            <div *ngIf=\"!templateLoading\">\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE'|translate}}</label>\n                                    <select [(ngModel)]=\"item.cloudVars['imageName']\" name=\"template\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let temp of cloudTemplates\"\n                                                [value]=temp.imageName>{{temp.imageName}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                </clr-select-container>\n\n                                <clr-select-container>\n                                    <label>{{'APP_TEMPLATE_PASSWORD'|translate}}</label>\n                                    <select [(ngModel)]=\"item.credentialId\" name=\"credential\" required clrSelect>\n                                        <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                        <option *ngFor=\"let credential of credentials\"\n                                                [value]=credential.id>{{credential.name}}</option>\n                                    </select>\n                                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                                    <clr-control-helper>{{'APP_TEMPLATE_PASSWORD_HELPER'|translate}}</clr-control-helper>\n                                </clr-select-container>\n                            </div>\n                        </div>\n\n                        <h3>{{'APP_NETWORK'|translate}}</h3>\n                        <hr/>\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_SECURITY_GROUP'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['securityGroup']\" name=\"sg\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let sg of cloudZone.securityGroups\" [value]=\"sg\">{{sg}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_SECURITY_GROUP_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n                        <clr-select-container>\n                            <label>{{'APP_NETWORK'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['network']\" name=\"network\" clrSelect\n                                    (ngModelChange)=\"changeNetwork()\"\n                                    required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.networkList\"\n                                        [value]=\"network.id\">{{network.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_NETWORK_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container>\n                            <label>{{'APP_OPENSTACK_IPTYPE'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['ipType']\" name=\"ip_type\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let type of cloudZone.ipTypes\" [value]=\"type\">{{type}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_IPTYPE_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container *ngIf=\"item.cloudVars['ipType'] === 'private'\">\n                            <label>{{'APP_OPENSTACK_SUBNET'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['subnet']\" name=\"subnet\" clrSelect required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let subnet of subnetList\" [value]=\"subnet.id\">{{subnet.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_SUBNET_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-select-container *ngIf=\"item.cloudVars['ipType'] === 'floating'\">\n                            <label>{{'APP_OPENSTACK_FLOATING_IP'|translate}}</label>\n                            <select [(ngModel)]=\"item.cloudVars['floatingNetwork']\" name=\"floatingNetwork\" clrSelect\n                                    required>\n                                <option value=''>{{'APP_DEFAULT_OPTION'|translate}}</option>\n                                <option *ngFor=\"let network of cloudZone.floatingNetworkList\"\n                                        [value]=\"network.name\">{{network.name}}</option>\n                            </select>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_OPENSTACK_FLOATING_IP_HELPER'|translate}}</clr-control-helper>\n                        </clr-select-container>\n\n                        <clr-input-container>\n                            <label>{{'APP_NETWORK_CIDR'|translate}}</label>\n                            <input clrInput size=45 type=\"text\" [(ngModel)]=\"item.cloudVars['networkCidr']\" name=\"networkCidr\"\n                                   required>\n                            <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                            <clr-control-helper>{{'APP_NETWORK_CIDR_HELPER'|translate}}</clr-control-helper>\n                        </clr-input-container>\n                    </div>\n                </div>\n            </div>\n        </form>\n        <ng-template clrPageButtons>\n            <clr-wizard-button [type]=\"'cancel'\">{{'APP_CANCEL'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'previous'\">{{'APP_BACK'|translate}}</clr-wizard-button>\n            <clr-wizard-button [type]=\"'custom-finish'\"\n                               [clrWizardButtonDisabled]=\"!networkValid\">{{'APP_FINISH'|translate}}</clr-wizard-button>\n        </ng-template>\n        <div>\n            <div>\n                <button class=\"btn\" (click)=\"checkNetwork()\"\n                        [disabled]=\"paramsForm.invalid\">{{'APP_IP_CHECK'|translate}}</button>\n            </div>\n            <ul>\n                <li *ngFor=\"let error of networkError\">{{error}}</li>\n            </ul>\n        </div>\n    </clr-wizard-page>\n</clr-wizard>\n\n\n\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ZoneService} from '../zone.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-zone-delete',\n    templateUrl: './zone-delete.component.html',\n    styleUrls: ['./zone-delete.component.css']\n})\nexport class ZoneDeleteComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    @Output() deleted = new EventEmitter();\n\n    constructor(private zoneService: ZoneService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(items: Zone[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n\n    onSubmit() {\n        this.zoneService.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.opened = false;\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_ZONE_DELETE\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ZoneService} from '../zone.service';\n\n@Component({\n    selector: 'app-zone-detail',\n    templateUrl: './zone-detail.component.html',\n    styleUrls: ['./zone-detail.component.css']\n})\nexport class ZoneDetailComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: Zone = new Zone()\n\n    @Output() detail = new EventEmitter()\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService)\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(item) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    cancel() {\n        this.opened = false;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\" [clrModalClosable]=false>\n    <h3 class=\"modal-title\">{{'APP_ZONE_DETAIL'|translate}}</h3>\n    <div class=\"modal-body\" *ngIf=\"item\">\n        <hr/>\n        <div class=\"card-block\">\n            <ul class=\"list-unstyled\" *ngIf=\"item.region.regionVars['provider'] === 'vSphere'\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>{{item.region.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_RESOURCE_POOL'|translate}}\n                    :</b>{{item.cloudVars['resourcePool']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CLUSTER'|translate}}:</b>{{item.cloudVars['cluster']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_DATASTORE'|translate}}:</b>{{item.cloudVars['datastore']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK'|translate}}:</b>{{item.cloudVars['network']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_CIDR'|translate}}:</b>{{item.cloudVars['networkCidr']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_GATEWAY'|translate}}:</b>{{item.cloudVars['gateway']}}\n                </li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_DNS1'|translate}}:</b>{{item.cloudVars['dns1']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_DNS2'|translate}}:</b>{{item.cloudVars['dns2']}}</li>\n                <li *ngIf=\"item.cloudVars['templateType'] === 'customize'\"><b\n                        style=\"margin-right: 16px\">{{'APP_TEMPLATE'|translate}}:</b>{{item.cloudVars['imageName']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}\n                    :</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n            <ul class=\"list-unstyled\" *ngIf=\"item.region.regionVars['provider'] === 'OpenStack'\">\n                <li><b style=\"margin-right: 16px\">{{'APP_NAME'|translate}}:</b>{{item.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_REGION'|translate}}:</b>{{item.region.name}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_ZONE'|translate}}:</b>{{item.cloudVars['cluster']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_STORAGE_TYPE'|translate}}:</b>{{item.cloudVars['storageType']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK'|translate}}:</b>{{item.cloudVars['network']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_NETWORK_CIDR'|translate}}:</b>{{item.cloudVars['networkCidr']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_OPENSTACK_SECURITY_GROUP'|translate}}:</b>{{item.cloudVars['securityGroup']}}</li>\n                <li><b style=\"margin-right: 16px\">{{'APP_CREATED_DATE'|translate}}:</b>{{item.createdAt | date: 'yyyy-MM-dd HH:mm:ss'}}</li>\n            </ul>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{'APP_CANCEL'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {Region} from '../../region/region';\n\n@Component({\n    selector: 'app-zone-list',\n    templateUrl: './zone-list.component.html',\n    styleUrls: ['./zone-list.component.css']\n})\nexport class ZoneListComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Region>();\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onDetail(item) {\n        this.detailEvent.emit(item);\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_REGION'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_STATUS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.region.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status | zoneStatus}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_REGION\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Zone, ZoneUpdateRequest} from '../zone';\nimport {ZoneService} from '../zone.service';\nimport {RegionService} from '../../region/region.service';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport * as ipaddr from 'ipaddr.js';\n\n\n@Component({\n    selector: 'app-zone-update',\n    templateUrl: './zone-update.component.html',\n    styleUrls: ['./zone-update.component.css']\n})\nexport class ZoneUpdateComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    opened = false;\n    item: ZoneUpdateRequest = new ZoneUpdateRequest()\n    networkError = [];\n    @Output() updated = new EventEmitter()\n\n    constructor(private zoneService: ZoneService, private regionService: RegionService, private modalAlertService: ModalAlertService,\n                private translateService: TranslateService, private commonAlertService: CommonAlertService) {\n        super(zoneService)\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.item = item;\n        this.item.cloudVars =  JSON.parse(item.vars);\n        this.opened = true;\n    }\n\n    checkIp() {\n        this.networkError = [];\n        let result = true;\n        const ipStart = this.item.cloudVars['ipStart'];\n        const ipEnd = this.item.cloudVars['ipEnd'];\n        if (!ipaddr.isValid(ipStart)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_START_INVALID'));\n        }\n        if (!ipaddr.isValid(ipEnd)) {\n            result = false;\n            this.networkError.push(this.translateService.instant('APP_IP_END_INVALID'));\n        }\n        if (ipaddr.isValid(ipStart) && ipaddr.isValid(ipEnd)) {\n            const start = ipaddr.parse(ipStart).toByteArray();\n            const end = ipaddr.parse(ipEnd).toByteArray();\n            for (let i = 0; i < 4; i++) {\n                if (start[i] > end[i]) {\n                    result = false;\n                    this.networkError.push(this.translateService.instant('APP_IP_START_MUST'));\n                    break;\n                }\n            }\n        }\n        return result\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onConfirm() {\n        this.zoneService.update(this.item.name,this.item).subscribe(res => {\n            this.onCancel();\n        }, error => {\n\n        })\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=false>:\n    <h3 class=\"modal-title\">{{'APP_ZONE_EDIT'|translate}}</h3>\n    <div class=\"modal-body\">\n        <div *ngIf=\"item\">\n            <form clrForm #editForm='ngForm'>\n                <clr-input-container>\n                    <label>{{'APP_NETWORK_START_IP'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.cloudVars['ipStart']\" name=\"ip_start\" (change)=\"checkIp()\"\n                           required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                </clr-input-container>\n                <clr-input-container>\n                    <label>{{'APP_NETWORK_END_IP'|translate}}</label>\n                    <input clrInput type=\"text\" [(ngModel)]=\"item.cloudVars['ipEnd']\" name=\"ip_end\" (change)=\"checkIp()\" required>\n                    <clr-control-error>{{'APP_REQUIRED_ERROR'|translate}}</clr-control-error>\n                </clr-input-container>\n                <ul>\n                    <li *ngFor=\"let error of networkError\">{{error}}</li>\n                </ul>\n            </form>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"onConfirm()\"\n                        [disabled]=\"editForm.invalid || networkError.length!==0\">\n                    {{'APP_COMMIT'|translate}}\n                </button>\n            </div>\n        </div>\n    </div>\n\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Zone} from './zone';\nimport {ZoneService} from './zone.service';\nimport {ZoneListComponent} from './zone-list/zone-list.component';\nimport {ZoneUpdateComponent} from './zone-update/zone-update.component';\nimport {ZoneDeleteComponent} from './zone-delete/zone-delete.component';\nimport {ZoneCreateComponent} from './zone-create/zone-create.component';\nimport {ZoneDetailComponent} from './zone-detail/zone-detail.component';\n\n@Component({\n    selector: 'app-zone',\n    templateUrl: './zone.component.html',\n    styleUrls: ['./zone.component.css']\n})\nexport class ZoneComponent extends BaseModelComponent<Zone> implements OnInit {\n\n    @ViewChild(ZoneListComponent, {static: true})\n    list: ZoneListComponent;\n\n    @ViewChild(ZoneUpdateComponent, {static: true})\n    update: ZoneUpdateComponent;\n\n    @ViewChild(ZoneDeleteComponent, {static: true})\n    delete: ZoneDeleteComponent;\n\n    @ViewChild(ZoneCreateComponent, {static: true})\n    create: ZoneCreateComponent;\n\n    @ViewChild(ZoneDetailComponent, {static: true})\n    detail: ZoneDetailComponent;\n\n    constructor(private zoneService: ZoneService) {\n        super(zoneService);\n    }\n\n    ngOnInit(): void {\n\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n\n    openUpdate(item) {\n        this.update.open(item);\n    }\n}\n","<p class=\"p7 prompt\">{{'APP_ZONE_PROMPT'|translate}}</p>\n<app-zone-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n               (detailEvent)=\"openDetail($event)\" (updateEvent)=\"openUpdate($event)\"></app-zone-list>\n<app-zone-create (created)=\"refresh()\"></app-zone-create>\n<app-zone-delete (deleted)=\"refresh()\"></app-zone-delete>\n<app-zone-detail (detail)=\"refresh()\"></app-zone-detail>\n<app-zone-update (updated)=\"refresh()\"></app-zone-update>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ZoneCreateComponent} from './zone-create/zone-create.component';\nimport {ZoneDeleteComponent} from './zone-delete/zone-delete.component';\nimport {ZoneUpdateComponent} from './zone-update/zone-update.component';\nimport {ZoneListComponent} from './zone-list/zone-list.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {SharedModule} from '../../../shared/shared.module';\nimport {ZoneComponent} from './zone.component';\nimport { ZoneDetailComponent } from './zone-detail/zone-detail.component';\n\n\n@NgModule({\n    declarations: [ZoneComponent, ZoneCreateComponent, ZoneDeleteComponent, ZoneUpdateComponent, ZoneListComponent, ZoneDetailComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class ZoneModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {CloudZoneRequest, Zone} from './zone';\nimport {Observable} from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ZoneService extends BaseModelService<Zone> {\n\n    baseUrl = '/api/v1/zones';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    listClusters(item: CloudZoneRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/clusters/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n\n    listTemplates(item: CloudZoneRequest): Observable<any> {\n        const itemUrl = `${this.baseUrl}/templates/`;\n        return this.http.post<any>(itemUrl, item);\n    }\n\n    listByRegionId(regionId: string): Observable<any> {\n        const itemUrl = `${this.baseUrl}/list/` + regionId + '/';\n        return this.http.get<any>(itemUrl);\n    }\n\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\nimport {Region} from '../region/region';\n\nexport class Zone extends BaseModel {\n    id: string;\n    name: string;\n    vars: string;\n    credentialId: string;\n    cloudVars: {} = {};\n    region: Region = new Region();\n    status: string;\n}\n\nexport class ZoneCreateRequest extends BaseRequest {\n    vars: string;\n    regionName: string;\n    regionID: string;\n    cloudVars: {} = {};\n    provider: string;\n    credentialId: string;\n}\n\nexport class ZoneUpdateRequest extends BaseRequest {\n    vars: string;\n    regionID: string;\n    cloudVars: {} = {};\n}\n\nexport class CloudZoneRequest extends BaseRequest {\n    cloudVars: {} = {};\n    datacenter: string;\n}\n\nexport class CloudZone {\n    cluster: string;\n    networks: [] = [];\n    resourcePools: [] = [];\n    datastores: [] = [];\n    storages: Storage[] = [];\n    securityGroups: [] = [];\n    networkList: Network[] = [];\n    floatingNetworkList: Network[] = [];\n    ipTypes: [] = [];\n    imageList: Image[] = [];\n}\n\nexport class CloudTemplate {\n    imageName: string;\n    guestId: string;\n}\n\nexport class Storage {\n    id: string;\n    name: string;\n}\n\nexport class Network {\n    id: string;\n    name: string;\n    subnetList: Subnet[] = [];\n}\n\nexport class Subnet {\n    id: string;\n    name: string;\n}\n\nexport class Image {\n    id: string;\n    name: string;\n}\n\n\n\n\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host, HostCreateRequest} from '../host';\nimport {HostService} from '../host.service';\nimport {NgForm} from '@angular/forms';\nimport {CredentialService} from '../../setting/credential/credential.service';\nimport {Credential} from '../../setting/credential/credential';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-host-create',\n    templateUrl: './host-create.component.html',\n    styleUrls: ['./host-create.component.css']\n})\nexport class HostCreateComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: HostCreateRequest = new HostCreateRequest();\n    credentials: Credential[] = [];\n    @ViewChild('hostForm') hostForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private hostService: HostService, private credentialService: CredentialService,\n                private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.credentialService.list().subscribe(data => {\n            this.credentials = data.items;\n        });\n        this.opened = true;\n        this.item = new HostCreateRequest();\n        this.hostForm.resetForm();\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.hostService.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #hostForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_IP\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"ip\" [(ngModel)]=\"item.ip\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_PORT\"|translate}}</label>\n                <input clrInput type=\"number\" [size]=\"32\" name=\"port\" [(ngModel)]=\"item.port\" required/>\n            </clr-input-container>\n            <clr-select-container>\n                <label>{{\"APP_CREDENTIAL\"|translate}}</label>\n                <select clrSelect [(ngModel)]=\"item.credentialId\" name=\"credential\" required>\n                    <option *ngFor=\"let item of credentials\" [value]=\"item.id\">{{item.name}}</option>\n                </select>\n            </clr-select-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"hostForm.invalid\">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\nimport {HostService} from '../host.service';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-host-delete',\n    templateUrl: './host-delete.component.html',\n    styleUrls: ['./host-delete.component.css']\n})\nexport class HostDeleteComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    items: Host[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private hostService: HostService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.opened = true;\n        this.items = items;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\nimport {HostService} from '../host.service';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\n\n@Component({\n    selector: 'app-host-detail',\n    templateUrl: './host-detail.component.html',\n    styleUrls: ['./host-detail.component.css']\n})\nexport class HostDetailComponent extends BaseModelComponent<Host> implements OnInit {\n\n    opened = false;\n    item: Host = new Host();\n    loading = false;\n    @Output() detail = new EventEmitter();\n\n    constructor(private hostService: HostService, private modalAlertService: ModalAlertService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    onCancel() {\n        this.item = new Host();\n        this.opened = false;\n        this.loading = false;\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onSync() {\n        this.loading = true;\n        this.hostService.sync(this.item.name, this.item).subscribe(data => {\n            this.item = data;\n            this.loading = false;\n        }, res => {\n            this.modalAlertService.showAlert(res.error.msg, AlertLevels.ERROR);\n            this.loading = false;\n        });\n    }\n\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalSize]=\"'lg'\">\n    <h3 class=\"modal-title\">{{'APP_HOST_SPEC'|translate}}</h3>\n    <div class=\"modal-body\">\n        <div *ngIf=\"item!=null && !loading\">\n            <h5>{{'APP_BASIC_INFORMATION'|translate}}</h5>\n            <hr/>\n            {{'APP_CPU'|translate}}:{{item.cpuCore}} <br/>\n            {{'APP_HOST_MEMORY'|translate}}:{{item.memory}} <br/>\n            {{'APP_OS'|translate}}:{{item.os}} {{item.osVersion}}<br/>\n            <h5>{{'APP_HOST_DISK_SPEC'|translate}}</h5>\n            <hr/>\n            <clr-datagrid>\n                <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n                <clr-dg-column>{{'APP_HOST_DISK_SIZE'|translate}}</clr-dg-column>\n\n                <clr-dg-row *clrDgItems=\"let volume of item.volumes\" [clrDgItem]=\"volume\">\n                    <clr-dg-cell>{{volume.name}}</clr-dg-cell>\n                    <clr-dg-cell>{{volume.size}}</clr-dg-cell>\n                </clr-dg-row>\n            </clr-datagrid>\n            <br/>\n            <!--            <div *ngIf=\"item.gpus.length>0\">-->\n            <!--                <h5>显卡信息</h5>-->\n            <!--                <hr/>-->\n            <!--                <clr-datagrid>-->\n            <!--                    <clr-dg-column>名称</clr-dg-column>-->\n            <!--                    <clr-dg-row *clrDgItems=\"let gpu of host.gpus\" [clrDgItem]=\"gpu\">-->\n            <!--                        <clr-dg-cell>{{gpu.name}}</clr-dg-cell>-->\n            <!--                    </clr-dg-row>-->\n            <!--                </clr-datagrid>-->\n            <!--            </div>-->\n            <!--            <h5>健康检查</h5>-->\n            <!--            <hr/>-->\n            <!--            <clr-datagrid>-->\n            <!--                <clr-dg-column>原因</clr-dg-column>-->\n            <!--                <clr-dg-column>采集时间</clr-dg-column>-->\n            <!--                <clr-dg-column>状态</clr-dg-column>-->\n            <!--                <clr-dg-column>消息</clr-dg-column>-->\n\n            <!--                <clr-dg-row *clrDgItems=\"let con of host.conditions\" [clrDgItem]=\"con\">-->\n            <!--                    <clr-dg-cell>{{con.reason}}</clr-dg-cell>-->\n            <!--                    <clr-dg-cell>{{con.last_time}}</clr-dg-cell>-->\n            <!--                    <clr-dg-cell style=\"text-align: center\">-->\n            <!--                        <i class=\"fa fa-check\" aria-hidden=\"true\" *ngIf=\"con.status\"></i>-->\n            <!--                        <i class=\"fa fa-close\" aria-hidden=\"true\" *ngIf=\"!con.status\"></i>-->\n            <!--                    </clr-dg-cell>-->\n            <!--                    <clr-dg-cell>{{con.message}}</clr-dg-cell>-->\n            <!--                </clr-dg-row>-->\n            <!--            </clr-datagrid>-->\n        </div>\n        <div *ngIf=\"loading\" style=\"text-align: center\">\n            <clr-spinner></clr-spinner>\n        </div>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn\" (click)=\"onCancel()\" [disabled]=\"loading\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"button\" class=\"btn\" (click)=\"onSync()\" [disabled]=\"loading\">{{'APP_REFRESH'|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {HostService} from '../host.service';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Host} from '../host';\n\n@Component({\n    selector: 'app-host-list',\n    templateUrl: './host-list.component.html',\n    styleUrls: ['./host-list.component.css']\n})\nexport class HostListComponent extends BaseModelComponent<Host> implements OnInit {\n\n    @Output() detailEvent = new EventEmitter<Host>();\n\n    constructor(private hostService: HostService) {\n        super(hostService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n    onStatusDetail(item) {\n        this.detailEvent.emit(item);\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CLUSTER'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_IP'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CPU'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_HOST_MEMORY'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_GPU'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_OS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_STATUS'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell><a (click)=\"onStatusDetail(item)\" href=\"javascript:void(0)\">{{item.name}}</a></clr-dg-cell>\n        <clr-dg-cell>{{item.cluster.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.ip}}</clr-dg-cell>\n        <clr-dg-cell>{{item.cpuCore}}</clr-dg-cell>\n        <clr-dg-cell>{{item.memory}}</clr-dg-cell>\n        <clr-dg-cell>{{item.gpuNum}}</clr-dg-cell>\n        <clr-dg-cell>{{item.os}} {{item.osVersion}}</clr-dg-cell>\n        <clr-dg-cell>{{item.status}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_HOST\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HostListComponent} from './host-list/host-list.component';\nimport {HostCreateComponent} from './host-create/host-create.component';\nimport {HostDeleteComponent} from './host-delete/host-delete.component';\nimport {Host} from './host';\nimport {HostDetailComponent} from './host-detail/host-detail.component';\n\n@Component({\n    selector: 'app-host',\n    templateUrl: './host.component.html',\n    styleUrls: ['./host.component.css']\n})\nexport class HostComponent implements OnInit {\n\n    @ViewChild(HostListComponent, {static: true})\n    list: HostListComponent;\n\n    @ViewChild(HostCreateComponent, {static: true})\n    create: HostCreateComponent;\n\n    @ViewChild(HostDeleteComponent, {static: true})\n    delete: HostDeleteComponent;\n\n    @ViewChild(HostDetailComponent, {static: true})\n    detail: HostDetailComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: Host[]) {\n        this.delete.open(items);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openDetail(item) {\n        this.detail.open(item);\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_HOST' | translate }}</h2>\n        <app-host-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                       (detailEvent)=\"openDetail($event)\"></app-host-list>\n        <app-host-delete (deleted)=\"refresh()\"></app-host-delete>\n        <app-host-create (created)=\"refresh()\"></app-host-create>\n        <app-host-detail (detail)=\"refresh()\"></app-host-detail>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { HostComponent } from './host.component';\nimport { HostListComponent } from './host-list/host-list.component';\nimport { HostCreateComponent } from './host-create/host-create.component';\nimport { HostDeleteComponent } from './host-delete/host-delete.component';\nimport {CoreModule} from '../../core/core.module';\nimport { HostDetailComponent } from './host-detail/host-detail.component';\nimport {SharedModule} from '../../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [HostComponent, HostListComponent, HostCreateComponent, HostDeleteComponent, HostDetailComponent],\n    imports: [\n        CoreModule,\n        SharedModule,\n    ]\n})\nexport class HostModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {Observable} from 'rxjs';\nimport {Host, HostCreateRequest} from './host';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HostService extends BaseModelService<any> {\n\n    baseUrl = '/api/v1/hosts';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    sync(name: string, item: HostCreateRequest): Observable<Host> {\n        const itemUrl = `${this.baseUrl}/sync/${name}/`;\n        return this.http.post<Host>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../shared/class/BaseModel';\nimport {Credential} from '../setting/credential/credential';\nimport {Cluster} from '../cluster/cluster';\n\nexport class Host extends BaseModel {\n\n    id: string;\n    name: string;\n    ip: string;\n    port: string;\n    credentialId: string;\n    os: string;\n    osVersion: string;\n    memory: string;\n    cpuCore: number;\n    gpuNum: number;\n    gpuInfo: string;\n    status: string;\n    volumes: Volume[];\n    credential: Credential;\n    cluster: Cluster;\n}\n\nexport class Volume extends BaseModel {\n    ID: string;\n    size: string;\n    name: string;\n    hostId: string;\n}\n\nexport class HostCreateRequest extends BaseRequest {\n    name: string;\n    ip: string;\n    port: string;\n    credentialId: string;\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CredentialCreateRequest} from '../credential';\nimport {NgForm} from '@angular/forms';\nimport {CredentialService} from '../credential.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-create',\n    templateUrl: './credential-create.component.html',\n    styleUrls: ['./credential-create.component.css']\n})\nexport class CredentialCreateComponent implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: CredentialCreateRequest = new CredentialCreateRequest();\n    @ViewChild('credentialForm') credentialForm: NgForm;\n    @Output() created = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.item = new CredentialCreateRequest();\n        this.credentialForm.resetForm();\n        this.opened = true;\n        this.item.type = 'password';\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.service.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #credentialForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_USERNAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"username\" [(ngModel)]=\"item.username\" required/>\n            </clr-input-container>\n            <clr-radio-container>\n                <label>{{\"APP_TYPE\"|translate}}</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"password\" [(ngModel)]=\"item.type\"/>\n                    <label>password</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"privateKey\" [(ngModel)]=\"item.type\"/>\n                    <label>privateKey</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n            <clr-password-container *ngIf=\"item.type == 'password'\">\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input clrPassword size=\"32\" name=\"password\" [(ngModel)]=\"item.password\"/>\n            </clr-password-container>\n            <clr-textarea-container *ngIf=\"item.type == 'privateKey'\">\n                <label>密钥:</label>\n                <textarea clrTextarea [(ngModel)]=\"item.privateKey\" name=\"private_key\" required></textarea>\n            </clr-textarea-container>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\" [disabled]=\"isSubmitGoing\">取消</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"credentialForm.invalid\">提交\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Credential} from '../credential';\nimport {CredentialService} from '../credential.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-delete',\n    templateUrl: './credential-delete.component.html',\n    styleUrls: ['./credential-delete.component.css']\n})\nexport class CredentialDeleteComponent implements OnInit {\n\n    opened = false;\n    items: Credential[] = [];\n    @Output() deleted = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    open(items: Credential[]) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.opened = false;\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {CredentialService} from '../credential.service';\nimport {Credential} from '../credential';\nimport {NgForm} from '@angular/forms';\nimport {ModalAlertService} from '../../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-credential-edit',\n    templateUrl: './credential-edit.component.html',\n    styleUrls: ['./credential-edit.component.css']\n})\nexport class CredentialEditComponent implements OnInit {\n\n    item: Credential = new Credential();\n    opened = false;\n    isSubmitGoing = false;\n    @ViewChild('credentialEditForm') credentialForm: NgForm;\n    @Output() edit = new EventEmitter();\n\n    constructor(private service: CredentialService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item: Credential) {\n        this.item = item;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.item = new Credential();\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.service.update(this.item.name, this.item).subscribe(data => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_UPDATE_SUCCESS'), AlertLevels.SUCCESS);\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.edit.emit();\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #credentialEditForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required readonly/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_USERNAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"username\" [(ngModel)]=\"item.username\" required/>\n            </clr-input-container>\n            <clr-radio-container>\n                <label>{{\"APP_TYPE\"|translate}}</label>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"password\" [(ngModel)]=\"item.type\"/>\n                    <label>password</label>\n                </clr-radio-wrapper>\n                <clr-radio-wrapper>\n                    <input type=\"radio\" clrRadio name=\"options\" value=\"privateKey\" [(ngModel)]=\"item.type\"/>\n                    <label>privateKey</label>\n                </clr-radio-wrapper>\n            </clr-radio-container>\n            <clr-password-container *ngIf=\"item.type == 'password'\">\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input clrPassword size=\"32\" name=\"password\" [(ngModel)]=\"item.password\"/>\n            </clr-password-container>\n            <clr-textarea-container *ngIf=\"item.type == 'privateKey'\">\n                <label>密钥:</label>\n                <textarea clrTextarea [(ngModel)]=\"item.privateKey\" name=\"private_key\" required></textarea>\n            </clr-textarea-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\" [disabled]=\"isSubmitGoing\">取消</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"credentialEditForm.invalid\">提交\n        </button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {CredentialService} from '../credential.service';\nimport {BaseModelComponent} from '../../../../shared/class/BaseModelComponent';\nimport {Credential} from '../credential';\n\n@Component({\n    selector: 'app-credential-list',\n    templateUrl: './credential-list.component.html',\n    styleUrls: ['./credential-list.component.css']\n})\nexport class CredentialListComponent extends BaseModelComponent<Credential> implements OnInit {\n\n    constructor(private credentialService: CredentialService) {\n        super(credentialService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onUpdate(selected[0])\"\n                    [disabled]=\"selected.length!==1\">\n                <clr-icon shape=\"note\"></clr-icon>\n                {{\"APP_EDIT\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_USERNAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_TYPE'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.username}}</clr-dg-cell>\n        <clr-dg-cell>{{item.type}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt|date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_CREDENTIAL\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {CredentialListComponent} from './credential-list/credential-list.component';\nimport {CredentialCreateComponent} from './credential-create/credential-create.component';\nimport {CredentialDeleteComponent} from './credential-delete/credential-delete.component';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {Credential} from './credential';\nimport {CredentialService} from './credential.service';\nimport {CredentialEditComponent} from './credential-edit/credential-edit.component';\n\n@Component({\n    selector: 'app-credential',\n    templateUrl: './credential.component.html',\n    styleUrls: ['./credential.component.css']\n})\nexport class CredentialComponent extends BaseModelComponent<Credential> implements OnInit {\n\n\n    @ViewChild(CredentialListComponent, {static: true})\n    list: CredentialListComponent;\n\n    @ViewChild(CredentialCreateComponent, {static: true})\n    create: CredentialCreateComponent;\n\n    @ViewChild(CredentialDeleteComponent, {static: true})\n    delete: CredentialDeleteComponent;\n\n    @ViewChild(CredentialEditComponent, {static: true})\n    edit: CredentialEditComponent;\n\n    constructor(private credentialService: CredentialService) {\n        super(credentialService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items: Credential[]) {\n        this.delete.open(items);\n    }\n\n    openEdit(item: Credential) {\n        this.edit.open(item);\n    }\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <app-credential-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\" (updateEvent)=\"openEdit($event)\"></app-credential-list>\n    <app-credential-create (created)=\"refresh()\"></app-credential-create>\n    <app-credential-delete (deleted)=\"refresh()\"></app-credential-delete>\n    <app-credential-edit (edit)=\"refresh()\"></app-credential-edit>\n</div>\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CredentialDeleteComponent} from './credential-delete/credential-delete.component';\nimport {CoreModule} from '../../../core/core.module';\nimport {CredentialEditComponent} from './credential-edit/credential-edit.component';\nimport {CredentialListComponent} from './credential-list/credential-list.component';\nimport {CredentialComponent} from './credential.component';\nimport {CredentialCreateComponent} from './credential-create/credential-create.component';\nimport {SharedModule} from '../../../shared/shared.module';\n\n\n@NgModule({\n    declarations: [CredentialDeleteComponent, CredentialEditComponent, CredentialListComponent,\n        CredentialComponent, CredentialCreateComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class CredentialModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Credential} from './credential';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CredentialService extends BaseModelService<Credential> {\n\n    baseUrl = '/api/v1/credentials';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class Credential extends BaseModel {\n    id: string;\n    name: string;\n    username: string;\n    password: string;\n    privateKey: string;\n    type = 'password';\n}\n\n\nexport class CredentialCreateRequest extends BaseRequest {\n    id: string;\n    name: string;\n    username: string;\n    password: string;\n    privateKey: string;\n    type: string;\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.component.html',\n  styleUrls: ['./setting.component.css']\n})\nexport class SettingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n    <h2> {{ 'APP_SYSTEM_SETTING' | translate }}</h2>\n</div>\n<nav class=\"subnav sub-nav-bg-color\">\n    <ul class=\"nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"system\"\n               routerLinkActive=\"active\">{{ 'APP_SYSTEM' | translate}}</a>\n        </li>\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"credential\"\n               routerLinkActive=\"active\">{{ 'APP_CREDENTIAL' | translate}}</a>\n        </li>\n    </ul>\n</nav>\n<router-outlet></router-outlet>\n","import {NgModule} from '@angular/core';\nimport {SettingComponent} from './setting.component';\nimport {RouterModule} from '@angular/router';\nimport {CoreModule} from '../../core/core.module';\nimport {CredentialModule} from './credential/credential.module';\nimport { SystemComponent } from './system/system.component';\n\n\n@NgModule({\n    declarations: [SettingComponent, SystemComponent],\n    imports: [\n        RouterModule,\n        CoreModule,\n        CredentialModule,\n    ]\n})\n\nexport class SettingModule {\n\n}\n","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {System} from './system/system';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SystemService extends BaseModelService<System> {\n\n    baseUrl = '/api/v1/systemSettings';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {System, SystemCreateRequest} from './system';\nimport {SystemService} from '../system.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-system',\n    templateUrl: './system.component.html',\n    styleUrls: ['./system.component.css']\n})\nexport class SystemComponent extends BaseModelComponent<System> implements OnInit {\n\n    items: System[] = [];\n    item: SystemCreateRequest = new SystemCreateRequest();\n\n    constructor(private systemService: SystemService, private commonAlertService: CommonAlertService,\n                private translateService: TranslateService) {\n        super(systemService);\n    }\n\n    ngOnInit(): void {\n        this.listSystemSettings();\n    }\n\n\n    listSystemSettings() {\n        this.systemService.list().subscribe(res => {\n            this.items = res.items;\n            this.item.vars = this.items[0].vars;\n        });\n    }\n\n    onSubmit() {\n        this.systemService.create(this.item).subscribe(res => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.commonAlertService.showAlert(error.error.msg, AlertLevels.SUCCESS);\n        });\n    }\n}\n","<div>\n    <form clrForm #settingForm=\"ngForm\">\n        <div *ngIf=\"item\">\n            <clr-input-container>\n                <label>{{'APP_SYSTEM_IP'|translate}}</label>\n                <input clrInput [(ngModel)]=\"item.vars['ip']\" name=\"ip\" size=45 required/>\n                <clr-control-helper>{{'APP_SYSTEM_IP_HELPER'|translate}}</clr-control-helper>\n            </clr-input-container>\n        </div>\n    </form>\n    <button class=\"btn btn-info-outline\" (click)=\"onSubmit()\"\n            [disabled]=\"settingForm.invalid\">{{'APP_COMMIT'|translate}}</button>\n</div>\n","import {BaseModel, BaseRequest} from '../../../shared/class/BaseModel';\n\nexport class System extends BaseModel {\n    vars: {} = {};\n}\n\nexport class SystemCreateRequest extends BaseRequest {\n    vars: {} = {};\n}\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {User, UserCreateRequest} from '../user';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {UserService} from '../user.service';\nimport {NgForm} from '@angular/forms';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {PasswordPattern} from '../../../constant/pattern';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n\n@Component({\n    selector: 'app-user-create',\n    templateUrl: './user-create.component.html',\n    styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    isSubmitGoing = false;\n    item: UserCreateRequest = new UserCreateRequest();\n    passwordPattern = PasswordPattern;\n\n    @ViewChild('userForm') userForm: NgForm;\n    @Output() created = new EventEmitter();\n\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open() {\n        this.opened = true;\n        this.item = new UserCreateRequest();\n        this.userForm.resetForm();\n    }\n\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.userService.create(this.item).subscribe(data => {\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.created.emit();\n            this.commonAlertService.showAlert(this.translateService.instant('APP_ADD_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_ADD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #userForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_EMAIL\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"email\" [(ngModel)]=\"item.email\"\n                       [email]=\"true\"\n                       required/>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-input-container>\n            <clr-password-container>\n                <label>{{\"APP_PASSWORD\"|translate}}</label>\n                <input style=\"display:none\">\n                <input clrPassword [size]=\"32\" name=\"password\" [(ngModel)]=\"item.password\"\n                       pattern=\"{{passwordPattern}}\"\n                       required/>\n                <clr-control-helper\n                        *ngIf=\"item.password && item.confirmPassword && ( item.password != item.confirmPassword)\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{\"APP_CONFIRM_PASSWORD\"|translate}}</label>\n                <input style=\"display:none\">\n                <input clrPassword [size]=\"32\" name=\"confirmPassword\" [(ngModel)]=\"item.confirmPassword\"\n                       pattern=\"{{passwordPattern}}\" required/>\n                <clr-control-helper\n                        *ngIf=\"item.password && item.confirmPassword && ( item.password != item.confirmPassword)\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"userForm.invalid \">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-user-delete',\n    templateUrl: './user-delete.component.html',\n    styleUrls: ['./user-delete.component.css']\n})\nexport class UserDeleteComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    items: User[] = [];\n\n    @Output()\n    deleted = new EventEmitter();\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(items) {\n        this.items = items;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.service.batch('delete', this.items).subscribe(data => {\n            this.deleted.emit();\n            this.opened = false;\n            this.commonAlertService.showAlert(this.translateService.instant('APP_DELETE_SUCCESS'), AlertLevels.SUCCESS);\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{\"APP_DELETE_CREDENTIAL\"|translate}}</h3>\n    <div class=\"modal-body\">\n        <p>{{\"APP_DEFAULT_DELETE_WARNING\"|translate}}</p>\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn\" (click)=\"onCancel()\">{{\"APP_CANCEL\"|translate}}</button>\n        <button class=\"btn btn-primary\" (click)=\"onSubmit()\">{{\"APP_COMMIT\"|translate}}</button>\n    </div>\n</clr-modal>\n","import {Component, OnInit} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\n\n@Component({\n    selector: 'app-user-list',\n    templateUrl: './user-list.component.html',\n    styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent extends BaseModelComponent<User> implements OnInit {\n\n    constructor(private userService: UserService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n    }\n\n}\n","<clr-datagrid [clrDgLoading]=\"loading\" [(clrDgSelected)]=\"selected\">\n    <clr-dg-action-bar>\n        <div class=\"btn-group\">\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onCreate()\">\n                <clr-icon shape=\"plus\" size=\"16\"></clr-icon>\n                {{\"APP_ADD\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onUpdate(selected[0])\"\n                    [disabled]=\"selected.length!==1\">\n                <clr-icon shape=\"note\"></clr-icon>\n                {{\"APP_EDIT\"|translate}}\n            </button>\n            <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"onDelete()\" [disabled]=\"selected.length<1\">\n                <clr-icon shape=\"close\"></clr-icon>\n                {{\"APP_DELETE\"|translate}}\n            </button>\n        </div>\n    </clr-dg-action-bar>\n    <clr-dg-column>{{'APP_NAME'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_EMAIL'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_ENABLE'|translate}}</clr-dg-column>\n    <clr-dg-column>{{'APP_CREATED_DATE'|translate}}</clr-dg-column>\n\n    <clr-dg-row *clrDgItems=\"let item of items\" [clrDgItem]=\"item\">\n        <clr-dg-cell>{{item.name}}</clr-dg-cell>\n        <clr-dg-cell>{{item.email}}</clr-dg-cell>\n        <clr-dg-cell>{{item.isActive}}</clr-dg-cell>\n        <clr-dg-cell>{{item.createdAt |date:'yyyy-MM-dd hh:mm:ss'}}</clr-dg-cell>\n    </clr-dg-row>\n    <clr-dg-footer>\n        <clr-dg-pagination #pagination [(clrDgPage)]=\"page\" [clrDgPageSize]=\"size\" [clrDgTotalItems]=\"total\"\n                           (clrDgPageChange)=\"refresh()\">\n            {{pagination.firstItem + 1}} - {{pagination.lastItem + 1}}\n            {{\"APP_PAGER_TOTAL\"|translate}} {{pagination.totalItems}} {{\"APP_USER\"|translate}}\n        </clr-dg-pagination>\n    </clr-dg-footer>\n</clr-datagrid>\n","import {Component, EventEmitter, OnInit, Output, ViewChild} from '@angular/core';\nimport {BaseModelComponent} from '../../../shared/class/BaseModelComponent';\nimport {User} from '../user';\nimport {UserService} from '../user.service';\nimport {NgForm} from '@angular/forms';\nimport {AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {CommonAlertService} from '../../../layout/common-alert/common-alert.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-user-update',\n    templateUrl: './user-update.component.html',\n    styleUrls: ['./user-update.component.css']\n})\nexport class UserUpdateComponent extends BaseModelComponent<User> implements OnInit {\n\n    opened = false;\n    item: User = new User();\n    isSubmitGoing = false;\n    @ViewChild('userForm') userFrom: NgForm;\n\n    @Output()\n    update = new EventEmitter();\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService,\n                private commonAlertService: CommonAlertService, private translateService: TranslateService) {\n        super(userService);\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(item) {\n        this.opened = true;\n        this.item = item;\n    }\n\n    onCancel() {\n        this.opened = false;\n    }\n\n    onSubmit() {\n        this.isSubmitGoing = true;\n        this.userService.update(this.item.name, this.item).subscribe(data => {\n            this.commonAlertService.showAlert(this.translateService.instant('APP_UPDATE_SUCCESS'), AlertLevels.SUCCESS);\n            this.opened = false;\n            this.isSubmitGoing = false;\n            this.update.emit();\n        }, error => {\n            this.isSubmitGoing = false;\n            this.modalAlertService.showAlert(error.msg, AlertLevels.ERROR);\n        });\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\">\n    <h3 class=\"modal-title\">{{'APP_EDIT'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #userForm='ngForm'>\n            <clr-input-container>\n                <label>{{\"APP_NAME\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"name\" [(ngModel)]=\"item.name\" required/>\n            </clr-input-container>\n            <clr-input-container>\n                <label>{{\"APP_EMAIL\"|translate}}</label>\n                <input clrInput [size]=\"32\" name=\"email\" [(ngModel)]=\"item.email\"\n                       [email]=\"true\"\n                       required/>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-input-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\"\n                [disabled]=\"isSubmitGoing\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\"\n                [disabled]=\"userForm.invalid \">{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {UserListComponent} from './user-list/user-list.component';\nimport {UserCreateComponent} from './user-create/user-create.component';\nimport {UserUpdateComponent} from './user-update/user-update.component';\nimport {UserDeleteComponent} from './user-delete/user-delete.component';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n    @ViewChild(UserListComponent, {static: true})\n    list: UserListComponent;\n\n    @ViewChild(UserCreateComponent, {static: true})\n    create: UserCreateComponent;\n\n    @ViewChild(UserUpdateComponent, {static: true})\n    update: UserUpdateComponent;\n\n    @ViewChild(UserDeleteComponent, {static: true})\n    delete: UserDeleteComponent;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n\n    refresh() {\n        this.list.reset();\n        this.list.refresh();\n    }\n\n    openCreate() {\n        this.create.open();\n    }\n\n    openDelete(items) {\n        this.delete.open(items);\n    }\n\n    openUpdate(item) {\n        this.update.open(item);\n    }\n\n}\n","<div class=\"row\">\n    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <h2> {{ 'APP_USER_MANAGEMENT' | translate }}</h2>\n        <app-user-list (createEvent)=\"openCreate()\" (deleteEvent)=\"openDelete($event)\"\n                       (updateEvent)=\"openUpdate($event)\"></app-user-list>\n        <app-user-create (created)=\"refresh()\"></app-user-create>\n        <app-user-update></app-user-update>\n        <app-user-delete (deleted)=\"refresh()\"></app-user-delete>\n    </div>\n</div>","import {Injectable} from '@angular/core';\nimport {BaseModelService} from '../../shared/class/BaseModelService';\nimport {HttpClient} from '@angular/common/http';\nimport {Host, HostCreateRequest} from '../host/host';\nimport {Observable} from 'rxjs';\nimport {ChangePasswordRequest} from './user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService extends BaseModelService<any> {\n\n\n    baseUrl = '/api/v1/users';\n\n    constructor(http: HttpClient) {\n        super(http);\n    }\n\n    changePassword(item: ChangePasswordRequest): Observable<Host> {\n        const itemUrl = `${this.baseUrl}/change/password/`;\n        return this.http.post<Host>(itemUrl, item);\n    }\n}\n","import {BaseModel, BaseRequest} from '../../shared/class/BaseModel';\n\nexport class User extends BaseModel {\n    name: string;\n    id: string;\n    password: string;\n    email: string;\n    language: string;\n    isActive: string;\n    confirmPassword: string;\n}\n\nexport class UserCreateRequest extends BaseRequest {\n    name: string;\n    password: string;\n    email: string;\n    confirmPassword: string;\n}\n\nexport class ChangePasswordRequest extends BaseRequest {\n    name: string;\n    password: string;\n    original: string;\n}\n","export const PasswordPattern = '^(?=.*\\\\d)(?=.*[a-zA-Z])[\\\\da-zA-Z~!@#$%^&*]{6,20}$';\n","\nexport const CommonRoutes = {\n    LOGIN: '/login',\n    KO_ROOT: '/',\n};\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {AppRoutingModule} from '../app-routing.module';\nimport {ClarityModule} from '@clr/angular';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {LSelect2Module} from 'ngx-select2';\n\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ClarityModule,\n        TranslateModule,\n        LSelect2Module,\n    ],\n    exports: [\n        CommonModule,\n        FormsModule,\n        ClarityModule,\n        TranslateModule,\n        LSelect2Module\n    ]\n})\nexport class CoreModule {\n}\n","export enum AlertLevels {\n    SUCCESS, ERROR\n}\n\nexport class Alert {\n    msg: string;\n    level: AlertLevels;\n\n    constructor(msg: string, level: AlertLevels) {\n        this.msg = msg;\n        this.level = level;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {Alert, AlertLevels} from '../common-alert/alert';\nimport {AppAlertService} from './app-alert.service';\n\n@Component({\n    selector: 'app-app-alert',\n    templateUrl: './app-alert.component.html',\n    styleUrls: ['./app-alert.component.css']\n})\nexport class AppAlertComponent implements OnInit {\n\n    show = false;\n    level = '';\n    msg = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n    currentAlert: Alert;\n\n    constructor(private appAlertService: AppAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.appAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'info';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.appAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n\n    close() {\n        this.show = false;\n    }\n\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"true\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n          {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>\n\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from './alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AppAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","export enum AlertLevels {\n    SUCCESS, ERROR\n}\n\nexport class Alert {\n    msg: string;\n    level: AlertLevels;\n\n    constructor(msg: string, level: AlertLevels) {\n        this.msg = msg;\n        this.level = level;\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {CommonAlertService} from './common-alert.service';\nimport {Alert, AlertLevels} from './alert';\n\n@Component({\n    selector: 'app-common-alert',\n    templateUrl: './common-alert.component.html',\n    styleUrls: ['./common-alert.component.css']\n})\n\nexport class CommonAlertComponent implements OnInit {\n\n    show = false;\n    level = '';\n    msg = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n    currentAlert: Alert;\n\n    constructor(private commonAlertService: CommonAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.commonAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'info';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.commonAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n\n    close() {\n        this.show = false;\n    }\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"false\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n          {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from './alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CommonAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SessionService} from '../../shared/auth/session.service';\nimport {SessionUser} from '../../shared/auth/session-user';\nimport {Router} from '@angular/router';\nimport {CommonRoutes} from '../../constant/route';\nimport {PasswordComponent} from './password/password.component';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n    user: SessionUser = new SessionUser();\n\n    @ViewChild(PasswordComponent, {static: true})\n    password: PasswordComponent;\n\n    constructor(private sessionService: SessionService, private router: Router) {\n    }\n\n    ngOnInit(): void {\n        this.getProfile();\n    }\n\n    getProfile() {\n        const profile = this.sessionService.getCacheProfile();\n        if (profile != null) {\n            this.user = profile.user;\n        }\n    }\n\n    changePassword() {\n        this.password.open(this.user);\n    }\n\n    logOut() {\n        this.sessionService.clear();\n        this.router.navigateByUrl(CommonRoutes.LOGIN).then();\n    }\n}\n","\n<app-password></app-password>\n<header class=\"header-6\">\n    <div class=\"branding\">\n        <img src=\"assets/images/logo-white.png\" height=\"40\" style=\"margin-top: 10px\">\n    </div>\n    <div class=\"header-actions\">\n        <!--        <a href=\"javascript://\" class=\"nav-link nav-icon\" aria-label=\"settings\">-->\n        <!--            <clr-icon shape=\"cog\"></clr-icon>-->\n        <!--        </a>-->\n        <clr-dropdown class=\"dropdown\">\n            <button class=\"nav-text\" clrDropdownToggle>\n                <clr-icon shape=\"user\" class=\"is-inverse\" size=\"24\"></clr-icon>\n                <span>{{user.name}}</span>\n                <clr-icon shape=\"caret down\"></clr-icon>\n            </button>\n            <clr-dropdown-menu [clrPosition]=\"'bottom-right'\">\n                <a href=\"javascript:void(0)\" clrDropdownItem (click)=\"changePassword()\">{{'APP_SYSTEM_CHANGE_PASSWORD'|translate}}</a>\n                <a href=\"javascript:void(0)\" clrDropdownItem (click)=\"logOut()\">{{'APP_SYSTEM_LOGOUT'|translate}}</a>\n            </clr-dropdown-menu>\n        </clr-dropdown>\n    </div>\n</header>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {PasswordPattern} from '../../../constant/pattern';\nimport {NgForm} from '@angular/forms';\nimport {UserService} from '../../../business/user/user.service';\nimport {SessionUser} from '../../../shared/auth/session-user';\nimport {ChangePasswordRequest} from '../../../business/user/user';\nimport {ModalAlertService} from '../../../shared/common-component/modal-alert/modal-alert.service';\nimport {AlertLevels} from '../../common-alert/alert';\n\n@Component({\n    selector: 'app-password',\n    templateUrl: './password.component.html',\n    styleUrls: ['./password.component.css']\n})\nexport class PasswordComponent implements OnInit {\n\n    opened = false;\n    password: string;\n    confirmPassword: string;\n    original: string;\n    submitGoing = false;\n    passwordPattern = PasswordPattern;\n    user: SessionUser = new SessionUser();\n    changePasswordRequest: ChangePasswordRequest = new ChangePasswordRequest();\n    @ViewChild('passForm', {static: true}) passForm: NgForm;\n\n    constructor(private userService: UserService, private modalAlertService: ModalAlertService) {\n    }\n\n    ngOnInit(): void {\n    }\n\n    open(user) {\n        this.user = user;\n        this.opened = true;\n    }\n\n    onCancel() {\n        this.opened = false;\n        this.passForm.resetForm();\n    }\n\n    onSubmit() {\n        this.submitGoing = true;\n        this.changePasswordRequest = {\n            password: this.password,\n            original: this.original,\n            name: this.user.name\n        };\n\n        this.userService.changePassword(this.changePasswordRequest).subscribe(res => {\n            this.submitGoing = false;\n            this.opened = false;\n        }, error => {\n            this.modalAlertService.showAlert(error.error.msg, AlertLevels.ERROR);\n            this.submitGoing = false;\n        });\n    }\n\n    checkPassword() {\n        return this.password === this.confirmPassword;\n    }\n}\n","<clr-modal [(clrModalOpen)]=\"opened\" [clrModalClosable]=\"false\">\n    <h3 class=\"modal-title\">{{'APP_CHANGE_PASSWORD'|translate}}</h3>\n    <div class=\"modal-body modal-height\">\n        <form clrForm #passForm=\"ngForm\">\n            <clr-password-container>\n                <label>{{'APP_OLD_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 type=\"password\" minlength=\"6\" maxlength=\"30\"\n                       [(ngModel)]=\"original\" name=\"old\" required>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{'APP_NEW_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 type=\"password\" [(ngModel)]=\"password\" name=\"name\"\n                       pattern=\"{{passwordPattern}}\" (change)=\"checkPassword()\" required>\n                <clr-control-helper\n                        *ngIf=\"!checkPassword() && password &&confirmPassword\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n            <clr-password-container>\n                <label>{{'APP_CONFIRM_NEW_PASSWORD'|translate}}</label>\n                <input clrPassword size=45 minlength=\"6\" maxlength=\"30\" type=\"password\" [(ngModel)]=\"confirmPassword\"\n                       name=\"name\"\n                       pattern=\"{{passwordPattern}}\" (change)=\"checkPassword()\" required>\n                <clr-control-helper *ngIf=\"!checkPassword() && password &&confirmPassword\">{{'APP_PASSWORD_HELP_MSG'|translate}}</clr-control-helper>\n                <clr-control-error>{{'APP_PASSWORD_ERROR_MSG'|translate}}</clr-control-error>\n            </clr-password-container>\n        </form>\n        <app-modal-alert></app-modal-alert>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline\" (click)=\"onCancel()\">{{'APP_CANCEL'|translate}}</button>\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSubmit()\" [disabled]=\"passForm.invalid || !checkPassword()\">\n            <i *ngIf=\"submitGoing\" class=\"fa fa-spinner fa-pulse\"></i>{{'APP_COMMIT'|translate}}\n        </button>\n    </div>\n</clr-modal>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-main-container>\n    <app-app-alert></app-app-alert>\n    <app-header></app-header>\n    <div class=\"content-container\">\n        <div class=\"content-area\">\n            <app-common-alert></app-common-alert>\n            <router-outlet></router-outlet>\n        </div>\n        <app-navigation></app-navigation>\n    </div>\n    <!--    <app-footer></app-footer>-->\n</clr-main-container>\n","import {NgModule} from '@angular/core';\nimport {HeaderComponent} from './header/header.component';\nimport {FooterComponent} from './footer/footer.component';\nimport {LayoutComponent} from './layout.component';\nimport {NavigationComponent} from './navigation/navigation.component';\nimport {AppAlertComponent} from './app-alert/app-alert.component';\nimport {CoreModule} from '../core/core.module';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared.module';\nimport {CommonAlertComponent} from './common-alert/common-alert.component';\nimport {PasswordComponent} from './header/password/password.component';\n\n@NgModule({\n    declarations: [HeaderComponent, FooterComponent, LayoutComponent,\n        NavigationComponent, AppAlertComponent, CommonAlertComponent, PasswordComponent],\n    exports: [\n        LayoutComponent\n    ],\n    imports: [\n        CoreModule,\n        RouterModule,\n        SharedModule,\n    ]\n})\nexport class LayoutModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<clr-vertical-nav [clrVerticalNavCollapsible]=\"true\">\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/clusters\">\n        <clr-icon shape=\"cluster\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_CLUSTER' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/hosts\">\n        <clr-icon shape=\"host\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_HOST' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/deploy\">\n        <clr-icon shape=\"clock\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_DEPLOY_PLAN' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/users\">\n        <clr-icon shape=\"user\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_USER_MANAGEMENT' | translate }}\n    </a>\n    <a clrVerticalNavLink routerLinkActive=\"active\" routerLink=\"/setting\">\n        <clr-icon shape=\"cog\" clrVerticalNavIcon></clr-icon>\n        {{ 'APP_SYSTEM_SETTING' | translate }}\n    </a>\n</clr-vertical-nav>\n","export class LoginCredential {\n    username: string;\n    password: string;\n    language: string;\n}","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {LoginCredential} from './login-credential';\nimport {LoginService} from './login.service';\nimport {Router} from '@angular/router';\nimport {SessionService} from '../shared/auth/session.service';\nimport {CommonRoutes} from '../constant/route';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    @ViewChild('loginForm', {static: true}) loginForm: NgForm;\n    @Input() loginCredential: LoginCredential = new LoginCredential();\n    message: string;\n    isError = false;\n\n    constructor(private loginService: LoginService,\n                private router: Router,\n                private sessionService: SessionService,\n                private translateService: TranslateService) {\n    }\n\n    ngOnInit(): void {\n        const currentLanguage = localStorage.getItem('currentLanguage');\n        if (currentLanguage) {\n            this.loginCredential.language = currentLanguage;\n        }else {\n            this.loginCredential.language = 'zh-CN';\n        }\n    }\n\n    login() {\n        this.loginService.login(this.loginCredential).subscribe(res => {\n            this.isError = false;\n            this.sessionService.cacheProfile(res);\n            localStorage.setItem('currentLanguage', this.loginCredential.language);\n            this.translateService.use(this.loginCredential.language);\n            this.router.navigateByUrl(CommonRoutes.KO_ROOT).then(r => console.log('login success'));\n        }, error => this.handleError(error));\n    }\n\n    handleError(error: any) {\n        this.isError = true;\n        switch (error.status) {\n            case 500:\n                this.message = error.error.message;\n                break;\n            case 504:\n                this.message = this.translateService.instant('APP_LOGIN_CONNECT_ERROR');\n                break;\n            case 401:\n                this.message = error.error.message;\n                break;\n            default:\n                this.message = this.translateService.instant('APP_LOGIN_CONNECT_UNKNOWN_ERROR') + `${error.status}`;\n        }\n    }\n}\n","<div class=\"login-wrapper background\">\n    <form class=\"login\" #loginForm=\"ngForm\">\n        <section class=\"title\">\n            <h3 class=\"welcome\">{{'APP_LOGIN_TITLE_WELCOME'|translate}}</h3>\n            {{'APP_LOGIN_TITLE_KO'|translate}}\n        </section>\n        <div class=\"login-group\">\n            <clr-input-container>\n                <label class=\"clr-sr-only\">{{'APP_USERNAME'|translate}}</label>\n                <input type=\"text\" name=\"username\" clrInput placeholder=\"Username\"\n                       [(ngModel)]=\"loginCredential.username\"\n                       required/>\n            </clr-input-container>\n            <clr-password-container>\n                <label class=\"clr-sr-only\">{{'APP_PASSWORD'|translate}}</label>\n                <input type=\"password\" name=\"password\" clrPassword placeholder=\"Password\"\n                       [(ngModel)]=\"loginCredential.password\" required/>\n            </clr-password-container>\n            <clr-select-container>\n                <label class=\"clr-sr-only\">{{'APP_SYSTEM_LANGUAGE'|translate}}</label>\n                <select clrSelect [(ngModel)]=\"loginCredential.language\" name=\"provider\" required>\n                    <option value='zh-CN' selected>{{'APP_SYSTEM_LANGUAGE_CN'|translate}}</option>\n                    <option value='en-US'>{{'APP_SYSTEM_LANGUAGE_US'|translate}}</option>\n                </select>\n            </clr-select-container>\n            <div *ngIf=\"isError\" class=\"error active\">\n                {{message}}\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\" [disabled]=\"loginForm.invalid\">登录</button>\n        </div>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport {CoreModule} from '../core/core.module';\nimport {SharedModule} from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent],\n    imports: [\n        CommonModule,\n        CoreModule,\n        SharedModule\n    ]\n})\nexport class LoginModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginCredential} from './login-credential';\nimport {Observable} from 'rxjs';\nimport {Profile} from '../shared/auth/session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    loginUrl = '/api/auth/login';\n\n    constructor(private http: HttpClient) {\n    }\n\n    login(item: LoginCredential): Observable<Profile> {\n        return this.http.post<Profile>(this.loginUrl, item);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {CommonRoutes} from '../../constant/route';\nimport {\n    ActivatedRouteSnapshot,\n    CanActivate,\n    CanActivateChild,\n    Router,\n    RouterStateSnapshot,\n    UrlTree\n} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {SessionService} from './session.service';\nimport {Profile} from './session-user';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthUserService implements CanActivate, CanActivateChild {\n\n    constructor(private sessionService: SessionService, private router: Router) {\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return new Observable<boolean>((observer) => {\n            this.isLogin().subscribe(res => {\n                this.sessionService.cacheProfile(res);\n                observer.next(true);\n                observer.complete();\n            }, error => {\n                observer.next(false);\n                observer.complete();\n                this.router.navigateByUrl(CommonRoutes.LOGIN).then();\n            });\n        });\n    }\n\n    canActivateChild(childRoute: ActivatedRouteSnapshot, state: RouterStateSnapshot):\n        Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n        return this.canActivate(childRoute, state);\n    }\n\n    isLogin(): Observable<Profile> {\n        return this.sessionService.getProfile();\n    }\n}\n","import {\n    HttpEvent,\n    HttpInterceptor,\n    HttpHandler,\n    HttpRequest,\n} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SessionInterceptor implements HttpInterceptor {\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.url.startsWith('/api')) {\n            let token = '';\n            const profile = localStorage.getItem('profile');\n            if (profile !== null) {\n                token = JSON.parse(profile).token;\n            }\n            const currentLanguage = localStorage.getItem('currentLanguage');\n            const clonedRequest = req.clone({\n                headers: req.headers.set('Authorization', 'bearer ' + token),\n                params: req.params.set('l', currentLanguage)\n            });\n            return next.handle(clonedRequest);\n        }\n        return next.handle(req);\n    }\n}\n","export class SessionUser {\n    userId: string;\n    name: string;\n    token: string;\n    isActive: boolean;\n    email: string;\n    language: string;\n}\n\nexport class Profile {\n    user: SessionUser;\n    token: string;\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Profile} from './session-user';\nimport {Observable} from 'rxjs';\n\nconst queryKey = 'profile';\nconst profileUrl = '/api/auth/profile/';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SessionService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    cacheProfile(profile: Profile) {\n        localStorage.setItem(queryKey, JSON.stringify(profile));\n    }\n\n    getCacheProfile(): Profile {\n        const profile = localStorage.getItem(queryKey);\n        if (profile !== null) {\n            return JSON.parse(profile);\n        }\n        return null;\n    }\n\n    getProfile(): Observable<Profile> {\n        return this.http.get<Profile>(profileUrl);\n    }\n\n    clear() {\n        localStorage.removeItem(queryKey);\n    }\n}\n","export abstract class BaseModel {\n    createdAt: string;\n    updatedAt: string;\n}\n\n\nexport abstract class BaseRequest {\n    name: string;\n}\n","import {BaseModelService} from './BaseModelService';\nimport {EventEmitter, OnInit, Output} from '@angular/core';\nimport {BaseModel} from './BaseModel';\n\nexport abstract class BaseModelComponent<T extends BaseModel> implements OnInit {\n\n    items: T[] = [];\n    page = 1;\n    size = 10;\n    total = 0;\n    loading = true;\n    selected: T[] = [];\n    @Output() createEvent = new EventEmitter();\n    @Output() deleteEvent = new EventEmitter<T[]>();\n    @Output() updateEvent = new EventEmitter<T>();\n\n    protected constructor(protected service: BaseModelService<T>) {\n    }\n\n    ngOnInit(): void {\n        this.refresh();\n    }\n\n    onCreate() {\n        this.createEvent.emit();\n    }\n\n    onDelete() {\n        this.deleteEvent.emit(this.selected);\n    }\n\n    reset() {\n        this.selected = [];\n    }\n\n    onUpdate(item: T) {\n        this.updateEvent.emit(item);\n    }\n\n    refresh() {\n        this.loading = true;\n        this.service.page(this.page, this.size).subscribe(data => {\n            this.items = data.items;\n            this.total = data.total;\n            this.loading = false;\n        });\n    }\n}\n","import {BaseModel, BaseRequest} from './BaseModel';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Page} from './Page';\nimport {Batch} from './Batch';\n\nexport abstract class BaseModelService<T extends BaseModel> {\n\n    baseUrl = '';\n    variable = new Map<string, string>();\n\n    protected constructor(protected http: HttpClient) {\n    }\n\n    list(): Observable<Page<T>> {\n        const url = this.urlHandler();\n        return this.http.get<Page<T>>(url);\n    }\n\n    page(page, size): Observable<Page<T>> {\n        const url = this.urlHandler();\n        const pageUrl = `${url}/?pageNum=${page}&pageSize=${size}`;\n        return this.http.get<Page<T>>(pageUrl);\n    }\n\n    get(name: string): Observable<T> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.get<T>(itemUrl);\n    }\n\n    create(item: BaseRequest): Observable<T> {\n        const url = this.urlHandler();\n        return this.http.post<T>(url, item);\n    }\n\n    update(name: string, item: BaseRequest): Observable<T> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.patch<T>(itemUrl, item);\n    }\n\n    delete(name: string): Observable<any> {\n        const url = this.urlHandler();\n        const itemUrl = `${url}/${name}/`;\n        return this.http.delete<any>(itemUrl);\n    }\n\n    batch(method: string, items: T[]): Observable<any> {\n        const url = this.urlHandler();\n        const batchUrl = `${url}/batch/`;\n        const b = new Batch<T>(method, items);\n        return this.http.post(batchUrl, b);\n    }\n\n    private urlHandler() {\n        let url = this.baseUrl;\n        this.variable.forEach(((k, v) => {\n            if (url.indexOf(`{${k}}`) !== -1) {\n                url = url.replace(`{${k}}`, v);\n            }\n        }));\n        return url;\n    }\n}\n\n","import {BaseModel} from './BaseModel';\n\nexport class Batch<T extends BaseModel> {\n    constructor(operation: string, items: T[]) {\n        this.operation = operation;\n        this.items = items;\n    }\n\n    operation: string;\n    items: T [] = [];\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n    selector: 'app-k8s-pagination',\n    templateUrl: './k8s-pagination.component.html',\n    styleUrls: ['./k8s-pagination.component.css']\n})\nexport class K8sPaginationComponent implements OnInit {\n\n    page = 1;\n    @Output() pageChange = new EventEmitter();\n    @Input() continueToken = '';\n    @Output() continueTokenChange = new EventEmitter();\n    @Input() previousToken = '';\n    @Input() nextToken = '';\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n    }\n\n    onNext() {\n        console.log(this.nextToken);\n        this.page++;\n        this.previousToken = this.continueToken;\n        this.continueToken = this.nextToken;\n        this.continueTokenChange.emit(this.continueToken);\n        this.pageChange.emit();\n    }\n\n    onPrevious() {\n        this.page--;\n        this.continueToken = this.previousToken;\n        this.continueTokenChange.emit(this.continueToken);\n        this.pageChange.emit();\n    }\n}\n","<span>\n    <button type=\"button\" class=\"btn btn-icon btn-sm\" aria-label=\"home\" (click)=\"onPrevious()\"\n            [disabled]=\"page ==1\">\n                <clr-icon shape=\"angle left\"></clr-icon>\n    </button>\n    {{this.page}}\n    <button type=\"button\" class=\"btn btn-icon btn-sm\" aria-label=\"home\" (click)=\"onNext()\"\n            [disabled]=\"!this.nextToken\">\n                <clr-icon shape=\"angle right\"></clr-icon>\n    </button>\n</span>","import {Component, OnInit} from '@angular/core';\nimport {Alert, AlertLevels} from '../../../layout/common-alert/alert';\nimport {ModalAlertService} from './modal-alert.service';\n\n@Component({\n    selector: 'app-modal-alert',\n    templateUrl: './modal-alert.component.html',\n    styleUrls: ['./modal-alert.component.css']\n})\nexport class ModalAlertComponent implements OnInit {\n\n    msg = '';\n    show = false;\n    currentAlert: Alert;\n    level = '';\n    leftSeconds = 5;\n    defaultLeftTime = 5;\n    defaultInterval = 1000;\n\n    constructor(private modalAlertService: ModalAlertService) {\n    }\n\n    ngOnInit(): void {\n        this.showTip();\n    }\n\n    showTip() {\n        this.modalAlertService.$alertQueue.subscribe(alert => {\n            this.currentAlert = alert;\n            switch (alert.level) {\n                case AlertLevels.SUCCESS:\n                    this.level = 'success';\n                    this.msg = alert.msg;\n                    break;\n                case AlertLevels.ERROR:\n                    this.level = 'danger';\n                    this.msg = alert.msg;\n            }\n            this.show = true;\n            const timer = setInterval(() => {\n                this.leftSeconds--;\n                if (this.leftSeconds < 0 || !this.modalAlertService) {\n                    this.show = false;\n                    clearInterval(timer);\n                    this.leftSeconds = this.defaultLeftTime;\n                }\n            }, this.defaultInterval);\n        });\n    }\n}\n","<clr-alert [clrAlertType]=\"level\" [clrAlertAppLevel]=\"false\" [clrAlertClosed]=\"!show\">\n    <clr-alert-item>\n        <span class=\"alert-text\">\n            {{msg}}\n        </span>\n    </clr-alert-item>\n</clr-alert>","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {Alert, AlertLevels} from '../../../layout/common-alert/alert';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ModalAlertService {\n\n    constructor() {\n    }\n\n    alertQueue = new Subject<Alert>();\n    $alertQueue = this.alertQueue.asObservable();\n\n    showAlert(msg: string, level: AlertLevels) {\n        this.alertQueue.next(new Alert(msg, level));\n    }\n}\n","import {ErrorHandler, Injectable} from '@angular/core';\nimport {CommonAlertService} from '../../layout/common-alert/common-alert.service';\nimport {AlertLevels} from '../../layout/common-alert/alert';\nimport {Router} from '@angular/router';\nimport {CommonRoutes} from '../../constant/route';\nimport {AppAlertService} from '../../layout/app-alert/app-alert.service';\n\n@Injectable()\nexport class AppGlobalErrorHandler implements ErrorHandler {\n\n    constructor(private appAlertService: AppAlertService,\n                private commonAlertService: CommonAlertService, private router: Router) {\n    }\n\n    handleError(error) {\n        switch (error.status) {\n            case  401:\n                this.appAlertService.showAlert(error.statusText, AlertLevels.ERROR);\n                this.router.navigateByUrl(CommonRoutes.LOGIN).then(r => console.log('logout success'));\n                break;\n            case 400:\n            case 500:\n                this.commonAlertService.showAlert(error.statusText, AlertLevels.ERROR);\n        }\n    }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n    name: 'zoneStatus'\n})\nexport class ZoneStatusPipe implements PipeTransform {\n\n    transform(value: unknown, ...args: unknown[]): unknown {\n        let result = '';\n        if (value) {\n            switch (value) {\n                case 'READY':\n                    result = '就绪';\n                    break;\n                case 'INITIALIZING':\n                    result = '初始化中';\n                    break;\n                case 'UPLOADIMAGEERROR':\n                    result = '上传镜像失败';\n                    break;\n            }\n        }\n        return result;\n    }\n}\n\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CoreModule} from '../core/core.module';\nimport {ModalAlertComponent} from './common-component/modal-alert/modal-alert.component';\nimport {K8sPaginationComponent} from './common-component/k8s-pagination/k8s-pagination.component';\nimport {ZoneStatusPipe} from './pipe/zone-status.pipe';\n\n\n@NgModule({\n    declarations: [ModalAlertComponent, K8sPaginationComponent, ZoneStatusPipe],\n    exports: [\n        ModalAlertComponent,\n        K8sPaginationComponent,\n        ZoneStatusPipe\n    ],\n    imports: [\n        CommonModule,\n        CoreModule\n    ]\n})\nexport class SharedModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}